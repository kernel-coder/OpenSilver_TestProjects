<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OpenRiaServices.DomainServices.Tools</name>
    </assembly>
    <members>
        <member name="T:OpenRiaServices.DomainServices.Tools.AppDomainUtilities">
            <summary>
            Utilities related to configuring an <see cref="T:System.AppDomain"/>
            that will have Silverlight assemblies loaded into it.
            </summary>
            <remarks>
            This class implements logic specific to handling Silverlight assembly
            versioning to allow referenced Silverlight assemblies to be loaded
            and examined properly.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.FrameworkManifestKey">
            <summary>
            The key to use for storing the framework manifest as data on
            the <see cref="T:System.AppDomain"/> through <see cref="M:System.AppDomain.SetData(System.String,System.Object)"/>
            and retrieving it through <see cref="M:System.AppDomain.GetData(System.String)"/>.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.ConfigureAppDomain(OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)">
            <summary>
            Creates an <see cref="T:System.AppDomain"/> configured for Silverlight code generation.
            </summary>
            <param name="options">The code generation options.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.GetSilverlightFrameworkManifest(System.String)">
            <summary>
            Gets the list of Silverlight assemblies found in the manifest within the specified
            Silverlight framework directory.
            </summary>
            <param name="silverlightFrameworkDirectory">The directory containing the Silverlight framework manifest.</param>
            <returns>The list of assemblies that are part of the Silverlight runtime.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.GetFrameworkManifest(System.String)">
            <summary>
            Gets the list of Portable assemblies found for the specified directory
            </summary>
            <param name="frameworkDirectory">The directory containing the Silverlight framework manifest.</param>
            <returns>The list of assemblies that are part of the Silverlight runtime.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.ResolveFrameworkAssemblyVersioning(System.Object,System.ResolveEventArgs)">
            <summary>
            An event handler for resolving Silverlight framework assembly versioning.
            </summary>
            <remarks>
            When a previous version of a Silverlight assembly is sought, the targeted version
            of that Silverlight assembly will be returned.
            </remarks>
            <param name="sender">The event sender.</param>
            <param name="args">The assembly resolution event arguments.</param>
            <returns>The <see cref="T:System.Reflection.Assembly"/> from the targeted version of Silverlight, or <c>null</c>.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.FrameworkManifestEntry">
            <summary>
            A framework manifest entry with assembly name parts.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.AppDomainUtilities.FrameworkManifest">
            <summary>
            Represents the framework manifest with its System version and
            the list of framework assemblies.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.AssemblyUtilities">
            <summary>
            Assembly level utilities.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.SetAssemblyResolver(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>
            Creates a dictionary of assemblyNames and assemblies and sets the AssemblyResolver for the current AppDomain.
            </summary>
            <param name="assemblies">List of loaded assemblies</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.CurrentDomain_AssemblyResolveEventHandler(System.Object,System.ResolveEventArgs)">
            <summary>
            <see cref="E:System.AppDomain.AssemblyResolve"/> Event handler to handle the cases when we cannot load
            assemblies because of the differences in load context. We go through the list of loaded assemblies
            and return the assembly if we find it.
            </summary>
            <param name="sender">The caller object</param>
            <param name="args">The resolve event arguments containing the information about the assembly to be resolved</param>
            <returns>The <see cref="T:System.Reflection.Assembly"/> if found and <c>null</c> otherwise</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.LoadAssembly(System.String,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Loads the specified assembly file.
            </summary>
            <param name="assemblyFileName">The full path to the file of the assembly to load.  It cannot be null.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and an error message will have been logged).
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.LoadAssembly(System.Reflection.AssemblyName,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Loads the specified assembly by name.
            </summary>
            <param name="assemblyName">The name of the assembly to load.  It cannot be null.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and an error message will have been logged).
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.ReflectionOnlyLoadReferences(System.Reflection.Assembly,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.Dictionary{System.String,System.Reflection.Assembly},System.Boolean,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Does a "reflection only load" of all the reference assemblies for the given <paramref name="assembly"/>
            </summary>
            <param name="assembly">The assembly whose references need to be loaded.</param>
            <param name="assemblySearchPaths">Optional list of folders to search for assembly references.</param>
            <param name="loadedAssemblies">Dictionary to track already loaded assemblies.</param>
            <param name="recursive">If <c>true</c> recursively load references from the references.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns><c>true</c> means all loads succeeded, <c>false</c> means some errors occurred and were logged.
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.ReflectionOnlyLoad(System.Reflection.AssemblyName,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IDictionary{System.String,System.Reflection.Assembly},OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Does a "reflection only load" of the given <paramref name="assemblyName"/>.
            </summary>
            <param name="assemblyName">The name of the assembly to load.</param>
            <param name="assemblySearchPaths">Optional list of folders to search for assembly references.</param>
            <param name="loadedAssemblies">Dictionary to track already loaded assemblies.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and a warning message will have been logged).
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.ReflectionOnlyLoadFrom(System.String,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Does a "reflection only load" from the given assembly file.
            </summary>
            <param name="assemblyFileName">The full path to the file of the assembly to load.</param>
            <param name="logger">The optional logger to use to report known load failures.</param>
            <returns>The loaded <see cref="T:System.Reflection.Assembly"/> if successful, null if it could not be loaded for a known reason
            (and an error message will have been logged).
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.ReflectionOnlyLoadFromSearchPaths(System.Reflection.AssemblyName,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Attempts to load the specified <paramref name="assemblyName"/> by searching through
            the specified <paramref name="assemblySearchPaths"/>. The first successful load is returned.
            </summary>
            <param name="assemblyName">The assembly to locate.</param>
            <param name="assemblySearchPaths">List of full paths to folders to search.</param>
            <returns><c>null</c> for failure, else the first assembly loaded.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.GetExportedTypes(System.Reflection.Assembly,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Standard implementation of <see cref="M:System.Reflection.Assembly.GetExportedTypes"/>
            with autorecovery and logging of common error conditions.
            </summary>
            <param name="assembly">The assembly whose exported types are needed</param>
            <param name="logger">Optional logger to use to report problems.</param>
            <returns>The collection of types.  It may be empty but it will not be null.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AssemblyUtilities.IsAssemblyMsCorlib(System.Reflection.AssemblyName)">
            <summary>
            Determines whether the given assembly is mscorlib
            </summary>
            <param name="assemblyName">assembly name to test</param>
            <returns><c>true</c> if the assembly is mscorlib</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CleanOpenRiaClientFilesTask">
            <summary>
            Custom MSBuild task to delete all generated files created by <see cref="T:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask"/>
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CleanOpenRiaClientFilesTask.ExecuteInternal">
            <summary>
            Internal implementation of <see cref="M:Microsoft.Build.Framework.ITask.Execute"/> called from base class.
            </summary>
            <returns><c>true</c> if task succeeds</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CleanOpenRiaClientFilesTask.DeletePreviouslyWrittenFiles">
            <summary>
            Deletes all the generated files from a prior pass
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher">
            <summary>
            Stateless dispatcher class that discovers and invokes the appropriate
            code generator for a specified <see cref="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions"/>.
            </summary>
            <remarks>
            This class is <see cref="T:System.MarshalByRefObject"/> so that it can be invoked across
            AppDomain boundaries.</remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher"/> class.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.GenerateCode(OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions,OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters,OpenRiaServices.DomainServices.Tools.ILoggingService,System.String)">
            <summary>
            Generates client proxy source code using the generator specified by <paramref name="codeGeneratorName"/>.
            </summary>
            <param name="options">The options to use for code generation.</param>
            <param name="parameters">The parameters required to create the <see cref="T:OpenRiaServices.DomainServices.Tools.ISharedCodeService"/>.</param>
            <param name="loggingService">The service to use for logging.</param>
            <param name="codeGeneratorName">Optional generator name.  A <c>null</c> or empty value will select the default generator.</param>
            <returns>The generated source code or <c>null</c> if none was generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.LoadOpenRiaServicesServerAssembly(OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters,OpenRiaServices.DomainServices.Tools.ILoggingService)">
            <summary>
            Tries to loads the OpenRiaServices.DomainServices.Server assembly from the server projects references.
            </summary>
            <param name="parameters">The parameters.</param>
            <param name="loggingService">The logging service.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.GenerateCode(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Generates client proxy source code using the specified <paramref name="codeGeneratorName"/> in the context
            of the specified <paramref name="host"/>.
            </summary>
            <param name="host">The host for code generation.</param>
            <param name="options">The options to use for code generation.</param>
            <param name="assembliesToLoad">The set of server assemblies to use for analysis and composition.</param>
            <param name="codeGeneratorName">Optional generator name.  A <c>null</c> or empty value will select the default generator.</param>
            <returns>The generated source code or <c>null</c> if none was generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.GenerateCode(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions,System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Generates client proxy source code using the specified <paramref name="codeGeneratorName"/> in the context
            of the specified <paramref name="host"/>.
            </summary>
            <param name="host">The host for code generation.</param>
            <param name="options">The options to use for code generation.</param>
            <param name="domainServiceTypes">The set of <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> types for which to generate code.</param>
            <param name="compositionAssemblies">The optional set of assemblies to use to create the MEF composition container.</param>
            <param name="codeGeneratorName">Optional generator name.  A <c>null</c> or empty value will select the default generator.</param>
            <returns>The generated source code or <c>null</c> if none was generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.GenerateCode(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions,OpenRiaServices.DomainServices.Tools.DomainServiceCatalog,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Generates client proxy source code using the specified <paramref name="codeGeneratorName"/> in the context
            of the specified <paramref name="host"/>.
            </summary>
            <param name="host">The host for code generation.</param>
            <param name="options">The options to use for code generation.</param>
            <param name="catalog">The catalog containing the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> types.</param>
            <param name="compositionAssemblies">The optional set of assemblies to use to create the MEF composition container.</param>
            <param name="codeGeneratorName">Optional generator name.  A <c>null</c> or empty value will select the default generator.</param>
            <returns>The generated source code or <c>null</c> if none was generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.FindCodeGenerator(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Locates and returns the <see cref="T:OpenRiaServices.DomainServices.Tools.IDomainServiceClientCodeGenerator"/> to use to generate client proxies
            for the specified <paramref name="options"/>.
            </summary>
            <param name="host">The host for code generation.</param>
            <param name="options">The options to use for code generation.</param>
            <param name="compositionAssemblies">The optional set of assemblies to use to create the MEF composition container.</param>
            <param name="codeGeneratorName">Optional generator name.  A <c>null</c> or empty value will select the default generator.</param>
            <returns>The code generator to use, or <c>null</c> if a matching one could not be found.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.CreateCompositionContainer(System.Collections.Generic.IEnumerable{System.String},OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Creates the MEF composition container to use for code generation.
            </summary>
            <remarks>
            This container is constructed from the specified set of <paramref name="compositionAssemblyPaths"/>
            and serves as the context in which to find code generators.
            </remarks>
            <param name="compositionAssemblyPaths">Optional set of assembly locations to add to container.</param>
            <param name="logger"><see cref="T:OpenRiaServices.DomainServices.Tools.ILogger"/> instance to report issues.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationDispatcher.GetCompositionAssemblies(System.Collections.Generic.IEnumerable{System.String},OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Returns the full set of <see cref="T:System.Reflection.Assembly"/> instances from which to build the MEF composition container,
            </summary>
            <param name="compositionAssemblyPaths">Optional set of assembly locations to include.</param>
            <param name="logger"><see cref="T:OpenRiaServices.DomainServices.Tools.ILogger"/> instance to report issues.</param>
            <returns>The set of <see cref="T:System.Reflection.Assembly"/> instances to use.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions">
            <summary>
            Class to hold options used for
            <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>
            client code generation.
            </summary>
            <remarks>
            This is a data class and has no behavior.  It is used solely to package
            the code generation options.
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.Language">
            <summary>
            Gets or sets the language for code generation.  Cannot be null or empty.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.ClientFrameworkPath">
            <summary>
            Gets or sets the full path to the targeted framework for the client
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.ServerProjectPath">
            <summary>
            Gets or sets the full path to the server's project file
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.ClientProjectPath">
            <summary>
            Gets or sets the full path to the client's project file
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.ClientRootNamespace">
            <summary>
            Gets or sets the root namespace of the target project. If it's not null or empty, 
            the code generator will try to change generated namespaces in such a way that the client and
            server namespaces match. Use this to get correct code generation for Visual Basic projects 
            with nonempty root namespace.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.ServerRootNamespace">
            <summary>
            Gets or sets the root namespace of the server project. If it's not null or empty, 
            the code generator will try to change generated namespaces in such a way that the client and
            server namespaces match. Use this to get correct code generation for Visual Basic projects 
            with nonempty root namespace.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.IsApplicationContextGenerationEnabled">
            <summary>
            Gets or sets a value indicating whether to perform application-level codegen.
            </summary>
            <remarks>
            This property controls whether codegen occurs for classes that are not directly
            tied to domain services. This list of classes currently includes <c>WebContext</c>.
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.ClientProjectTargetPlatform">
            <summary>
            Gets or sets a value the target platform of the client.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions.UseFullTypeNames">
            <summary>
            Gets or sets a value indicating whether fully qualified type names
            should be used during code generation
            </summary>
            <remarks>
            If <c>false</c> the code generator will generate only short type names
            and add import statements.  If <c>true</c> the code generator will always
            generate fully qualified type names and avoid adding unnecessary imports.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCompileUnit"/> class and optimizes it for client proxy generation.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.#ctor(OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)">
            <summary>
            Default constructor accepting the current <see cref="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions"/> context.
            </summary>
            <param name="options">The current <see cref="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions"/> options.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.IsCSharp">
            <summary>
            Gets a value indicating whether or not the <see cref="T:System.CodeDom.CodeCompileUnit"/> will be
            emitted to a C# code.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.UseFullTypeNames">
            <summary>
            Gets a value indicating whether or not the <see cref="T:System.CodeDom.CodeCompileUnit"/> is 
            generating types using full type names.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.ClientRootNamespace">
            <summary>
            Gets the root namespace.  (For use with Visual Basic codegen only.)
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeNamespaceCollection(System.CodeDom.CodeNamespaceCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceCollection"/>.
            </summary>
            <param name="codeNamespaceCollection">The <see cref="T:System.CodeDom.CodeNamespaceCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeNamespaceImportCollection(System.CodeDom.CodeNamespaceImportCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/>.
            </summary>
            <param name="codeNamespaceImportCollection">The <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeTypeDeclarationCollection(System.CodeDom.CodeTypeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/>.
            </summary>
            <param name="codeTypeDeclarationCollection">The <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeAttributeDeclarationCollection(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>.
            </summary>
            <param name="codeAttributeDeclarationCollection">The <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.VisitCodeTypeReference(System.CodeDom.CodeTypeReference)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReference"/>.
            </summary>
            <param name="codeTypeReference">The <see cref="T:System.CodeDom.CodeTypeReference"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.GetAttributeId(System.CodeDom.CodeAttributeDeclaration)">
            <summary>
            Gets a unique identifier for a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> instance.
            </summary>
            <param name="attribute">The <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> instance.</param>
            <returns>A unique identifier for a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> instance.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.FixUpNamespaceRootNamespace(System.CodeDom.CodeNamespace)">
            <summary>
            Fixes up a <see cref="T:System.CodeDom.CodeNamespace"/>.  (For use with Visual Basic codegen.)
            </summary>
            <param name="ns">The <see cref="T:System.CodeDom.CodeNamespace"/> to fix.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.NamespaceImportComparer">
            <summary>
            Nested type used to sort import statements, giving preference to System assemblies.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ClientProxyFixupCodeDomVisitor.NamespaceImportComparer.Compare(System.String,System.String)">
            <summary>
            Compares two string values and returns a value indicating the preferred sort order.
            </summary>
            <param name="x">A string value to compare against.</param>
            <param name="y">A string value to compare.</param>
            <returns>-1 if the <paramref name="x"/> value is less, 0 if the values are equal, 1 if <paramref name="y"/> is less.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator">
            <summary>
            Helper base class to generate the client proxy code using a combination of Reflection and CodeDom
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.fixedImports">
            <summary>
            These imports will be added to all namespaces generated in the client proxy file
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.#ctor">
            <summary>
            Creates a new instance.
            </summary>
            <remarks>
            This form of the constructor exists to allow construction by the <see cref="T:System.Web.Compilation.ClientBuildManager"/> to
            create an ASP.NET app domain.  Callers of this contructor must call <see cref="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.Initialize(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Server.DomainServiceDescription},OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)"/> after instantiation before using
            this instance.
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.ClientProxyCodeGenerationOptions">
            <summary>
            Gets the options used to initialize this context.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.IsCSharp">
            <summary>
            Gets a value indicating whether or not this instance is generating C# code.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.IsVB">
            <summary>
            Gets a value indicating whether or not this instance is generating Visual basic code.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.GetOrGenNamespace(System.String)">
            <summary>
            Generates a new CodeNamespace or reuses an existing one of the given name.
            </summary>
            <param name="namespaceName">The namespace name. <c>null</c> is allowed.</param>
            <returns>namespace with the given name.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.GetNamespace(System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Gets the <see cref="T:System.CodeDom.CodeNamespace"/> for a <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.
            </summary>
            <param name="typeDecl">A <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.</param>
            <returns>A <see cref="T:System.CodeDom.CodeNamespace"/> or null.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.GetOrGenNamespace(System.Type)">
            <summary>
            Generates a new CodeNamespace or reuses an existing one of the given name correponding to the namespace
            of the given type.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to get or generate a <see cref="T:System.CodeDom.CodeNamespace"/> for.</param>
            <returns><see cref="T:System.CodeDom.CodeNamespace"/> with the given type's namespace.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.GetDomainContextTypeMemberShareKind(OpenRiaServices.DomainServices.Server.DomainServiceDescription)">
            <summary>
            Gets the <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> of the DomainContext type we wish to generate
            to determine whether it already exists in the client project
            </summary>
            <param name="domainServiceDescription">Description of the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> whose DomainContext being probed.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> that describes whether a DomainContext of that name exists in the client's scope already.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.RegisterUseOfEnumType(System.Type)">
            <summary>
            Registers that the given <paramref name="enumType"/>
            will be referenced in code generation.  This will cause that
            type to be registered for deferred generation if we determine
            that is required.
            </summary>
            <param name="enumType">The type of an enum we need to generate.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.GenerateAllEnumTypes">
            <summary>
            Generates all the enum type declarations we have determined
            are necessary in the client code.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CanExposeEnumType(System.Type,System.String@)">
            <summary>
            Determines whether the given enum type may be exposed to the client
            proxy classes.
            </summary>
            <param name="enumType">The enum type to test.</param>
            <param name="errorMessage">The error message that describes the problem (if <c>false</c> is returned).</param>
            <returns><c>true</c> if the proxy classes can legally refer to this enum type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.NeedToGenerateEnumType(System.Type)">
            <summary>
            Determines whether the given <paramref name="enumType"/>
            must be generated in client code in order to generate
            references to it.
            </summary>
            <remarks>
            This method checks whether the enum type is already visible
            to the client via shared source files or assembly references.
            </remarks>
            <param name="enumType">The enum type in question.</param>
            <returns><c>true</c> if it's necessary to generate the enum, 
            <c>false</c> if it was detected as being visible to the client project.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.GenerateDataContractTypes(System.Collections.Generic.IEnumerable{System.Type},System.Collections.Generic.List{System.Type},System.String,System.Action{System.Type})">
            <summary>
            Generates a data contract type (entity or complex type).
            </summary>
            <param name="typesToGenerate">The enumerable of types to generate.</param>
            <param name="generatedTypes">The types already generated. This keeps track of
            types we've generated across domain service instances.</param>
            <param name="sharedError">The error to emit if the type is visible through a reference.</param>
            <param name="generateType">The method that code gens the type.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.ValidateOptions(OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)">
            <summary>
            Validates whether the given <see cref="T:OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions"/> options are correct.
            </summary>
            <param name="clientProxyCodeGenerationOptions">Options to validate</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.EnsureInitialized">
            <summary>
            Validates the <see cref="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.Initialize(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Server.DomainServiceDescription},OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)"/> method was called before attempting to use this instance.
            </summary>
            <remarks>
            <see cref="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.Initialize(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Server.DomainServiceDescription},OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)"/> is called from the normal ctor, but it is bypassed when the parameterless
            ctor is used to instantiate this in another AppDomain using the parameterless ctor.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.InvokeDomainServiceCodeProcessor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem)">
            <summary>
            Examines a <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> to discover and invoke <see cref="T:OpenRiaServices.DomainServices.Server.CodeProcessor"/> types.
            </summary>
            <param name="workItem">The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem"/> unit of work.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.FixupVBOptionStatements(System.String)">
            <summary>
            This method adds explicity VB Option statements:
            Option Explicit On
            Option Strict On
            Option Infer On
            Option Compare Binary
            </summary>
            <remarks>
            The VBCodeProvider automatically adds the Option Explicit and Strict to the generaged code and it
            has an undocumented way to explicitly set these two options:
            
             ' Option Strict On
             CompileUnit.UserData.Add("AllowLateBound", False)
             ' Option Explicit On
             CompileUnit.UserData.Add("RequireVariableDeclaration", True)
             
            but it does not generate the Option Infer and Compare code and provides no way to do it.
            This method provides a work-around this limitation and for code clarity we are setting all
            the options in one place.
            
            Setting all these options explicitly serves two purposes:
            - make sure the generated code is type-safe and 
            - reduce the test matrix particularly since the VB designer allows for setting these options at
              project level.
            </remarks>
            <param name="code">the VB code</param>
            <returns>the fixed up VB code</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.PreprocessProxyTypes">
            <summary>
            Preprocesses DomainService and Entity type names to enforce nesting restrictions and avoid conflicts later in codegen.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.RegisterTypeName(System.Type,System.String)">
            <summary>
            Registers an individual type name with the underlying codegen infrastructure.
            </summary>
            <param name="type">The type to register.</param>
            <param name="containingNamespace">The containing namespace.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem">
            <summary>
            Used to queue up <see cref="T:OpenRiaServices.DomainServices.Server.CodeProcessor"/> work items.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.#ctor(System.Type,OpenRiaServices.DomainServices.Server.DomainServiceDescription,System.Collections.Generic.Dictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Default constructor.
            </summary>
            <param name="codeProcessorType">The <see cref="T:OpenRiaServices.DomainServices.Server.CodeProcessor"/> <see cref="T:System.Type"/>.</param>
            <param name="domainServiceDescription">The <see cref="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.DomainServiceDescription"/> associated with the provided <paramref name="codeProcessorType"/>.</param>
            <param name="typeMapping">The type-mapping that will be provided to the <see cref="T:OpenRiaServices.DomainServices.Server.CodeProcessor"/>.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.CodeProcessorType">
            <summary>
            Gets the <see cref="T:OpenRiaServices.DomainServices.Server.CodeProcessor"/> <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.DomainServiceDescription">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.DomainServiceDescription"/> associated with <see cref="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.CodeProcessorType"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator.CodeProcessorWorkItem.TypeMapping">
            <summary>
            Gets the <see cref="T:OpenRiaServices.DomainServices.Server.CodeProcessor"/> type-mapping.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CodeDomVisitor">
            <summary>
            Visits a CodeCompileUnit class.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.Visit(System.CodeDom.CodeCompileUnit)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCompileUnit"/>.
            </summary>
            <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitBase(System.CodeDom.CodeCompileUnit)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCompileUnit"/>.
            </summary>
            <param name="codeCompileUnit">The <see cref="T:System.CodeDom.CodeCompileUnit"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeArgumentReferenceExpression(System.CodeDom.CodeArgumentReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeArgumentReferenceExpression"/>.
            </summary>
            <param name="codeArgumentReferenceExpression">The <see cref="T:System.CodeDom.CodeArgumentReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeArrayCreateExpression(System.CodeDom.CodeArrayCreateExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeArrayCreateExpression"/>.
            </summary>
            <param name="codeArrayCreateExpression">The <see cref="T:System.CodeDom.CodeArrayCreateExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeArrayIndexerExpression(System.CodeDom.CodeArrayIndexerExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeArrayIndexerExpression"/>.
            </summary>
            <param name="codeArrayIndexerExpression">The <see cref="T:System.CodeDom.CodeArrayIndexerExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeAssignStatement(System.CodeDom.CodeAssignStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAssignStatement"/>.
            </summary>
            <param name="codeAssignStatement">The <see cref="T:System.CodeDom.CodeAssignStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeAttachEventStatement(System.CodeDom.CodeAttachEventStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttachEventStatement"/>.
            </summary>
            <param name="codeAttachEventStatement">The <see cref="T:System.CodeDom.CodeAttachEventStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeAttributeArgument(System.CodeDom.CodeAttributeArgument)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeArgument"/>.
            </summary>
            <param name="codeAttributeArgument">The <see cref="T:System.CodeDom.CodeAttributeArgument"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeAttributeArgumentCollection(System.CodeDom.CodeAttributeArgumentCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeArgumentCollection"/>.
            </summary>
            <param name="codeAttributeArgumentCollection">The <see cref="T:System.CodeDom.CodeAttributeArgumentCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeAttributeDeclaration(System.CodeDom.CodeAttributeDeclaration)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/>.
            </summary>
            <param name="codeAttributeDeclaration">The <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeAttributeDeclarationCollection(System.CodeDom.CodeAttributeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>.
            </summary>
            <param name="codeAttributeDeclarationCollection">The <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeBaseReferenceExpression(System.CodeDom.CodeBaseReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeBaseReferenceExpression"/>.
            </summary>
            <param name="codeBaseReferenceExpression">The <see cref="T:System.CodeDom.CodeBaseReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeBinaryOperatorExpression(System.CodeDom.CodeBinaryOperatorExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeBinaryOperatorExpression"/>.
            </summary>
            <param name="codeBinaryOperatorExpression">The <see cref="T:System.CodeDom.CodeBinaryOperatorExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeCastExpression(System.CodeDom.CodeCastExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCastExpression"/>.
            </summary>
            <param name="codeCastExpression">The <see cref="T:System.CodeDom.CodeCastExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeCatchClause(System.CodeDom.CodeCatchClause)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCatchClause"/>.
            </summary>
            <param name="codeCatchClause">The <see cref="T:System.CodeDom.CodeCatchClause"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeCatchClauseCollection(System.CodeDom.CodeCatchClauseCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCatchClauseCollection"/>.
            </summary>
            <param name="codeCatchClauseCollection">The <see cref="T:System.CodeDom.CodeCatchClauseCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeChecksumPragma(System.CodeDom.CodeChecksumPragma)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeChecksumPragma"/>.
            </summary>
            <param name="codeChecksumPragma">The <see cref="T:System.CodeDom.CodeChecksumPragma"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeComment(System.CodeDom.CodeComment)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeComment"/>.
            </summary>
            <param name="codeComment">The <see cref="T:System.CodeDom.CodeComment"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeCommentStatement(System.CodeDom.CodeCommentStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCommentStatement"/>.
            </summary>
            <param name="codeCommentStatement">The <see cref="T:System.CodeDom.CodeCommentStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeCommentStatementCollection(System.CodeDom.CodeCommentStatementCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeCommentStatementCollection"/>.
            </summary>
            <param name="codeCommentStatementCollection">The <see cref="T:System.CodeDom.CodeCommentStatementCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeConditionStatement(System.CodeDom.CodeConditionStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeConditionStatement"/>.
            </summary>
            <param name="codeConditionStatement">The <see cref="T:System.CodeDom.CodeConditionStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeConstructor(System.CodeDom.CodeConstructor)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeConstructor"/>.
            </summary>
            <param name="codeConstructor">The <see cref="T:System.CodeDom.CodeConstructor"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeDefaultValueExpression(System.CodeDom.CodeDefaultValueExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDefaultValueExpression"/>.
            </summary>
            <param name="codeDefaultValueExpression">The <see cref="T:System.CodeDom.CodeDefaultValueExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeDelegateCreateExpression(System.CodeDom.CodeDelegateCreateExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDelegateCreateExpression"/>.
            </summary>
            <param name="codeDelegateCreateExpression">The <see cref="T:System.CodeDom.CodeDelegateCreateExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeDelegateInvokeExpression(System.CodeDom.CodeDelegateInvokeExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDelegateInvokeExpression"/>.
            </summary>
            <param name="codeDelegateInvokeExpression">The <see cref="T:System.CodeDom.CodeDelegateInvokeExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeDirectionExpression(System.CodeDom.CodeDirectionExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDirectionExpression"/>.
            </summary>
            <param name="codeDirectionExpression">The <see cref="T:System.CodeDom.CodeDirectionExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeDirective(System.CodeDom.CodeDirective)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDirective"/>.
            </summary>
            <param name="codeDirective">The <see cref="T:System.CodeDom.CodeDirective"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeDirectiveCollection(System.CodeDom.CodeDirectiveCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeDirectiveCollection"/>.
            </summary>
            <param name="codeDirectiveCollection">The <see cref="T:System.CodeDom.CodeDirectiveCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeEntryPointMethod(System.CodeDom.CodeEntryPointMethod)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeEntryPointMethod"/>.
            </summary>
            <param name="codeEntryPointMethod">The <see cref="T:System.CodeDom.CodeEntryPointMethod"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeEventReferenceExpression(System.CodeDom.CodeEventReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeEventReferenceExpression"/>.
            </summary>
            <param name="codeEventReferenceExpression">The <see cref="T:System.CodeDom.CodeEventReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeExpression(System.CodeDom.CodeExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeExpression"/>.
            </summary>
            <param name="codeExpression">The <see cref="T:System.CodeDom.CodeExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeExpressionCollection(System.CodeDom.CodeExpressionCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeExpressionCollection"/>.
            </summary>
            <param name="codeExpressionCollection">The <see cref="T:System.CodeDom.CodeExpressionCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeExpressionStatement(System.CodeDom.CodeExpressionStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeExpressionStatement"/>.
            </summary>
            <param name="codeExpressionStatement">The <see cref="T:System.CodeDom.CodeExpressionStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeFieldReferenceExpression(System.CodeDom.CodeFieldReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeFieldReferenceExpression"/>.
            </summary>
            <param name="codeFieldReferenceExpression">The <see cref="T:System.CodeDom.CodeFieldReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeGotoStatement(System.CodeDom.CodeGotoStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeGotoStatement"/>.
            </summary>
            <param name="codeGotoStatement">The <see cref="T:System.CodeDom.CodeGotoStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeIndexerExpression(System.CodeDom.CodeIndexerExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeIndexerExpression"/>.
            </summary>
            <param name="codeIndexerExpression">The <see cref="T:System.CodeDom.CodeIndexerExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeIterationStatement(System.CodeDom.CodeIterationStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeIterationStatement"/>.
            </summary>
            <param name="codeIterationStatement">The <see cref="T:System.CodeDom.CodeIterationStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeLabeledStatement(System.CodeDom.CodeLabeledStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeLabeledStatement"/>.
            </summary>
            <param name="codeLabeledStatement">The <see cref="T:System.CodeDom.CodeLabeledStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeLinePragma(System.CodeDom.CodeLinePragma)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeLinePragma"/>.
            </summary>
            <param name="codeLinePragma">The <see cref="T:System.CodeDom.CodeLinePragma"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMemberEvent(System.CodeDom.CodeMemberEvent)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberEvent"/>.
            </summary>
            <param name="codeMemberEvent">The <see cref="T:System.CodeDom.CodeMemberEvent"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMemberField(System.CodeDom.CodeMemberField)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberField"/>.
            </summary>
            <param name="codeMemberField">The <see cref="T:System.CodeDom.CodeMemberField"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMemberMethod(System.CodeDom.CodeMemberMethod)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberMethod"/>.
            </summary>
            <param name="codeMemberMethod">The <see cref="T:System.CodeDom.CodeMemberMethod"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMemberProperty(System.CodeDom.CodeMemberProperty)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMemberProperty"/>.
            </summary>
            <param name="codeMemberProperty">The <see cref="T:System.CodeDom.CodeMemberProperty"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMethodInvokeExpression(System.CodeDom.CodeMethodInvokeExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMethodInvokeExpression"/>.
            </summary>
            <param name="codeMethodInvokeExpression">The <see cref="T:System.CodeDom.CodeMethodInvokeExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMethodReferenceExpression(System.CodeDom.CodeMethodReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMethodReferenceExpression"/>.
            </summary>
            <param name="codeMethodReferenceExpression">The <see cref="T:System.CodeDom.CodeMethodReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeMethodReturnStatement(System.CodeDom.CodeMethodReturnStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeMethodReturnStatement"/>.
            </summary>
            <param name="codeMethodReturnStatement">The <see cref="T:System.CodeDom.CodeMethodReturnStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeNamespace(System.CodeDom.CodeNamespace)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespace"/>.
            </summary>
            <param name="codeNamespace">The <see cref="T:System.CodeDom.CodeNamespace"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeNamespaceCollection(System.CodeDom.CodeNamespaceCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceCollection"/>.
            </summary>
            <param name="codeNamespaceCollection">The <see cref="T:System.CodeDom.CodeNamespaceCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeNamespaceImport(System.CodeDom.CodeNamespaceImport)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceImport"/>.
            </summary>
            <param name="codeNamespaceImport">The <see cref="T:System.CodeDom.CodeNamespaceImport"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeNamespaceImportCollection(System.CodeDom.CodeNamespaceImportCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/>.
            </summary>
            <param name="codeNamespaceImportCollection">The <see cref="T:System.CodeDom.CodeNamespaceImportCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeObjectCreateExpression(System.CodeDom.CodeObjectCreateExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeObjectCreateExpression"/>.
            </summary>
            <param name="codeObjectCreateExpression">The <see cref="T:System.CodeDom.CodeObjectCreateExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeParameterDeclarationExpression(System.CodeDom.CodeParameterDeclarationExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeParameterDeclarationExpression"/>.
            </summary>
            <param name="codeParameterDeclarationExpression">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeParameterDeclarationExpressionCollection(System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection"/>.
            </summary>
            <param name="codeParameterDeclarationExpressionCollection">The <see cref="T:System.CodeDom.CodeParameterDeclarationExpressionCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodePrimitiveExpression(System.CodeDom.CodePrimitiveExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodePrimitiveExpression"/>.
            </summary>
            <param name="codePrimitiveExpression">The <see cref="T:System.CodeDom.CodePrimitiveExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodePropertyReferenceExpression(System.CodeDom.CodePropertyReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodePropertyReferenceExpression"/>.
            </summary>
            <param name="codePropertyReferenceExpression">The <see cref="T:System.CodeDom.CodePropertyReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodePropertySetValueReferenceExpression(System.CodeDom.CodePropertySetValueReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodePropertySetValueReferenceExpression"/>.
            </summary>
            <param name="codePropertySetValueReferenceExpression">The <see cref="T:System.CodeDom.CodePropertySetValueReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeRegionDirective(System.CodeDom.CodeRegionDirective)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeRegionDirective"/>.
            </summary>
            <param name="codeRegionDirective">The <see cref="T:System.CodeDom.CodeRegionDirective"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeRemoveEventStatement(System.CodeDom.CodeRemoveEventStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeRemoveEventStatement"/>.
            </summary>
            <param name="codeRemoveEventStatement">The <see cref="T:System.CodeDom.CodeRemoveEventStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeSnippetCompileUnit(System.CodeDom.CodeSnippetCompileUnit)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetCompileUnit"/>.
            </summary>
            <param name="codeSnippetCompileUnit">The <see cref="T:System.CodeDom.CodeSnippetCompileUnit"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeSnippetExpression(System.CodeDom.CodeSnippetExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetExpression"/>.
            </summary>
            <param name="codeSnippetExpression">The <see cref="T:System.CodeDom.CodeSnippetExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeSnippetStatement(System.CodeDom.CodeSnippetStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetStatement"/>.
            </summary>
            <param name="codeSnippetStatement">The <see cref="T:System.CodeDom.CodeSnippetStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeSnippetTypeMember(System.CodeDom.CodeSnippetTypeMember)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeSnippetTypeMember"/>.
            </summary>
            <param name="codeSnippetTypeMember">The <see cref="T:System.CodeDom.CodeSnippetTypeMember"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeStatement(System.CodeDom.CodeStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeStatement"/>.
            </summary>
            <param name="codeStatement">The <see cref="T:System.CodeDom.CodeStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeStatementCollection(System.CodeDom.CodeStatementCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeStatementCollection"/>.
            </summary>
            <param name="codeStatementCollection">The <see cref="T:System.CodeDom.CodeStatementCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeThisReferenceExpression(System.CodeDom.CodeThisReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeThisReferenceExpression"/>.
            </summary>
            <param name="codeThisReferenceExpression">The <see cref="T:System.CodeDom.CodeThisReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeThrowExceptionStatement(System.CodeDom.CodeThrowExceptionStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeThrowExceptionStatement"/>.
            </summary>
            <param name="codeThrowExceptionStatement">The <see cref="T:System.CodeDom.CodeThrowExceptionStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTryCatchFinallyStatement(System.CodeDom.CodeTryCatchFinallyStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement"/>.
            </summary>
            <param name="codeTryCatchFinallyStatement">The <see cref="T:System.CodeDom.CodeTryCatchFinallyStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeConstructor(System.CodeDom.CodeTypeConstructor)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeConstructor"/>.
            </summary>
            <param name="codeTypeConstructor">The <see cref="T:System.CodeDom.CodeTypeConstructor"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeDeclaration(System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.
            </summary>
            <param name="codeTypeDeclaration">The <see cref="T:System.CodeDom.CodeTypeDeclaration"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeDeclarationCollection(System.CodeDom.CodeTypeDeclarationCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/>.
            </summary>
            <param name="codeTypeDeclarationCollection">The <see cref="T:System.CodeDom.CodeTypeDeclarationCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeDelegate(System.CodeDom.CodeTypeDelegate)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeDelegate"/>.
            </summary>
            <param name="codeTypeDelegate">The <see cref="T:System.CodeDom.CodeTypeDelegate"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeMember(System.CodeDom.CodeTypeMember)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeMember"/>.
            </summary>
            <param name="codeTypeMember">The <see cref="T:System.CodeDom.CodeTypeMember"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeMemberCollection(System.CodeDom.CodeTypeMemberCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeMemberCollection"/>.
            </summary>
            <param name="codeTypeMemberCollection">The <see cref="T:System.CodeDom.CodeTypeMemberCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeOfExpression(System.CodeDom.CodeTypeOfExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeOfExpression"/>.
            </summary>
            <param name="codeTypeOfExpression">The <see cref="T:System.CodeDom.CodeTypeOfExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeParameter(System.CodeDom.CodeTypeParameter)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeParameter"/>.
            </summary>
            <param name="codeTypeParameter">The <see cref="T:System.CodeDom.CodeTypeParameter"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeParameterCollection(System.CodeDom.CodeTypeParameterCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeParameterCollection"/>.
            </summary>
            <param name="codeTypeParameterCollection">The <see cref="T:System.CodeDom.CodeTypeParameterCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeReference(System.CodeDom.CodeTypeReference)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReference"/>.
            </summary>
            <param name="codeTypeReference">The <see cref="T:System.CodeDom.CodeTypeReference"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeReferenceCollection(System.CodeDom.CodeTypeReferenceCollection)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReferenceCollection"/>.
            </summary>
            <param name="codeTypeReferenceCollection">The <see cref="T:System.CodeDom.CodeTypeReferenceCollection"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeTypeReferenceExpression(System.CodeDom.CodeTypeReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeTypeReferenceExpression"/>.
            </summary>
            <param name="codeTypeReferenceExpression">The <see cref="T:System.CodeDom.CodeTypeReferenceExpression"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeVariableDeclarationStatement(System.CodeDom.CodeVariableDeclarationStatement)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeVariableDeclarationStatement"/>.
            </summary>
            <param name="codeVariableDeclarationStatement">The <see cref="T:System.CodeDom.CodeVariableDeclarationStatement"/> to visit.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeDomVisitor.VisitCodeVariableReferenceExpression(System.CodeDom.CodeVariableReferenceExpression)">
            <summary>
            Visits a <see cref="T:System.CodeDom.CodeVariableReferenceExpression"/>.
            </summary>
            <param name="codeVariableReferenceExpression">The <see cref="T:System.CodeDom.CodeVariableReferenceExpression"/> to visit.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CodeGenerationHost">
            <summary>
            Internal implementation of <see cref="T:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost"/> used for client
            proxy code generation.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenerationHost.#ctor(OpenRiaServices.DomainServices.Tools.ILoggingService,OpenRiaServices.DomainServices.Tools.ISharedCodeService)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.CodeGenerationHost"/> class.
            </summary>
            <param name="loggingService">The <see cref="T:OpenRiaServices.DomainServices.Tools.ILoggingService"/> object used to report all errors and warnings.</param>
            <param name="sharedCodeService">The <see cref="T:OpenRiaServices.DomainServices.Tools.ISharedCodeService"/> object used to determine which code elements
            are shared between server and client projects.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CodeGenUtilities">
            <summary>
            A collection of code generation utilities.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.Initialize(System.Boolean,System.Boolean,System.String)">
            <summary>
            Clears the static dictionaries used to track type and assembly references.
            </summary>
            <param name="isVisualBasic">A <see cref="T:System.Boolean"/> indicating whether Visual Basic code is being generated.</param>
            <param name="useFullTypeNames">A <see cref="T:System.Boolean"/> indicating whether to generate full type names.</param>
            <param name="rootNamespace">The root namespace used for Visual Basic codegen. Can be null or empty.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeCompliantFieldName(System.String)">
            <summary>
            Helper to generate a field name with a leading underscore and lowercase first letter
            </summary>
            <param name="fieldName">the field name to process</param>
            <returns>a new field name that begins with an underscore and lowercase first letter</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateAttributeDeclaration(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates an attribute declaration based on the specified attribute
            </summary>
            <param name="attributeType">type of the attribute</param>
            <param name="codeGenerator">A <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <returns>the attribute declaration</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeEqualToNull(System.CodeDom.CodeExpression)">
            <summary>
            Generates a test of the given expression against null (e.g. "if (x == null)" or "if (x is nothing)"
            </summary>
            <param name="value">The code expression to test</param>
            <returns>An expression that tests whether the input expression is null</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeNotEqualToNull(System.CodeDom.CodeExpression)">
            <summary>
            Generates a test of the given expression against not being null (e.g. "if (x != null)" or "if (x is nothing) = false"
            </summary>
            <param name="value">The value to test</param>
            <returns>The new code expression containing the test</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeNotEqual(System.Type,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression,System.Boolean)">
            <summary>
            Generates a test to determine if the given expressions are not equal.
            </summary>
            <param name="clrType">The Type of the values being compared.</param>
            <param name="left">The left side of the test.</param>
            <param name="right">The right side of the test.</param>
            <param name="isCSharp">Indicates whether or not the output should be C# specific.</param>
            <returns>A new <see cref="T:System.CodeDom.CodeExpression"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeEqual(System.Type,System.CodeDom.CodeExpression,System.CodeDom.CodeExpression,System.Boolean)">
            <summary>
            Generates a test to determine if the given expressions are equal.
            </summary>
            <param name="clrType">The Type of the values being compared.</param>
            <param name="left">The left side of the test.</param>
            <param name="right">The right side of the test.</param>
            <param name="isCSharp">Indicates whether or not the output should be C# specific.</param>
            <returns>A new <see cref="T:System.CodeDom.CodeExpression"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeDelegateCreateExpression(System.Boolean,System.CodeDom.CodeTypeReference,System.String)">
            <summary>
            Creates an expression for creating a delegate.
            </summary>
            <param name="isCSharp">If this is C#</param>
            <param name="delegateType">The delegate type</param>
            <param name="methodName">The name of the method on 'this' to invoke</param>
            <returns>A CodeExpression that will create a delegate to invoke that method</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.MakeEventRaiseStatement(System.Boolean,System.CodeDom.CodeEventReferenceExpression,System.CodeDom.CodeExpression[])">
            <summary>
            Creates a statement for raising an event.
            </summary>
            <param name="isCSharp">If this is C#.</param>
            <param name="ev">The event to raise.</param>
            <param name="parameters">The parameters to pass when raising the event.</param>
            <returns>The statement that raises the event.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetContractNamespace(System.Type)">
            <summary>
            Gets the data-contract namespace for an entity.
            </summary>
            <param name="entityType">The type of entity.</param>
            <returns>Either the assembly-level contract namespace, or the entity type's CLR namespace.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.TranslateType(System.Type)">
            <summary>
            Performs necessary type translation for the given type.
            This method is called during client proxy generation.
            </summary>
            <param name="type">type to be translated</param>
            <returns>translated type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetDictionaryGenericArgumentTypes(System.Type)">
            <summary>
            Returns an array of types that represent the generic type arguments used in <paramref name="type"/>'s
            implementation of <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            </summary>
            <param name="type">The type to examine.</param>
            <returns>An array of types that represent the generic type arguments used in <paramref name="type"/>'s
            implementation of <see cref="T:System.Collections.Generic.IDictionary`2"/>. Returns null if <paramref name="type"/> does 
            not implement <see cref="T:System.Collections.Generic.IDictionary`2"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetTypeReference(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.
            </summary>
            <param name="type">A CLR type.</param>
            <param name="codeGenerator">A <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetTypeReference(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.
            </summary>
            <param name="type">A CLR type.</param>
            <param name="codeGenerator">A <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <param name="optimizeAttributeName">Indicates whether or not the optimize <see cref="T:System.Attribute"/> names by removing the "Attribute" suffix.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetTypeReference(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Boolean,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.
            </summary>
            <param name="type">A CLR type.</param>
            <param name="codeGenerator">A <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator"/>.</param>
            <param name="referencingType">The referencing type.</param>
            <param name="optimizeAttributeName">Indicates whether or not to optimize <see cref="T:System.Attribute"/> names by removing the "Attribute" suffix.</param>
            <param name="forceUseFullyQualifiedName">Indicates whether or not to generate the type using the fully qualified name irrespective the global setting.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for a CLR type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetTypeReference(System.String,System.String,System.Boolean)">
            <summary>
            Gets a <see cref="T:System.CodeDom.CodeTypeReference"/> for a given <see cref="T:System.Type"/> full name and containing namespace.
            </summary>
            <remarks>
            If <paramref name="userType"/> is <c>true</c>, the <paramref name="typeFullName"/> value will be optimized
            when we are emitting Visual Basic code with a non-null root namespace.
            </remarks>
            <param name="typeFullName">The <see cref="T:System.Type"/> full name.</param>
            <param name="containingNamespace">The namespace that will contain the <paramref name="typeFullName"/> reference.</param>
            <param name="userType">A <see cref="T:System.Boolean"/> indicating whether or not the <paramref name="typeFullName"/> is a user type.</param>
            <returns>A <see cref="T:System.CodeDom.CodeTypeReference"/> for the provided <paramref name="typeFullName"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetSafeTypeName(System.String,System.String,System.Boolean)">
            <summary>
            Returns a <see cref="T:System.Type"/> name that is safe to use.
            </summary>
            <remarks>
            This method is not safe for use with generic types.
            </remarks>
            <param name="typeFullName">The full name of the <see cref="T:System.Type"/>.</param>
            <param name="containingNamespace">The containing namespace.</param>
            <param name="userType">A <see cref="T:System.Boolean"/> indicating whether or not the <paramref name="typeFullName"/> is a user type.</param>
            <returns>A string representing the safe type name.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateTypeDeclaration(System.String,System.String)">
            <summary>
            Creates a type declaration with the specified name.
            </summary>
            <param name="typeName">The name of the type.</param>
            <param name="typeNamespace">The type's namespace.</param>
            <returns>A type declaration.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateTypeDeclaration(System.Type)">
            <summary>
            Creates a type declaration for the specified CLR type.
            </summary>
            <param name="type">The CLR type.</param>
            <returns>A type declaration.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.RegisterTypeName(System.Type,System.String)">
            <summary>
            Checks if a using a <see cref="T:System.Type"/>'s short-name will generate an ambiguous type reference error.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to examine.</param>
            <param name="containingNamespace">The namespace in which to check for <see cref="T:System.Type"/> short-name conflicts.</param>
            <returns>A Boolean indicating whether or not the <see cref="T:System.Type"/> will generate an ambiguous type 
            reference error.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateDataContractAttributeDeclaration(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> for a <see cref="T:System.Runtime.Serialization.DataContractAttribute"/>
            </summary>
            <param name="sourceType">The type to which the attribute will be applied (to use as a reference)</param>
            <param name="codeGenerator">The client proxy generator</param>
            <param name="referencingType">The type referencing this declaration</param>
            <returns>The new attribute declaration</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateDisplayAttributeDeclaration(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> for a <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/>.
            </summary>
            <param name="codeGenerator">The client proxy generator</param>
            <param name="referencingType">The type on whose member <see cref="T:System.ComponentModel.DataAnnotations.DisplayAttribute"/> will be applied</param>
            <returns>The new attribute declaration</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateEnumMemberAttributeDeclaration(System.Reflection.MemberInfo,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration)">
            <summary>
            Creates an attribute declaration for <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/>
            </summary>
            <param name="memberInfo">The member that may contain an existing <see cref="T:System.Runtime.Serialization.EnumMemberAttribute"/></param>
            <param name="codeGenerator">The proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <returns>A new attribute declaration</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.CreateEnumTypeDeclaration(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator)">
            <summary>
            Creates a new <see cref="T:System.CodeDom.CodeTypeDeclaration"/> that is the generated form of
            the given <paramref name="enumType"/>.
            </summary>
            <param name="enumType">The enum type to generate.</param>
            <param name="codeGenerator">The current proxy generator context.</param>
            <returns>The newly generated enum type declaration.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GenerateSummaryCodeComment(System.String,System.Boolean)">
            <summary>
            Generates a (potentially multi-line) Xml doc comment for a Summary element.
            </summary>
            <param name="comment">The formatted string to embed within a Summary element.  If it contains line breaks, it will become multiple comments.</param>
            <param name="isCSharp">Whether or not the doc comment is for C#.</param>
            <returns>The collection of generated Xml doc comments.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GenerateParamCodeComment(System.String,System.String,System.Boolean)">
            <summary>
            Generates a (potentially multi-line) Xml doc comment for a Param element.
            </summary>
            <param name="paramName">The name of the parameter.</param>
            <param name="comment">The formatted string to embed in a Param element.</param>
            <param name="isCSharp">Whether or not the doc comment is for C#.</param>
            <returns>The collection of generated Xml doc comments.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GenerateReturnsCodeComment(System.String,System.Boolean)">
            <summary>
            Generates a (potentially multi-line) Xml doc comment for a Returns element.
            </summary>
            <param name="comment">The formatted string to embed in the Returns element.</param>
            <param name="isCSharp">Whether or not the doc comment is for C#.</param>
            <returns>The collection of generated Xml doc comments.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.GetDocComments(System.String,System.Boolean)">
            <summary>
            Takes a multi-line comment defined in a resource file and correctly formats it as a doc comment
            for use in code-dom.
            </summary>
            <param name="resourceComment">The comment to format as a doc comment. This cannot be null.</param>
            <param name="isCSharp">Whether or not the doc comment is for C#.</param>
            <returns>A collection of comment statements that matches the input resource</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.RegisterTypeName(System.String,System.String,System.String)">
            <summary>
            Checks if a using a <see cref="T:System.Type"/>'s short-name will generate an ambiguous type reference error.
            </summary>
            <param name="typeNamespace">The type namespace.</param>
            <param name="typeName">The type name to check for conflict.</param>
            <param name="containingNamespace">The namespace in which to check for <see cref="T:System.Type"/> short-name conflicts.</param>
            <returns>A Boolean indicating whether or not the <see cref="T:System.Type"/> will generate an ambiguous type 
            reference error.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.TranslateNamespace(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator)">
            <summary>
            In cases where we are emitting types that aren't already in the root namespace, 
            we need to translate the generated type namespace so that it resides in the 
            root namespace.
            </summary>
            <remarks>
            Here, we're interested in cases where we're generating VB code
            and our target project has a non-null root namespace.  
            </remarks>
            <param name="type">The type who namespace should be translated</param>
            <param name="codeGenerator">The current proxy generator</param>
            <returns>A translated namespace string</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.NeedToPrefaceRootNamespace(System.Type,OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator)">
            <summary>
            Determines if we need to preface the root namespace to the type
            </summary>
            <param name="type">The type in question</param>
            <param name="codeGenerator">The current proxy generator</param>
            <returns><c>true</c> if if we need to preface the root namespace to the type, <c>false</c> otherwise</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CodeGenUtilities.OptimizeAttributeName(System.Type)">
            <summary>
            Returns an attribute short name if the <paramref name="type"/> is an 
            <see cref="T:System.Attribute"/> with a name ending in 'Attribute'.
            </summary>
            <remarks>
            For example, an attribute named "QueryAttribute" can be optimized to 
            just "Query".
            </remarks>
            <param name="type">The attribute type.</param>
            <returns>A suitable attribute type name.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind">
            <summary>
            Enum type that describes how code elements are shared
            between two projects.
            </summary>
            <remarks>Shared code elements are those that are visible
            to both projects, either though shared source files
            or through assemblies referenced by both projects.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind.Unknown">
            <summary>
            Insufficient information is available to determine
            whether the code element is shared or not.
            </summary>
            <value>
            This value typically results when the common source files
            or assemblies cannot be determined or accessed.
            In most cases, it is safest to assume it means the
            same as <see cref="F:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind.NotShared"/>.
            </value>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind.NotShared">
            <summary>
            The code element is not shared between the projects.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind.SharedBySource">
            <summary>
            The code element is shared between the projects
            through common source files.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind.SharedByReference">
            <summary>
            The code element is shared between the projects
            through the equivalent types in assemblies
            referenced by both projects.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind.Shared">
            <summary>
            Bit mask to use to check for any kind of sharing
            exists, either by common source files or equivalent
            assemblies.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ComplexTypeProxyGenerator">
            <summary>
            Proxy generator for a complex type.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ComplexTypeProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.Type,OpenRiaServices.DomainServices.Server.DomainServiceDescription,System.Collections.Generic.IDictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.ComplexTypeProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="complexType">The complex type.  Cannot be null.</param>
            <param name="domainServiceDescription"><see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> that exposes this complex type.</param>
            <param name="typeMapping">A dictionary of <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> and related complex types that maps to their corresponding client-side <see cref="T:System.CodeDom.CodeTypeReference"/> representations.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask">
            <summary>
            Custom MSBuild task to generate client proxy classes from server's entities and business objects
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientProjectRootNamespace">
            <summary>
            Gets or sets root namespace of the client project
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerAssemblies">
            <summary>
            Gets or sets the list of core server assemblies to analyze to extract the business objects
            </summary>
            <value>
            This property is required.  Normal MSBuild semantics will not permit this task
            to be used unless it has been set.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerReferenceAssemblies">
            <summary>
            Gets or sets the list of reference assemblies used to build the server assemblies
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientReferenceAssemblies">
            <summary>
            Gets or sets the list of reference assemblies used to build the server assemblies
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientAssemblySearchPaths">
            <summary>
            Gets or sets a value containing the paths to search for
            client assemblies when it is necessary to locate referenced
            assemblies.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientSourceFiles">
            <summary>
            Gets or sets the list of source files used by the client project (i.e. the @(Compile) item collection)
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientFrameworkPath">
            <summary>
            Gets or sets the location of mscorlib.dll and the rest of the target framework for the client.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.Language">
            <summary>
            Gets or sets the language in which to generate the client proxies.
            </summary>
            <value>
            Currently supported values are currently "C#" or "VB"
            This property is required.  Normal MSBuild semantics will not permit this task
            to be used unless it has been set.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerProjectPath">
            <summary>
            Gets or sets the path to the server's project file
            </summary>
            <value>This value is required.</value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.IsClientApplication">
            <summary>
            Gets the string form of a boolean that indicates
            whether the client project is an application.
            </summary>
            <value>A string value of "true" means the client project
            is an application.  If this value is empty or any other
            string value, the client project is assumed to be a
            class library.</value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.UseFullTypeNames">
            <summary>
            Gets or sets a value indicating whether the code generator
            should generate fully qualified type names.
            </summary>
            <value>
            A string value of "true" means fully qualified type names
            should be generated.  Any other value indicates the code
            generator can use short type names at its discretion.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CodeGeneratorName">
            <summary>
            Gets or sets the name of the code generator to use.
            </summary>
            <value>
            This value specifies the logical name of the code
            generator and is used to select one when multiple
            are available.  A <c>null</c> value will select
            the default code generator.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GeneratedFiles">
            <summary>
            Gets the list of code files created by this task.
            </summary>
            <value>
            This value can be read at any time, but it will be valid only after
            the task has completed.  Its results are not predictable if the task
            has terminated abnormally.  This list contains only those code files
            created by the code-generation task.  It does not include any of the
            files named *.shared.".
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.SharedFiles">
            <summary>
            Gets the list of files copied by this task from the server project(s)
            </summary>
            <value>
            This value can be read at any time, even before the task has executed.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CopiedFiles">
            <summary>
            Gets the list of shared files that have been copied into the client project
            </summary>
            <value>
            This value can be read at any time, but it will be valid only after
            the task has completed.  Its results are not predictable if the task
            has terminated abnormally.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.LinkedFiles">
            <summary>
            Gets the list of files shared with the server project(s) via file links.
            </summary>
            <value>
            This value can be read at any time, but it will be valid only after
            the task has completed.  Its results are not predictable if the task
            has terminated abnormally.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerProjectRootNameSpace">
            <summary>
            Gets the root namespace of the server project.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerOutputPath">
            <summary>
            Gets the server project's output path.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.SharedFilesByProject">
            <summary>
            Gets a dictionary, keyed by project path and containing all the *.shared.* files known
            to that project.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.LinkedFilesNormalized">
            <summary>
            Gets the set of linked files visible to the client project and the server project, including projects
            referenced by the server project.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientReferenceAssembliesNormalized">
            <summary>
            Gets the set of client reference assemblies, with relative paths expanded to full paths.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.OutputFiles">
            <summary>
            Gets the collection of files written by this task.
            </summary>
            <value>
            This list is a concatenation of <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GeneratedFiles"/> and <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CopiedFiles"/>.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ClientAssemblyPathsNormalized">
            <summary>
            Returns the set of full paths of folders to search for framework and SDK assemblies
            when we need to resolve assembly references.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.IsClientApplicationAsBool">
            <summary>
            Gets the boolean equivalent of <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.IsClientApplication"/>
            </summary>
            <value><c>true</c> means the client project is an application,
            otherwise it is a class library only.</value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.UseFullTypeNamesAsBool">
            <summary>
            Gets the boolean equivalent of <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.UseFullTypeNames"/>
            </summary>
            <value><c>true</c> full type names should be used in code generation.</value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.IsServerProjectAvailable">
            <summary>
            Gets a value indicating whether the server project file has been specified
            and exists on disk.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ProjectFileReader">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ProjectFileReader"/> used by all caches that read project files.
            </summary>
            <value>
            This reader implements <see cref="T:System.IDisposable"/> and is explicitly disposed after this
            custom build task completes.  It is instantiated lazily and may not always be required.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerProjectDirectory">
            <summary>
            Gets the absolute path to the server's directory
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.FileExtension">
            <summary>
            Gets the file extension to use for the current language
            </summary>
            <value>Ideally, the CodeDom should provide this, but we want to avoid loading the provider
            when we are checking whether there is really any work to do.</value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ServerProjectSourceFileCache">
            <summary>
            Gets the cache of server-side source files known to the
            server project and all the projects it references.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.LinkedServerProjectCache">
            <summary>
            Gets the cache of client project references and their corresponding
            server projects if they have a Open RIA Services Link.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ExecuteInternal">
            <summary>
            Invoked by MSBuild to run this task
            </summary>
            <returns>true if task succeeds</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.DeleteCodeGenMetafilesIfInvalid">
            <summary>
            Checks if the project was moved from a different location, in which case it purges the breadcrumb files generated in the previous build.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GenerateClientProxies">
            <summary>
            Generates the client proxies.
            </summary>
            <remarks>
            This method validates the presence of the necessary input server assemblies and
            then invokes the code generation logic to create a file containing the client
            proxies for the discovered server's Business Objects.  If the file already exists
            and is newer than the inputs, this method does nothing.
            <para>In all success paths, the client proxy file will be added to the list of generated
            files so the custom targets file can add them to the @Compile collection.</para>
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GetSharedAndLinkedFiles">
            <summary>
            Returns the computed list of shared and linked files between the server and client projects.
            </summary>
            <remarks>This list includes all shared files named via the "*.shared.* pattern as well
            as files found via file links.
            </remarks>
            <returns>The set of absolute file names that are the files both client and server see</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.IsFileShared(System.String)">
            <summary>
            Simple evaluator to determine whether a file matches the "*.shared.*" pattern
            </summary>
            <param name="fileName">The full or short name of the file to test.</param>
            <returns><c>true</c> means it matches the pattern for a shared file</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ComposeDestinationPath(System.String,System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Computes the full path of the destination file name.
            </summary>
            <remarks>This method is responsible for preserving any folder hierarchies
            in the event the source file is not directly in the root.</remarks>
            <param name="sourceFilePath">The full path to the source file</param>
            <param name="sourceDirectory">The root directory of the server</param>
            <param name="destinationDirectory">The root directory of the destination</param>
            <returns>A string representing the full destination file path.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GetSubfolders(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Returns the ordered set of folder names the given <paramref name="sourceFileDirectory"/>
            lies under the given <paramref name="sourceDirectory"/>
            </summary>
            <remarks>In other words, this method returns the set of folder names that must be
            created under the eventual destination folder to preserve the folder hiearchy of
            the source.  An empty list means <paramref name="sourceFileDirectory"/> is not
            located under <paramref name="sourceDirectory"/> or is the same folder.
            </remarks>
            <param name="sourceDirectory">The root directory of the server project.</param>
            <param name="sourceFileDirectory">The directory in which a file-to-be-copied resides</param>
            <returns>The ordered set of folder names.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ReadReferenceList(System.String,System.String)">
            <summary>
            Read the list of reference assemblies we last code-genned against
            into a dictionary, keyed by file name and with the timestamp as a string
            </summary>
            <param name="fileName">The file name from which to read the references.</param>
            <param name="projectDir">The directory containing the project.</param>
            <returns>dictionary containing last set of known references</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.HaveReferencesChanged(System.String,System.Collections.Generic.ICollection{System.String},System.String)">
            <summary>
            Determines whether the given set of references are different from the set we
            last used that were saved to the given file.
            </summary>
            <param name="fileName">The file in which we last wrote the references.</param>
            <param name="references">The set of references we have currently.</param>
            <param name="projectDir">The directory containing the project.</param>
            <returns><c>true</c> means the current references are different from the set we last used for code generation.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.ReleaseResources">
            <summary>
            Releases all resources acquired by this instance.
            </summary>
            <remarks>
            This method returns all fields to their original uninitialized
            state and disposes any disposable objects that were lazily created.
            It may be called multiple times and will always leave the current
            instance in a valid state for reuse.  Note that this method does
            not affect any fields that are required for output items returned
            by this custom task, because they will be consumed by MSBuild after
            the task has executed.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.WarnIfNoPdb(System.String)">
            <summary>
            Issue a build warning if we cannot find a PDB file for the given assembly
            </summary>
            <param name="assemblyFile">The name of the assembly file whose PDB file we need.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.PurgeOrphanFiles">
            <summary>
            This method deletes any files that we generated on a previous execution,
            but which we did not generate this time.  This is how renamed and deleted server files
            files get removed from the client project without the user needing to do an explicit clean.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.WriteFileList">
            <summary>
            Creates a file listing all the generated files.  Will be used for Clean operation.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.WriteReferenceList(System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Writes out all the assembly references and their timestamps
            </summary>
            <param name="fileName">The file name into which to write.</param>
            <param name="references">The list of references to write</param>
            <param name="projectDir">The directory containing the project</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CreateSharedCodeServiceParameters(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Constructs the parameters to pass across the AppDomain boundary to construct a
            <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService"/> in the AppDomain that will do code generation.
            </summary>
            <param name="serverAssemblies">The set of full paths to the server assemblies to use for code generation.</param>
            <returns>A <see cref="T:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters"/> instance ready to use to construct a <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.AddGeneratedFile(System.String)">
            <summary>
            Adds the given file name to the list returned by <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GeneratedFiles"/>.
            </summary>
            <param name="fileName">The absolute path of a file.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.AddCopiedFile(System.String)">
            <summary>
            Adds the given file name to the list returned by <see cref="P:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CopiedFiles"/>.
            </summary>
            <param name="fileName">The absolute path of a file.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GetSharedFilesByProject">
            <summary>
            Computes the set of all shared files for all projects.
            </summary>
            <returns>A dictionary, keyed by project path and containing the list of shared files from that project.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CopySharedFiles">
            <summary>
            Copy the specified files to the output directory
            </summary>
            <remarks>
            This subtask is done here (rather than reusing the MSBuild Copy task directly) so that it
            can interact with the Visual Studio TextBuffers.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CopyFile(System.String,System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Copies the specified file from the server to the client project
            </summary>
            <param name="sourceFilePath">Full path to the source file</param>
            <param name="sourceDirectory">The root directory of the server</param>
            <param name="destinationDirectory">The root directory of where generated code should go in the client project</param>
            <returns>A <see cref="T:System.Boolean"/> indicating whether a file was actually copied.  <c>false</c> means an error occurred or the
            file is already current on disk.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GetServerAssemblies">
            <summary>
            Returns the list of absolute filenames of the input assemblies
            </summary>
            <returns>list of filenames of input assemblies</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GetReferenceAssemblies">
            <summary>
            Returns the collection of the full paths to the input reference assemblies.
            </summary>
            <returns>The list of reference assembly file names</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.EnsureAssembliesExist(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Validates existance of necessary files.  Returns false if any are missing.  Also logs an error message.
            This method explicitly does not check for an empty list, only that the list contains only valid items.
            </summary>
            <param name="assemblies">The set of assembly names to test</param>
            <returns><c>true</c> if all the assemblies exist.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.GenerateProxyFileName(System.String)">
            <summary>
            Create the name of the filename where the proxy code will be written
            </summary>
            <param name="serverAssemblyName">The name of the server assembly, to be used in forming the name</param>
            <returns>The base name.  It will not include a path.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.NormalizedTaskItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ITaskItem},System.String)">
            <summary>
            Returns the set of <see cref="T:Microsoft.Build.Framework.ITaskItem"/>s normalized to be relative to the given
            directory.
            </summary>
            <param name="items">The list of task items to normalize.  Null is permitted and results in empty list returned</param>
            <param name="directory">The folder path to use as the root if the paths are relative.</param>
            <returns>A new string collection of the full paths of the file names in the given <paramref name="items"/> array.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.NormalizeProjectPaths">
            <summary>
            Helper method to convert input project paths to full path names.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask.CrossAppDomainLogger">
            <summary>
            Nested class to handle cross-appdomain logging requests
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CSharpCodeDomClientCodeGenerator">
            <summary>
            CodeDom-based client proxy code generator for C#.
            </summary>
            <remarks>
            This internal class exists solely to provide a unique export
            for the C# language.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CustomMethodProxyGenerator">
            <summary>
            Proxy generator for custom methods.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomMethodProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Type,System.Collections.Generic.ICollection{OpenRiaServices.DomainServices.Server.DomainServiceDescription},OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.CustomMethodProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="proxyClass">Entity <see cref="T:System.CodeDom.CodeTypeDeclaration"/> into which to generate code</param>
            <param name="entityType">The type of the entity.  Cannot be null.</param>
            <param name="domainServiceDescriptions">Collection of all <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/>s defined in this project</param>
            <param name="notificationMethodGen">Code generator for OnMethodName() methods</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomMethodProxyGenerator.Generate">
            <summary>
            This is the root method for generating invoke method and guard properties for custom methods
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomMethodProxyGenerator.GenerateCustomMethod(System.String,OpenRiaServices.DomainServices.Server.DomainOperationEntry)">
            <summary>
            Generates an invoke method for the given custom method
            </summary>
            <param name="customMethodName">name of custom method</param>
            <param name="customMethod"><see cref="T:OpenRiaServices.DomainServices.Server.DomainOperationEntry"/> of the custom method</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomMethodProxyGenerator.GenerateGuardProperty(System.String)">
            <summary>
            Generates a custom method guard property
            </summary>
            <param name="customMethodName">name of the custom method to generate guard property for</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator">
            <summary>
            Proxy generator base class for an type that carries data contract data.
            This class is particularly suited for generating partial classes with
            DataContract properties and invoke partial OnPropertyChanging and
            OnPropertyChanged methods.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.Type,System.Collections.Generic.IDictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be <c>null</c>.</param>
            <param name="type">The type to generate.  Cannot be null.</param>
            <param name="typeMapping">A dictionary of <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> and related types that maps to their corresponding client-side <see cref="T:System.CodeDom.CodeTypeReference"/> representations.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.ComplexTypes">
            <summary>
            The complex types that can be exposed from this type, as exposed by DomainServiceDescription.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.IsDerivedType">
            <summary>
            Returns <c>true</c> if the Type property derives from another generated type.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.NotificationMethodGen">
            <summary>
            The class that generates all partial notification methods.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.ProxyClass">
            <summary>
            The declaration through which derived classes can generate more code through protected overrides.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.Type">
            <summary>
            The type whose proxy is being generated.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for the given type.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.AddBaseTypes(System.CodeDom.CodeNamespace)">
            <summary>
            Derived classes should add the base types from which the given type derives (including interfaces).
            </summary>
            <remarks>
            Due to the code dom implementation, if an interface is required, a class must be added first. VB will not compile otherwise.
            </remarks>
            <param name="ns">The namespace under which Type is generated..</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.CanGenerateProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if this code generator can generate a member for the
            specified source property type.
            </summary>
            <remarks>The base method checks for DataContract serializability. If derived classes
            override, they must be able to generate additional properties in
            <see cref="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GenerateNonSerializableProperty(System.ComponentModel.PropertyDescriptor)" />.</remarks>
            <param name="propertyDescriptor">The source property.</param>
            <returns>true if this code generator should/can generate a member for the Type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.CanGeneratePropertyIfPolymorphic(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Properties appearing on the type may be generated on the base class. If that is the case,
            this method should return false.
            </summary>
            <param name="pd">The property to be generated.</param>
            <returns>True if the property should be generated on this proxy.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GenerateAdditionalMembers">
            <summary>
            Derived classes should generate all non properties in this method.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GeneratePropertySetterValidation(System.String)">
            <summary>
            Gererate property setter validation for the specified property name.
            </summary>
            <param name="propertyName">The property to validate.</param>
            <returns>The code statement for the validation call.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GenerateNonSerializableProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            This is the interception point that allows derived classes to generate properties that
            are not strictly DataContract serializable. If the derived class overrode
            <see cref="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.CanGenerateProperty(System.ComponentModel.PropertyDescriptor)"/>, the derived class must override this method.
            </summary>
            <param name="pd">The property to be generated.</param>
            <returns>Returns true if the property was generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GetDerivedTypes">
            <summary>
            Returns the types deriving from the type to be generated.
            </summary>
            <returns>The types deriving from the type to be generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GetSummaryComment">
            <summary>
            Generates the summary comment for the class.
            </summary>
            <returns>Returns the summary comment content.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.IsPropertyShared(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Users the shared types service to determine whether the given property is shared.
            </summary>
            <remarks>Derived classes can override this to insert extra behavior.</remarks>
            <param name="pd">The property descriptor that could be shared.</param>
            <returns>Returns true if the property is shared.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.OnPropertySkipped(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Called when a property that should be generated, cannot be generated.
            </summary>
            <param name="pd">The property that was not generated.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.ShouldDeclareProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if the property should be declared.
            </summary>
            <remarks>Properties are typically not declared if they are available
            through other means (such as shared files) or otherwise excluded from
            this type.</remarks>
            <param name="pd">The property being declared.</param>
            <returns>True if the property should be declared.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GenerateProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Generates a property getter/setter pair into the given proxy class to match the given property info.
            </summary>
            <param name="propertyDescriptor">PropertyDescriptor for the property to generate for.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.ValidateTypeAttributes(System.ComponentModel.AttributeCollection)">
            <summary>
            Checks if the type level attributes on the type are valid.
            </summary>
            <param name="typeAttributes">The collection of attributes on the type.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.FilterTypeAttributes(System.ComponentModel.AttributeCollection)">
            <summary>
            Returns the list of all the attributes that need to be propagated to the client
            </summary>
            <param name="typeAttributes">List of attributes on the type</param>
            <returns>List of attributes to be propagated to the client</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.GenerateProperties">
            <summary>
            Generates all of the properties for the type.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.IsExcluded(System.ComponentModel.PropertyDescriptor,System.ComponentModel.AttributeCollection)">
            <summary>
            Determines if a property is excluded by analyzing its attributes
            looking for an <see cref="T:OpenRiaServices.DomainServices.Server.ExcludeAttribute"/>.
            </summary>
            <param name="pd">The property to be tested</param>
            <param name="propertyAttributes">The attributes for the property</param>
            <returns><c>true</c> if the property is to be excluded, otherwise <c>false</c></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataContractProxyGenerator.IsPropertyReadOnly(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if the specified property is read-only by virtue of having
            an appropriately configured ReadOnlyAttribute or EditableAttribute applied.
            </summary>
            <param name="property">The property to check for editability.</param>
            <returns>True if the specified property is read-only, false otherwise.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DbContextUtilities">
            <summary>
            Provides DbContext Utilities using late binding so as not to take a direct dependency on EntityFramework 4.1.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DbContextUtilities.ResetDbContextTypeReference">
            <summary>
            Resets any cached DB Context type reference
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DbContextUtilities.SetDbInitializer(System.Type,System.Type,System.Object)">
            <summary>
            Sets the Database initializer associated to the DbContext with the given value.
            </summary>
            <param name="contextType">The type of the DbContext for which we want to set the value of the Database initializer.</param>
            <param name="dbContextTypeReference">The reference to DbContext type (or typeof(DbContext)).</param>
            <param name="initializer">The initializer object.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DbContextUtilities.CompareWithSystemType(System.Type,System.String)">
            <summary>
            Compares 2 types by their full names. This also checks if the type to be compared with is a system type. If either the type 
            or system type name are null / empty, then it returns false.
            </summary>
            <param name="type">Type to be compared with.</param>
            <param name="systemTypeFullName">Full name of a system type.</param>
            <returns><c>true</c> if the type is a system type and its name is same as the given system type name.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DbContextUtilities.LoadTypeFromAssembly(System.Reflection.Assembly,System.String)">
            <summary>
            Loads the given type from the given assembly.
            </summary>
            <param name="assembly">Assembly from which to load the type.</param>
            <param name="typeName">Name of the type to be loaded.</param>
            <returns>The type loaded from the given assembly.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DbContextUtilities.GetDbContextTypeReference(System.Type)">
            <summary>
            Finds the reference to System.Data.Entity.DbContext type given the contextType, if it exists.
            </summary>
            <param name="contextType">The context type from which the DbContext type reference is to be found</param>
            <returns>The reference to DbContext type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DbContextUtilities.GetDbContextType(System.Type)">
            <summary>
            Returns the DbContext type given the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> type. Uses late binding so as to avoid adding a reference to EF 4.1.
            </summary>
            <param name="domainServiceType">The type of the domain service.</param>
            <returns>The type of the DbContext.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator">
            <summary>
            Proxy generator for a DomainOperationEntry
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,OpenRiaServices.DomainServices.Server.DomainServiceDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator"/> class.
            </summary>
            <param name="clientProxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="proxyClass">The class into which to inject the generated code</param>
            <param name="domainServiceDescription">The description for the DomainService we're generating for</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for the domain operation entries
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator.CanGenerateDomainOperationEntry(OpenRiaServices.DomainServices.Server.DomainOperationEntry)">
            <summary>
            Determines whether the specified <see cref="T:OpenRiaServices.DomainServices.Server.DomainOperationEntry"/> can legally
            be generated.  Logs warnings or errors as appropriate.
            </summary>
            <param name="domainOperationEntry">The operation to generate.</param>
            <returns><c>false</c> means an error or warning has been logged and it should not be generated.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator.GenerateDomainOperationEntry(OpenRiaServices.DomainServices.Server.DomainOperationEntry)">
            <summary>
            Generates a domain method on the domain service.
            </summary>
            <param name="domainMethod">The domain method to generate code for.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator.GenerateEntitySet(System.Type)">
            <summary>
            Generates the property getter for the given entity type from the given domain operation entry
            </summary>
            <param name="entityType">The type of the entity being exposed</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainOperationEntryProxyGenerator.GenerateEntityQueryMethod(OpenRiaServices.DomainServices.Server.DomainOperationEntry)">
            <summary>
            Generates the query method for the specified query operation
            </summary>
            <param name="domainOperationEntry">DomainOperationEntry for which we are generating the query methods</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog">
            <summary>
            Represents a catalog of DomainServices.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.#ctor(System.Collections.Generic.IEnumerable{System.String},OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog"/> class with the specified input and reference assemblies
            </summary>
            <param name="assembliesToLoad">The set of assemblies to load (includes all known assemblies and references).</param>
            <param name="logger">logger for logging messages while processing</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="assembliesToLoad"/> or <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.#ctor(System.Type,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog"/> class that permits code gen over a single domain service
            </summary>
            <param name="domainServiceType">a domain service type to generate code for</param>
            <param name="logger">logger for logging messages while processing</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="domainServiceType"/> or <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type},OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog"/> class that permits code gen over a list of domain services
            </summary>
            <param name="domainServiceTypes">list of domain service types to generate code for</param>
            <param name="logger">logger for logging messages while processing</param>
            <exception cref="T:System.ArgumentNullException"> is thrown if <paramref name="domainServiceTypes"/> or <paramref name="logger"/> is null.</exception>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.LogError(System.String)">
            <summary>
            Log an error message
            </summary>
            <param name="message">message to be logged</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.LogException(System.Exception)">
            <summary>
            Log an error exception
            </summary>
            <param name="ex">Exception to be logged</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.LogWarning(System.String)">
            <summary>
            Log a warning message
            </summary>
            <param name="message">message to be logged</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.DomainServiceDescriptions">
            <summary>
            Gets a collection of domain service descriptions
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.AddDomainServiceDescriptions">
            <summary>
            Looks at all loaded assemblies and adds DomainServiceDescription for each DomainService found
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.GetProviderDescription(System.Type)">
            <summary>
            Call GetDescription for the specified domain service type.
            </summary>
            <param name="providerType">type of <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/></param>
            <returns>the <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> corresponding 
            to the specified provider type. Null is returned if an error has occurred.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.LoadAllAssembliesAndSetAssemblyResolver">
            <summary>
            Invoked once to force load all assemblies into an analysis unit
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceCatalog.ValidateDomainServiceInheritance">
            <summary>
            Validate that EnableClientAccess appears at the leaf in a DomainService inheritance chain.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute">
            <summary>
            Derived <see cref="T:System.ComponentModel.Composition.ExportAttribute"/> used for all code generators
            that support <see cref="T:OpenRiaServices.DomainServices.Tools.IDomainServiceClientCodeGenerator"/>.
            </summary>
            <remarks>
            This attribute exports both the type of the code generator
            (<see cref="T:OpenRiaServices.DomainServices.Tools.IDomainServiceClientCodeGenerator"/>) as well
            as the metadata that describe the code generator.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute"/> class
            for a generator name specified by <paramref name="generatorName"/>.
            </summary>
            <param name="generatorName">The unique name of this generator.</param>
            <param name="language">The language supported by this generator.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute.#ctor(System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute"/> class
            for a generator name specified by <paramref name="generatorType"/>.
            </summary>
            <remarks>
            This overload will use the <paramref name="generatorType"/>'s name for
            the <see cref="P:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute.GeneratorName"/> property.
            </remarks>
            <param name="generatorType">The type of the generator.</param>
            <param name="language">The language supported by this generator.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute.Language">
            <summary>
            Gets the language supported by this code generator.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute.GeneratorName">
            <summary>
            Gets the logical name of this generator.
            </summary>
            <value>
            This value provides a unique identity to this code generator
            that can be used to select among multiple code generators.
            </value>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator">
            <summary>
            Proxy generator for a DomainService
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,OpenRiaServices.DomainServices.Server.DomainServiceDescription,System.Collections.Generic.IDictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="domainServiceDescription">The domain service description to use as source metadata</param>
            <param name="typeMapping">A dictionary of <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> and related entity types that maps to their corresponding client-side <see cref="T:System.CodeDom.CodeTypeReference"/> representations.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for a domain service.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.DomainContextTypeName(OpenRiaServices.DomainServices.Server.DomainServiceDescription)">
            <summary>
            Returns the type name we will generate for the DomainContext for the given
            <paramref name="domainServiceDescription"/>
            </summary>
            <param name="domainServiceDescription">The domain service description from which we will generate the DomainContext.</param>
            <returns>The simple type name we will use for the DomainContext.  It will not include the namespace.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.GenerateConstructor(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.CodeDom.CodeParameterDeclarationExpression},System.Collections.Generic.IEnumerable{System.CodeDom.CodeExpression},System.CodeDom.CodeCommentStatementCollection,System.Boolean)">
            <summary>
            Generates and adds a constructor to an existing <see cref="T:System.CodeDom.CodeTypeDeclaration"/>.
            </summary>
            <param name="proxyClass">The <see cref="T:System.CodeDom.CodeTypeDeclaration"/> to generate a constructor for.</param>
            <param name="parameters">A collection of <see cref="T:System.CodeDom.CodeParameterDeclarationExpression"/> values to pass to the constructor.</param>
            <param name="baseParameters">A collection of <see cref="T:System.CodeDom.CodeArgumentReferenceExpression"/> values to pass to the constructor base invocation.</param>
            <param name="comments">A collection of <see cref="T:System.CodeDom.CodeCommentStatement"/> values to add to the constructor.</param>
            <param name="callBaseCtr">Determines whether this ctr is to call the base ctr or one of the overloaded ctrs.</param>
            <returns>Returns the generated constructor.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.GenEntityContainer(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Type},OpenRiaServices.DomainServices.Server.DomainServiceDescription)">
            <summary>
            Generates the "EntityContainer" for all the given entities
            </summary>
            <remarks>
            The EntityContainer is the logical store of the entity instances, and we have to generate
            code to instantiate entries in this store
            </remarks>
            <param name="proxyClass">Code into which to generate code</param>
            <param name="entityTypes">Set of all known entity types for which we need storage</param>
            <param name="domainServiceDescription">The DomainServiceDescription we're code genning for</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.GenEntityContainerInnerClass(System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Type},OpenRiaServices.DomainServices.Server.DomainServiceDescription)">
            <summary>
            Generate the EntityContainer inner class
            </summary>
            <param name="proxyClass">Class into which to generate code</param>
            <param name="entityTypes">All known entity types that will be stored in this EntityContainer</param>
            <param name="domainServiceDescription">The DomainServiceDescription we're code genning for</param>
            <returns>the generated EntityContainer inner class</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainServiceProxyGenerator.TypeRequiresRegistration(System.Type)">
            <summary>
            Determines if a given <see cref="T:System.Type"/> should be registered with a <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute"/>.
            </summary>
            <param name="type">The <see cref="T:System.Type"/> to check.</param>
            <returns><c>true</c> if the <see cref="T:System.Type"/> should be registered, <c>false</c> otherwise.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator">
            <summary>
            Proxy generator for an entity.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.Type,System.Collections.Generic.ICollection{OpenRiaServices.DomainServices.Server.DomainServiceDescription},System.Collections.Generic.IDictionary{System.Type,System.CodeDom.CodeTypeDeclaration})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="entityType">The type of the entity.  Cannot be null.</param>
            <param name="allDomainServiceDescriptions">Collection of all <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> defined in this project</param>
            <param name="typeMapping">A dictionary of <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> and related entity types that maps to their corresponding client-side <see cref="T:System.CodeDom.CodeTypeReference"/> representations.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for an entity
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.CanGeneratePropertyIfPolymorphic(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Determines whether the specified property belonging to the
            current entity is polymorphic, and if so whether it is legal to generate it.
            </summary>
            <param name="pd">The property to validate</param>
            <returns><c>true</c> if it is not polymorphic or it is legal to generate it, else <c>false</c></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.GetSummaryComment">
            <summary>
            Generates the summary comment for the entity class taking into account whether or not the entity is shared.
            </summary>
            <returns>Returns the summary comment content.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.ValidateTypeAttributes(System.ComponentModel.AttributeCollection)">
            <summary>
            Checks if the TypeLevel attributes on the Entity are valid. Currently only checks
            if RTO is on the least derived exposed Entity and logs an error otherwise.
            </summary>
            <param name="typeAttributes">The collection of attributes on the type.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.GetReverseAssociation(System.ComponentModel.PropertyDescriptor,System.ComponentModel.DataAnnotations.AssociationAttribute)">
            <summary>
            For the specified association property, get the association member on the other side of the
            association.  For example, given PurchaseOrderDetail.Product, will return Product.PurchaseOrderDetails.
            </summary>
            <param name="propertyDescriptor">The assocation property <see cref="T:System.ComponentModel.PropertyDescriptor"/>.</param>
            <param name="assocAttrib">The association property <see cref="T:System.ComponentModel.DataAnnotations.AssociationAttribute"/>.</param>
            <returns>The association member on the other side of the specified association property.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.ShouldFlattenProperty(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Determines whether the given <paramref name="propertyDescriptor"/>
            should be declared by the current entity type.
            </summary>
            <remarks>
            This method contains the basic 'flattening' logic for properties
            in the fact of entity inheritance.  Holes in the hierarchy due to
            the user not using <see cref="T:System.Runtime.Serialization.KnownTypeAttribute"/> requires us to
            lift properties to their nearest visible derived type.
            </remarks>
            <param name="propertyDescriptor">The property descriptor to test</param>
            <returns><c>true</c> if the current entity is the correct place in the
            hierarchy for this property to be declared.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.IsMethodPolymorphic(System.Reflection.MethodInfo)">
            <summary>
            Helper method to determine whether a method is polymorphic.
            This method gives an answer only, it does not log.
            </summary>
            <param name="methodInfo">The method to test.  It may be null.</param>
            <returns><c>true</c> if the method is virtual or new.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.GetVisibleBaseTypes(System.Type)">
            <summary>
            Computes the (visible) base type hierarchy from the given <paramref name="entityType"/>
            back to its root.  Entities not exposed to the client are omitted.
            </summary>
            <param name="entityType">The starting entity type whose hierarchy is needed.</param>
            <returns>The list of base types.  The root type will be last.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.VerifySharedEntityRoot(System.Type)">
            <summary>
            Returns whether or not a shared entity's least derived entity is also shared.
            If false, an error will be logged.
            </summary>
            <param name="entityType">The entity to compare against the least derived entity.</param>
            <returns>Returns true if the shared entity's least derived entity is the same
            across all <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> that expose the entity.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate">
            <summary>
            This class aggregates information from the all the <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/>
            that exposes the entity being generated.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.#ctor(System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Server.DomainServiceDescription})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate"/> class.
            </summary>
            <param name="domainServiceDescriptions">The descriptions that exposes the entity type.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.DomainServiceDescriptions">
            <summary>
            Gets all the <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> that expose this entity.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.ComplexTypes">
            <summary>
            Gets an enumerable representing the union of all complex types exposed
            by each <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.EntityTypes">
            <summary>
            Gets an enumerable representing the union of all entity types exposed
            by each <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.IsShared">
            <summary>
            Returns true if the entity is shared.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.GetEntityBaseType(System.Type)">
            <summary>
            Gets the base type of the given entity type.
            </summary>
            <param name="entityType">The entity type whose base type is required.</param>
            <returns>The base type or <c>null</c> if the given
            <paramref name="entityType"/> had no visible base types.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EntityProxyGenerator.DomainServiceDescriptionAggregate.GetRootEntityType(System.Type)">
            <summary>
            Returns the root type for the given entity type.
            </summary>
            <remarks>
            The root type is the least derived entity type in the entity type
            hierarchy that is exposed through a <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>.
            </remarks>
            <param name="entityType">The entity type whose root is required.</param>
            <returns>The type of the root or <c>null</c> if the given <paramref name="entityType"/>
            has no base types.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost">
            <summary>
            Interface for the host object for code generation.
            </summary>
            <remarks>
            Code generators are provided with an object instance that implements this interface.
            They use this host instance to log errors, warnings and messages back to the
            environment.  
            <para>
            The generators can also use this host instance to determine which types or
            members are shared by both the source and target projects.  In this context,
            the "source" project contains the types from which code needs to be generated.
            The "target" project is the one into which the generated code will be inserted.
            </para>
            <para>
            This service to determine shared code members is intended to be used by the
            code generators so they can know which member references or declarations are safe
            to make from the generated code.
            </para>
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost.LogError(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Logs the given message as an error, together with information about the source location.
            </summary>
            <param name="message">The message to log as an error.</param>
            <param name="subcategory">The optional description of the error type.</param>
            <param name="errorCode">The optional error code.</param>
            <param name="helpKeyword">The optional help keyword.</param>
            <param name="file">The optional path to the file containing the error.</param>
            <param name="lineNumber">The zero-relative line number in the <paramref name="file"/> where the error begins.</param>
            <param name="columnNumber">The zero-relative column number in the <paramref name="file"/> where the error begins.</param>
            <param name="endLineNumber">The zero-relative line number in the <paramref name="file"/> where the error ends.</param>
            <param name="endColumnNumber">The zero-relative column number in the <paramref name="file"/> where the error ends.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost.LogWarning(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Logs the given message as an warning, together with information about the source location.
            </summary>
            <param name="message">The message to log as an error.</param>
            <param name="subcategory">The optional description of the error type.</param>
            <param name="errorCode">The optional error code.</param>
            <param name="helpKeyword">The optional help keyword.</param>      
            <param name="file">The optional path to the file containing the error.</param>
            <param name="lineNumber">The zero-relative line number in the <paramref name="file"/> where the error begins.</param>
            <param name="columnNumber">The zero-relative column number in the <paramref name="file"/> where the error begins.</param>
            <param name="endLineNumber">The zero-relative line number in the <paramref name="file"/> where the error ends.</param>
            <param name="endColumnNumber">The zero-relative column number in the <paramref name="file"/> where the error ends.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost.GetTypeShareKind(System.String)">
            <summary>
            Returns a value indicating whether the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the source project is also visible to the target project.
            </summary>
            <param name="typeName">The <see cref="P:System.Type.AssemblyQualifiedName"/> of the <see cref="T:System.Type"/> from the source project.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost.GetPropertyShareKind(System.String,System.String)">
            <summary>
            Returns a value indicating whether the a property named <paramref name="propertyName"/>
            exposed by the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the source project is also visible to the target project.
            </summary>
            <param name="typeName">The <see cref="P:System.Type.AssemblyQualifiedName"/> of the <see cref="T:System.Type"/> from the source project.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost.GetMethodShareKind(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a value indicating whether a method named <paramref name="methodName"/>
            exposed by the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the source project is also visible to the target project.
            </summary>
            <param name="typeName">The <see cref="P:System.Type.AssemblyQualifiedName"/> of the <see cref="T:System.Type"/> from the source project.</param>
            <param name="methodName">The name of the method.</param>
            <param name="parameterTypeNames">The <see cref="P:System.Type.AssemblyQualifiedName"/> names of the method parameters, in the order they must be declared.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ICodeGeneratorMetadata">
            <summary>
            Metadata interface for code generators.
            </summary>
            <remarks>
            This interface provides a strongly-typed contract for
            the metadata exported by code generators through export
            attributes such as <see cref="T:OpenRiaServices.DomainServices.Tools.DomainServiceClientCodeGeneratorAttribute"/>.
            <para>
            Code generators are uniquely identified by the combination of the <see cref="P:OpenRiaServices.DomainServices.Tools.ICodeGeneratorMetadata.GeneratorName"/> 
            and <see cref="P:OpenRiaServices.DomainServices.Tools.ICodeGeneratorMetadata.Language"/> properties.
            </para>
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ICodeGeneratorMetadata.Language">
            <summary>
            Gets the language the code generator supports.
            </summary>
            <value>
            This value is required and contains the string name of the language supported
            by this code generator, such as "C#" or "VB".
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ICodeGeneratorMetadata.GeneratorName">
            <summary>
            Gets the logical name of the code generator.
            </summary>
            <value>
            This value is required and is used to provide a unique identity
            of the code generator.   When multiple code generators for a
            specific language are available, this name will be used to 
            allow clients to specify which one to use.
            </value>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.IDomainServiceClientCodeGenerator">
            <summary>
            Common interface for code generators that produce client code from 
            <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> instances.
            </summary>
            <remarks>
            Implementations of this interface are expected to be stateless objects
            that can be invoked to generate code on demand.   A single instance of this
            class may be used multiple times with different sets of inputs.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.IDomainServiceClientCodeGenerator.GenerateCode(OpenRiaServices.DomainServices.Tools.ICodeGenerationHost,System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Server.DomainServiceDescription},OpenRiaServices.DomainServices.Tools.ClientCodeGenerationOptions)">
            <summary>
            Generates the source code for the client classes
            for the given <paramref name="domainServiceDescriptions"/>.
            </summary>
            <remarks>
            Errors and warnings should be reported using the <paramref name="codeGenerationHost"/>.
            </remarks>
            <param name="codeGenerationHost">The <see cref="T:OpenRiaServices.DomainServices.Tools.ICodeGenerationHost"/> object hosting code generation.</param>
            <param name="domainServiceDescriptions">The set of <see cref="T:OpenRiaServices.DomainServices.Server.DomainServiceDescription"/> 
            instances for which code generation is required.</param>
            <param name="options">The options for code generation.</param>
            <returns>The generated code.  This value may be empty or <c>null</c> if errors occurred or there was no work to do.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ILogger">
            <summary>
            Abstraction to permit code gen task to report errors
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ILogger.HasLoggedErrors">
            <summary>
            Gets a value indicating whether any errors were logged.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ILogger.LogError(System.String)">
            <summary>
            Logs the given message as an error
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ILogger.LogWarning(System.String)">
            <summary>
            Logs the given message as a warning
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ILogger.LogMessage(System.String)">
            <summary>
            Logs the given message as information
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ILogger.LogException(System.Exception)">
            <summary>
            Logs the given exception as error
            </summary>
            <param name="ex">Exception to log</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ILoggingService">
            <summary>
            General purpose interface to allow errors and warnings to be logged
            with sufficient information to identify the location of the error in
            source code.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ILoggingService.LogError(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Logs the given message as an error, together with information about the source location.
            </summary>
            <param name="message">The message to log as an error.</param>
            <param name="subcategory">The optional description of the error type.</param>
            <param name="errorCode">The optional error code.</param>
            <param name="helpKeyword">The optional help keyword.</param>
            <param name="file">The optional path to the file containing the error.</param>
            <param name="lineNumber">The zero-relative line number in the <paramref name="file"/> where the error begins.</param>
            <param name="columnNumber">The zero-relative column number in the <paramref name="file"/> where the error begins.</param>
            <param name="endLineNumber">The zero-relative line number in the <paramref name="file"/> where the error ends.</param>
            <param name="endColumnNumber">The zero-relative column number in the <paramref name="file"/> where the error ends.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ILoggingService.LogWarning(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Logs the given message as an warning, together with information about the source location.
            </summary>
            <param name="message">The message to log as an error.</param>
            <param name="subcategory">The optional description of the error type.</param>
            <param name="errorCode">The optional error code.</param>
            <param name="helpKeyword">The optional help keyword.</param>      
            <param name="file">The optional path to the file containing the error.</param>
            <param name="lineNumber">The zero-relative line number in the <paramref name="file"/> where the error begins.</param>
            <param name="columnNumber">The zero-relative column number in the <paramref name="file"/> where the error begins.</param>
            <param name="endLineNumber">The zero-relative line number in the <paramref name="file"/> where the error ends.</param>
            <param name="endColumnNumber">The zero-relative column number in the <paramref name="file"/> where the error ends.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.IndentationLevel">
            <summary>
            This enum is designed to be used with type snippet generators.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.IndentationLevel.None">
            <summary>
            No indentation at all.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.IndentationLevel.GlobalNamespace">
            <summary>
            Type declared in the global namespace (no namespace)
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.IndentationLevel.Namespace">
            <summary>
            Type declared inside a namespace.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.IndentationLevel.NestedType">
            <summary>
            Type declared inside another type in the global namespace.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.IndentationLevel.NamespaceNestedType">
            <summary>
            Type declared inside another type that belongs to a namespace.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.InvokeKind">
            <summary>
            Defines the type of client side invoke operation to generate
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.InvokeKind.WithoutCallback">
            <summary>
            Generate invoke method without callback parameters
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.InvokeKind.WithCallback">
            <summary>
            Generate invoke method with callback and userstate parameters
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.InvokeKind.Async">
            <summary>
            Generate "Async" invoke method returning Task and taking cancellation token as an extra parameter
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.InvokeOperationProxyGenerator">
            <summary>
            Proxy generator for a <see cref="T:OpenRiaServices.DomainServices.Server.DomainOperationEntry"/> that represents an invoke operation.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.InvokeOperationProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,OpenRiaServices.DomainServices.Server.DomainServiceDescription)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.InvokeOperationProxyGenerator"/> class.
            </summary>
            <param name="clientProxyGenerator">The client proxy generator against which this will generate code.  Cannot be null.</param>
            <param name="proxyClass">The class into which to inject the generated code</param>
            <param name="domainServiceDescription">The description for the DomainService we're generating for</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.InvokeOperationProxyGenerator.Generate">
            <summary>
            Generates the client proxy code for the domain operation entries
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.InvokeOperationProxyGenerator.GenerateInvokeOperation(OpenRiaServices.DomainServices.Server.DomainOperationEntry,OpenRiaServices.DomainServices.Tools.InvokeKind)">
            <summary>
            Generates an invoke operation.
            </summary>
            <param name="domainOperationEntry">The invoke operation.</param>
            <param name="invokeKind">the type of invoke method to generate.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ISharedCodeService">
            <summary>
            Service interface to reveal which code elements are
            shared between two projects.
            </summary>
            <remarks>Shared code elements are those that are visible
            to both projects, either though shared source files
            or through assemblies referenced by both projects.
            <para>
            This service operates from the perspective of a
            "reference project" and a "dependent project".  The
            code elements are always assumed to reside in the
            reference project, and the methods in this service reflect
            whether code elements are shared by the dependent project.
            </para>
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ISharedCodeService.GetTypeShareKind(System.String)">
            <summary>
            Returns a value indicating whether the <see cref="T:System.Type"/>specified by <paramref name="typeName"/>
            from the reference project is also visible to the dependent project.
            </summary>
            <param name="typeName">The full name of the <see cref="T:System.Type"/>from the reference project.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ISharedCodeService.GetPropertyShareKind(System.String,System.String)">
            <summary>
            Returns a value indicating whether the a property named <paramref name="propertyName"/>
            exposed by the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the reference project is also visible to the dependent project.
            </summary>
            <param name="typeName">The full name of the <see cref="T:System.Type"/> from the reference project.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ISharedCodeService.GetMethodShareKind(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a value indicating whether a method named <paramref name="methodName"/>
            exposed by the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the reference project is also visible to the dependent project.
            </summary>
            <param name="typeName">The full name of the <see cref="T:System.Type"/> from the reference project.</param>
            <param name="methodName">The name of the method.</param>
            <param name="parameterTypeNames">The full type names of the method parameters, in the order they must be declared.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache">
            <summary>
            Class to maintain a cache of RIA Links (&lt;LinkedServerProject&gt;)
            visible from the project references of a client project.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.#ctor(System.String,System.String,OpenRiaServices.DomainServices.Tools.ILogger,OpenRiaServices.DomainServices.Tools.ProjectFileReader)">
            <summary>
            Creates a new instance
            </summary>
            <param name="rootProjectPath">Full file path to client project to use as root.</param>
            <param name="historyFilePath">Full file path to file to read and write in-memory cache.</param>
            <param name="logger">Instance of an <see cref="T:OpenRiaServices.DomainServices.Tools.ILogger"/> to receive messages.</param>
            <param name="projectFileReader">Instance to use to read the project files.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.IsFileCacheCurrent">
            <summary>
            Gets the value indicating whether the file on disk is
            current with respect to the in-memory contents.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.LinkedServerProjectsByProject">
            <summary>
            Gets the dictionary associating client project paths with their server project identified
            via a RIA Link.
            </summary>
            <remarks>
            This dictionary will lazily load from the cache or the project the first time it is accessed.
            The key is the full path to a client project found via a project reference from our root project.
            The value associated with the key is the full path of the server project identified via a RIA Link.
            Null or empty values are legal and indicate the corresponding client project has no RIA Link.
            Keys are case-insensitive, so keys differing only in case are considered the same.
            There is no entry for the root project itself.
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.Item(System.String)">
            <summary>
            Indexer property that associates a RIA Link project with a given client <paramref name="projectPath"/>
            </summary>
            <value>
            The full name of the server project considered as the target of a RIA Link
            from the perspective of the given <paramref name="projectPath"/>.
            A null or empty string means there is no RIA Link for <paramref name="projectPath"/>
            </value>
            <param name="projectPath">Full path to the client project file considered the source of the RIA Link.</param>
            <returns>The linked server project declared in <paramref name="projectPath"/>. It may be null or empty.
            </returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.ProjectReferences">
            <summary>
            Gets the set of full project paths to all projects referenced by
            our root project.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.LinkedServerProjects">
            <summary>
            Gets the set of full project paths to all the server projects
            visible through a RIA Link from one of the client projects
            found in <see cref="P:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.ProjectReferences"/>
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.GetLinkedServerProjectSources(System.String)">
            <summary>
            Given the name of a server project file known to be the destination of a RIA Link,
            this method returns all the client projects that have a RIA Link to it.
            </summary>
            <remarks>
            Generally there is only one client file in a solution pointing to any given server
            project via a RIA link, but we use a collection because it is possible to have many.
            </remarks>
            <param name="linkedServerProject">Full path to server project file known to be the destination of a RIA Link</param>
            <returns>The set of all client project paths that have a RIA link to <paramref name="linkedServerProject"/></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.SaveCacheToFile">
            <summary>
            Writes our in-memory cache to the history file specified in the ctor.
            </summary>
            <remarks>
            If the in-memory cache shows the client project has no project references
            and therefore no RIA Links, the file will be written, but it will be empty.
            This is intentional so that a subsequent <see cref="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.LoadCacheFromFile"/>
            can return to that empty state rather than force reopening the client project.
            </remarks>
            <returns><c>true</c> means the file was written, <c>false</c> if nothing was written.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.LoadCacheFromFile">
            <summary>
            Loads the internal state from the history file passed to the ctor.
            </summary>
            <remarks>
            If the root project has been modified since the history file
            was written, the entire cache is considered invalid and <c>false</c> is returned.
            If any cached project has been touched since the cache was last written, just
            is portion of the cache will be reloaded from the project file.
            </remarks>
            <returns>A <c>true</c> means the cache was loaded from the history file successfully.
            If we detect the cache is out of date or does not exist, a <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.LoadCacheFromProject">
            <summary>
            Loads the in-memory cache by reading the root project, discovering all the
            project references, and evaluating the &lt;LinkedServerProject&gt; property
            (i.e. the RIA Link) for each.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.LinkedServerProjectCache.LoadRiaLinkFromProject(System.String)">
            <summary>
            Given the full path to a project, return the value of the &lt;LinkedServerProject&gt; property,
            expanded to a full path.
            </summary>
            <param name="projectPath">The full path to the project possibly containing this property.</param>
            <returns>The full path of the RIA link.  It may be null or empty.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.AttributeBuilderException">
            <summary>
            An exception that provides contextual information for exceptions
            that occur during attribute building.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AttributeBuilderException.#ctor(System.Exception,System.Type,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeBuilderException"/> class.
            </summary>
            <param name="innerException">
            The <see cref="T:System.Exception"/> that was thrown during the attribute building process.
            </param>
            <param name="attributeType">The type of attribute that caused the exception.</param>
            <param name="attributePropertyName">
            The name of the property on the <see cref="T:System.Attribute"/> that caused the exception.
            </param>
            <remarks>
            The message for this exception represents the code comment error as well as the
            prefix for the build warning.
            <para>
            The message of the <see cref="P:System.Exception.InnerException"/> is used for the exception
            details.
            </para>
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration">
            <summary>
            Type used to represent an <see cref="T:System.Attribute"/> declaration and its requirements.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.#ctor(System.Type)">
            <summary>
            Constructor accepting the <see cref="T:System.Attribute"/> <see cref="T:System.Type"/>.
            </summary>
            <param name="attributeType">The <see cref="T:System.Attribute"/> <see cref="T:System.Type"/> to represent. Cannot be null.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.HasErrors">
            <summary>
            Gets a boolean indicating whether or not the <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> has errors.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.AttributeType">
            <summary>
            Gets the <see cref="T:System.Attribute"/> <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.ConstructorArguments">
            <summary>
            Gets a collection of constructor arguments.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.Errors">
            <summary>
            Gets a collection of error messages.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.NamedParameters">
            <summary>
            Gets a dictionary of named parameters.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.RequiredTypes">
            <summary>
            Gets a collection of required shared types.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.RequiredMethods">
            <summary>
            Gets a collection of required shared methods.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.AttributeDeclaration.RequiredProperties">
            <summary>
            Gets a collection of required shared properties.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator">
            <summary>
            Proxy generator for custom attributes
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.blockList">
            <summary>
            Block list for framework attributes we want to block from flowing.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator._knownBuilderTypes">
            <summary>
            Known attribute builder types.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator._knownBuilders">
            <summary>
            Known attribute builder instances.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.KnownBuilderTypes">
            <summary>
            Gets the dictionary mapping custom attribute types to their known custom attribute builder types
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.KnownBuilders">
            <summary>
            Gets the dictionary mapping custom attribute types to their builder instances
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Func{OpenRiaServices.DomainServices.Tools.AttributeBuilderException,System.String},System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="getLogWarningMessage">The function to call to get the warning message to be logged</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Func{OpenRiaServices.DomainServices.Tools.AttributeBuilderException,System.String},System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection,System.String)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="getLogWarningMessage">The function to call to get the warning message to be logged</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="customCommentHeader">A custom comment header that will be displayed for any generated comment errors.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection,System.Boolean)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="forcePropagation">Indicates whether or not to force attribute propagation.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Func{OpenRiaServices.DomainServices.Tools.AttributeBuilderException,System.String},System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeAttributeDeclarationCollection,System.CodeDom.CodeCommentStatementCollection,System.String,System.Boolean)">
            <summary>
            Generates code for the given custom attributes and adds them to the given <see cref="T:System.CodeDom.CodeAttributeDeclarationCollection"/>
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="getLogWarningMessage">The function to call to get the warning message to be logged</param>
            <param name="attributes">Collection of attributes to generate</param>
            <param name="outputCollection">The collection to which the generated attributes will be added</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="customCommentHeader">A custom comment header that will be displayed for any generated comment errors.</param>
            <param name="forcePropagation">Indicates whether or not to force attribute propagation.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCustomAttributes(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Func{OpenRiaServices.DomainServices.Tools.AttributeBuilderException,System.String},System.Collections.Generic.IEnumerable{System.Attribute},System.CodeDom.CodeCommentStatementCollection,System.String,System.Boolean)">
            <summary>
            Generates code for the given set of custom attributes
            </summary>
            <param name="proxyGenerator">Root client proxy generator</param>
            <param name="referencingType">The referencing type</param>
            <param name="getLogWarningMessage">The function to call to get the warning message to be logged</param>
            <param name="attributes">Collection of attributes for which to generate code</param>
            <param name="comments">Collection of comments that should be updated if errors are discovered.</param>
            <param name="customCommentHeader">A custom comment header that will be displayed for any generated comment errors.</param>
            <param name="forcePropagation">Indicates whether or not to force attribute propagation.</param>
            <returns>The collection of generated attribute declarations corresponding to <paramref name="attributes"/></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCustomAttributesErrorCommentHeader(System.CodeDom.CodeCommentStatementCollection,System.String,System.Boolean@)">
            <summary>
            Ensures that the specified custom comment header has been generated in the comments.
            </summary>
            <param name="comments">The collection of comments being built</param>
            <param name="customCommentHeader">The custom comment header to ensure has been emitted</param>
            <param name="emittedErrorCommentHeader">The boolean to track whether or not the custom comment header has been emitted</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GetCustomAttributeBuilder(System.Type)">
            <summary>
            Retrieves the appropriate custom attribute builder for a given attribute instance
            </summary>
            <param name="attributeType">The attribute type.  It cannot be null.</param>
            <returns>The custom attribute builder for it.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.ConstructCodeAttributeFailureComments(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,OpenRiaServices.DomainServices.Tools.AttributeDeclaration)">
            <summary>
            Generate comments indicating attribute propagation failure.
            </summary>
            <param name="proxyGenerator">The context for generating code.  It cannot be <c>null</c>.</param>
            <param name="attributeDeclaration">The attribute declaration to generate as a comment.</param>
            <returns>A collection of comments.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.ConstructCodeAttributeFailureComments(System.String)">
            <summary>
            Generate comments indicating attribute propagation failure.
            </summary>
            <param name="errorMessage">The error message to generate an attribute failure comment for.</param>
            <returns>A collection of comments.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.ValidateAttributeDeclarationRequirements(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,OpenRiaServices.DomainServices.Tools.AttributeDeclaration)">
            <summary>
            Verifies that a <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/>'s shared type requirements are met.
            </summary>
            <param name="proxyGenerator">The context for code generation</param>
            <param name="attributeDeclaration">The <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> to verify.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.GenerateCodeAttribute(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,OpenRiaServices.DomainServices.Tools.AttributeDeclaration)">
            <summary>
            Generates an attribute declaration string.  This is used in scenarios where an attribute declaration is needed
            in the form of a comment.  CodeDOM does not support generation of standalone attributes.
            </summary>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="attributeDeclaration">The <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> to represent.</param>
            <returns>An attribute declaration.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.ConvertValueToCode(System.Object,System.Boolean)">
            <summary>
            Converts a value to its source code representation.
            </summary>
            <param name="value">The value to convert.</param>
            <param name="isCSharp">A booleaning indicating whether or not the target language is C#.</param>
            <returns>A string representing the <paramref name="value"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.CreateCodeAttributeDeclaration(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,OpenRiaServices.DomainServices.Tools.AttributeDeclaration)">
            <summary>
            Creates a <see cref="T:System.CodeDom.CodeAttributeDeclaration"/> for the given <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/>.
            </summary>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="referencingType">The referencing type.</param>
            <param name="attributeDeclaration">The <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> to build.</param>
            <returns>A <see cref="T:System.CodeDom.CodeAttributeDeclaration"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.IsAttributeBlocked(System.Type)">
            <summary>
            Returns a value expressing whether or not the attribute type is blocked from generation.
            </summary>
            <param name="attributeType">The attribute type to check.</param>
            <returns>True if the attribute should be blocked.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.CustomAttributeGenerator.CreateCodeExpression(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,System.CodeDom.CodeTypeDeclaration,System.Object)">
            <summary>
            Creates the CodeDom CodeExpression for the given value.  Returns null if unable to generate a CodeExpression.
            </summary>
            <remarks>This method exists solely to help generate code for all object types that can appear in an
            attribute declaration, such as typeof()</remarks>
            <param name="proxyGenerator">The context for generating code.  It cannot be null.</param>
            <param name="referencingType">The referencing type</param>
            <param name="value">The value.  Null is permitted.</param>
            <returns>The code expression</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.CustomValidationCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder to deal with CustomValidationAttribute.
            </summary>
            <remarks>This class exists primarily to do type-checking during code generation.  A [CustomValidation]
            attribute is flagged as an error if the named type and validation methods cannot be located. If the 
            validator type is visible to the client the attribute will be propagated.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DataMemberAttributeBuilder">
            <summary>
            DataMemberAttribute custom attribute builder.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DataMemberAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Overrides the MapProperty method to simply to remove Order from the list of properties to generate.
            </summary>
            <param name="propertyInfo">The getter property to consider</param>
            <param name="attribute">The current attribute instance we are considering</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
            <remarks>Specifically for the <see cref="T:System.Runtime.Serialization.DataMemberAttribute"/> type, this method returns null if the property 
            name is "Order" or "IsNameSetExplicitly".</remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DisplayCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder that special-cases the [Display] attribute
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.DomainIdentifierAttributeBuilder">
            <summary>
            DomainIdentifierAttribute custom attribute builder.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.DomainIdentifierAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Overrides the MapProperty method to simply to remove CodeProcessor from the list of properties to generate.
            </summary>
            <param name="propertyInfo">The getter property to consider</param>
            <param name="attribute">The current attribute instance we are considering</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
            <remarks>Specifically for the <see cref="T:OpenRiaServices.DomainServices.DomainIdentifierAttribute"/> type, this method returns null if the property 
            name is "CodeProcessor".</remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.EditableAttributeBuilder">
            <summary>
            Custom attribute builder generates <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> representations of
            <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> instances.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.EditableAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Generates a <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> representation of an 
            <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/> instance.
            </summary>
            <param name="attribute">The <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/>.</param>
            <returns>A <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> representation of 
            <paramref name="attribute"/>.</returns>
            <exception cref="T:System.InvalidCastException">if <paramref name="attribute"/> is 
            not a <see cref="T:System.ComponentModel.DataAnnotations.EditableAttribute"/>.</exception>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ICustomAttributeBuilder">
            <summary>
            Contract for codegen attribute builders.
            </summary>    
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ICustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An <see cref="T:System.Attribute"/> instance to create a <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
            <exception cref="T:System.ArgumentException">if it cannot generate the provided <paramref name="attribute"/>.</exception>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.RangeCustomAttributeBuilder">
            <summary>
            Derived custom attribute builder that special-cases the [Range] attribute
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder">
            <summary>
            Standard custom attribute builder.
            </summary>
            <remarks>This custom attribute builder class generates a CodeDom custom attribute declaration
            for most well-formed custom attribute types.  To be well formed, an attribute must either expose
            public setters for every public property it exposes, or it must provide a constructor whose
            parameter names match properties for which there is no public setter.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An attribute instance to create a <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Given the name of a property from which we fetched a property, returns the
            name of the property we should use to set the value.  A null return means
            this property should be ignored by code gen.
            </summary>
            <param name="propertyInfo">The getter property to consider.</param>
            <param name="attribute">The current attribute instance we are considering.</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.DefaultInstanceForType(System.Type)">
            <summary>
            Returns the default object instance for the given type, effectively default(T)
            </summary>
            <param name="t">The type whose default is needed</param>
            <returns>The default value for that type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.CanValueBeAssignedToType(System.Type,System.Object)">
            <summary>
            Determines whether the given value may legally be assigned to the specified type
            </summary>
            <param name="type">The type to which it will be assigned</param>
            <param name="value">The value to test</param>
            <returns><c>true</c> if the value can legally be assigned</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.GetUnsettableProperties(System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap})">
            <summary>
            Retrieves the list of properties that have no public setter
            </summary>
            <param name="propertyMaps">A list of properties to consider</param>
            <returns>The subset of the input list containing all properties lacking a public setter</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.FindBestConstructor(System.Collections.Generic.ICollection{OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.IDictionary{System.String,System.Object},System.Type)">
            <summary>
            Locates the best constructor that allows all the given properties to be set.
            </summary>
            <param name="propertyMaps">The set of properties we want to set via a constructor</param>
            <param name="currentValues">The set of current values for these properties</param>
            <param name="attributeType">The type of attribute whose ctor we need to call</param>
            <returns>The list of constructor parameters, in the order they must be passed to the ctor, to invoke the best constructor.  
            Null means no constructor is available that can set them.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.ParametersAcceptAllProperties(System.Reflection.ParameterInfo[],System.Collections.Generic.ICollection{OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Determines whether the given set of constuctor parameters can legally be assigned the
            given set of property values.
            </summary>
            <param name="parameters">The list of constructor parameters to consider</param>
            <param name="propertyMaps">The list of properties we would assign into these parameters</param>
            <param name="currentValues">The current values for the properties</param>
            <returns><c>true</c> if all the properties can be assigned to those parameters</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.GetPropertyValues(System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Attribute)">
            <summary>
            Builds and returns a dictionary of all the current values for all the specified properties in a given
            object instance.
            </summary>
            <param name="propertyMaps">The set of properties to read</param>
            <param name="attribute">The attribute instance to fetch the property values from</param>
            <returns>The dictionary of name-value pairs, one per property</returns>
            <exception cref="T:OpenRiaServices.DomainServices.Tools.AttributeBuilderException">When a property on the attribute throws an exception</exception>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.GetDefaultPropertyValues(System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Attribute,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Builds and returns a dictionary of all the default values for the given properties for a given attribute type
            </summary>
            <param name="propertyMaps">The set of properties to read</param>
            <param name="attribute">The current attribute instance</param>
            <param name="currentValues">The current values for the attribute instance for which we are generating code</param>
            <returns>The dictionary of name-value pairs containing default values for each property</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.GetNonDefaultProperties(System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap},System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Retrieves the list of properties that contain values other than the defaults for an attribute
            </summary>
            <remarks>This list becomes the set of properties for which explicit code gen is required, assuming
            that if they are not set, they will retain their default values.</remarks>
            <param name="propertyMaps">The set of properties to consider</param>
            <param name="currentValues">The current values for the properties</param>
            <param name="defaultValues">The default values for the properties</param>
            <returns>The set of properties whose current values are other than their default values</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.CanPropertyBeSetDeclaratively(System.Reflection.PropertyInfo)">
            <summary>
            Determines whether the given property could legally be set via an
            Attribute declaration, where only constants or arrays of constants are allowed
            </summary>
            <param name="property">The property to test</param>
            <returns><c>true</c> means the property could be set via an Attribute declaration</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.BuildPropertyMaps(System.Attribute)">
            <summary>
            Constructs a collection of PropertyMaps.  A PropertyMap allows a "getter" property to
            redirect to a different "setter" property.  Properties that should not be treated by
            code gen don't appear in the map.  The getter/setter mapping is done because it is
            a relatively common scenario to have calculated properties that either cannot be set
            directly or should be effectively set through a different property.
            </summary>
            <param name="attribute">The current attribute instance</param>
            <returns>A list of <see cref="T:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap"/> instances.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap">
            <summary>
            Helper class used internally.  A PropertyMap is simply a tuple that relates a property getter with its appropriate setter.
            Normally these are identical, but a surprising number of attributes expose calculated getters that are actually influenced
            by some other setter.  By keeping these concepts separate, it is easier to allow derived classes to map computed getters
            to a better property.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap.#ctor(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap"/> class.
            </summary>
            <param name="getter">The property's getter <see cref="T:System.Reflection.PropertyInfo"/>.</param>
            <param name="setter">The property's setter <see cref="T:System.Reflection.PropertyInfo"/>.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap.Getter">
            <summary>
            Gets the property's getter <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.StandardCustomAttributeBuilder.PropertyMap.Setter">
            <summary>
            Gets the property's setter <see cref="T:System.Reflection.PropertyInfo"/>.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.UIHintCustomAttributeBuilder">
            <summary>
            Class to generate code for the [UIHint] attribute.
            </summary>
            <remarks>
            Specialization is required for the non-standard way this attribute allows a variable number
            of parameters and composes them into a dictionary of name value pairs.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ValidationCustomAttributeBuilder">
            <summary>
            Standard custom attribute builder for ValidationAttributes containing globalized resources.
            </summary>
            <remarks>
            This subclass of StandardCustomAttributeBuilder is aware of the subset of attributes
            that contain globalized resources and validates that they are correct prior to generating code
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ValidationCustomAttributeBuilder.MatchTimeoutInMillisecondsDefault">
            <summary>
            Get the default value of <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.MatchTimeoutInMilliseconds.
            The property was introduced in .Net 4.6.1 but we can se it with reflection from older versions.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidationCustomAttributeBuilder.GetAttributeDeclaration(System.Attribute)">
            <summary>
            Returns a representative <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> for a given <see cref="T:System.Attribute"/> instance.
            </summary>
            <param name="attribute">An attribute instance to create a <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> for.</param>
            <returns>A <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> representing the <paramref name="attribute"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidationCustomAttributeBuilder.RegisterSharedResources(System.ComponentModel.DataAnnotations.ValidationAttribute,OpenRiaServices.DomainServices.Tools.AttributeDeclaration)">
            <summary>
            Registers any resource type used by the given <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> that must be shared and 
            have a named resource property available.
            </summary>
            <param name="validationAttribute">The <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute"/> instance to check.</param>
            <param name="attributeDeclaration">The <see cref="T:OpenRiaServices.DomainServices.Tools.AttributeDeclaration"/> used to describe <paramref name="validationAttribute"/>.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidationCustomAttributeBuilder.MapProperty(System.Reflection.PropertyInfo,System.Attribute)">
            <summary>
            Override the MapProperty to skip generation of <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute"/>.MatchTimeoutInMilliseconds
            unless it is explicitly set. 
            </summary>
            <param name="propertyInfo">The getter property to consider.</param>
            <param name="attribute">The current attribute instance we are considering.</param>
            <returns>The name of the property we should use as the setter or null to suppress codegen.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Naming">
            <summary>
            Contains code useful for creating and validating names. 
            Pluralization support, unique name creating, valid identifiers, etc.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.Naming.MakePluralName(System.String)">
            <summary>
            Changes the string in name to be plural. In place string edit.
            </summary>
            <param name="name">The name to pluralize.</param>
            <returns>A reference to name for convenience.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator">
            <summary>
            Utility class for generating notification partial methods and method calls. 
            These methods are of the form: 
            partial void OnCreated(), OnPropertyNameCalled/Calling(args...), OnCustomMethodInvoked/Invoking(args ...)
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The current <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator"/>.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator,OpenRiaServices.DomainServices.Tools.IndentationLevel)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The current <see cref="T:OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator"/>.</param>
            <param name="indentLevel">The indentation level for the code to write.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.OnCreatedMethodInvokeExpression">
            <summary>
            Known method invoke expression of the form:
            this.OnCreated();
            </summary>
            <returns>Returns the invoke expression.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.PartialMethodsSnippetBlock">
            <summary>
            Gets all generated partial name snippets generated by the AddMethodFor methods, in the form:
            #region [region comment]
            partial void OnMethodCalled();
            partial void OnMethodCalling();
            #endregion
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.AddMethodFor(System.String,System.String)">
            <summary>
            Adds a method invoke expression and a partial method definition based on the specified base method name
            to the internal method collection.
            </summary>
            <param name="baseMethodName">base method name w/o the On prefix (like Created for OnCreated)</param>
            <param name="comments">the comments for the partial property definition</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.AddMethodFor(System.String,System.CodeDom.CodeParameterDeclarationExpression,System.String)">
            <summary>
            Adds a method invoke expression and a partial method definition based on the specified base method name
            to the internal method collection.
            </summary>
            <param name="baseMethodName">base method name w/o the On prefix (like Created for OnCreated)</param>
            <param name="parameterDeclaration">parameter declaration for the only param of the method to be generated</param>
            <param name="comments">the comments for the partial property definition</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.AddMethodFor(System.String,System.CodeDom.CodeParameterDeclarationExpressionCollection,System.String)">
            <summary>
            Adds a method invoke expression and a partial method definition based on the specified base method name
            to the internal method collection.
            </summary>
            <param name="baseMethodName">base method name w/o the On prefix (like Created for OnCreated)</param>
            <param name="parameters">if provided, the parameters for the method to be generated</param>
            <param name="comments">the comments for the partial property definition</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.GetMethodInvokeExpressionStatementFor(System.String)">
            <summary>
            Gets a CodeMethodStatement from the generated CodeMethodInvokeExpression for the specified method/property name.
            </summary>
            <param name="baseMethodName">The name of the method/property for which a notification method was generated</param>
            <returns>Returns the expression statement.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.CreateNotificationPartialMethod(System.String,System.CodeDom.CodeParameterDeclarationExpressionCollection)">
            <summary>
            Generates a notification partial method for the specified method, this is of the form
            OnCreated(args...) for the Created(args...) method.
            </summary>
            <param name="methodName">The name of the method to create a notification method for.</param>
            <param name="parameters">the method parameters, if any.</param>
            <returns>Code snippet for the notification partial method.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.NotificationMethodGenerator.SetGlobalTypeReference(System.CodeDom.CodeTypeReference)">
            <summary>
            Processes a <see cref="T:System.CodeDom.CodeTypeReference"/> and sets its <see cref="T:System.CodeDom.CodeTypeReferenceOptions"/>
            such that global type references will be emitted.
            </summary>
            <param name="codeTypeReference">The <see cref="T:System.CodeDom.CodeTypeReference"/> to update.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SourceLocation.PdbSourceFileProviderFactory">
            <summary>
            PDB-based implementation of <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider"/> to locate source files for types or methods.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.PdbSourceFileProviderFactory.#ctor(System.String,OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="symbolSearchPath">Optional list of semicolon separated paths to search for PDB files.</param>
            <param name="logger">Optional logger to use to report errors or warnings.</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SourceLocation.PdbSourceFileProviderFactory.PdbSourceFileProvider">
            <summary>
            Helper class to encapsulate the symbol reader during analysis
            of a type.  This class is instantiated when the base class asks
            for a location context, and then it is disposed by the base.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SourceLocation.PdbSourceFileProviderFactory.PdbSourceFileProvider.Item(System.Type)">
            <summary>
            Indexer that gets the <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader"/> appropriate to analyze
            the specified <paramref name="type"/>.  This indexer caches by Assembly.
            </summary>
            <param name="type">The type we will analyze.</param>
            <returns>A <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader"/> or <c>null</c> if one is not available.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.PdbSourceFileProviderFactory.PdbSourceFileProvider.GetFileForMethod(System.Diagnostics.SymbolStore.ISymbolReader,System.Reflection.MethodBase)">
            <summary>
            Returns the name of the file for the given method using the given symbol reader
            </summary>
            <param name="reader">The reader to use</param>
            <param name="methodBase">The method to lookup</param>
            <returns>The file containing the method or null.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.PdbSourceFileProviderFactory.PdbSourceFileProvider.CreateSymbolReader(System.Reflection.Assembly)">
            <summary>
            Creates a <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader"/> for the given <paramref name="assembly"/>.
            </summary>
            <param name="assembly">The assembly whose reader is needed.</param>
            <returns>The <see cref="T:System.Diagnostics.SymbolStore.ISymbolReader"/> instance or <c>null</c> if one cannot be created (e.g. no PDB).</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo">
            <summary>
            Class that supports the dynamically generated <c>SourceInfoAttribute</c> in Live Intellisense
            builds.
            </summary>
            <remarks>
             Becuase Live Intellisense builds creates an assembly for analysis using synthesized
             files, the PDB information will not reliably report the original source files where
             types and members were declared.  This defeats both the discovery of shared files as
             well as use of the PDB for reporting error positions.
             <para>
             To address this issue, the synthesized assembly will include a <c>SourceInfoAttribute</c>
             type, and it will add this attribute to each type and member.  This serves as an out-of-band
             PDB mechanism to locate the original files and positions.
             </para>
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Initializes a new <see cref="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo"/> instance.
            </summary>
            <param name="fileName">The full path to the original source file.  It may be null or empty.</param>
            <param name="line">The line number in the file where the member was declared.</param>
            <param name="column">The column number in the file where the member was declared.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.FileName">
            <summary>
            Gets the full path of the original source file.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.Line">
            <summary>
            Gets the line number where the corresponding type
            or member was declare in <see cref="P:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.FileName"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.Column">
            <summary>
            Gets the column number where the corresponding type
            or member was declare in <see cref="P:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.FileName"/>.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.GetSourceInfoFromAttribute(System.Object)">
            <summary>
            Helper class to extract values out of the <paramref name="attribute"/> that is known
            to be a <c>SourceInfoAttribute</c> and to create a new <see cref="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo"/> instance.
            </summary>
            <param name="attribute">An attribute instance known to be a <c>SourceInfoAttribute</c>.</param>
            <returns>A new <see cref="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo"/> instance, or null if there is a problem with the attribute structure.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo.GetSourceInfoFromAttributes(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Examines the set of <paramref name="attributes"/> and returns a new <see cref="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo"/>
            instance from the first <c>SourceInfoAttribute</c> in the set.
            </summary>
            <param name="attributes">A list of attribute instances that may contain a <c>SourceInfoAttribute</c>.</param>
            <returns>A new <see cref="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfo"/> instance or <c>null</c> if the set of <paramref name="attributes"/>
            did not contain a <c>SourceInfoAttribute</c>.
            </returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfoSourceFileProviderFactory">
            <summary>
            Implementation of <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProviderFactory"/> that returns
            an <see cref="T:System.IServiceProvider"/> that analyzes PDBs.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfoSourceFileProviderFactory.SourceInfoSourceFileProvider">
            <summary>
            Implementation of <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider"/> that relies on
            the <c>SourceInfoAttribute</c> attached to type members.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SourceLocation.SourceInfoSourceFileProviderFactory.SourceInfoSourceFileProvider.GetFileForMember(System.Reflection.MemberInfo)">
            <summary>
            See <see cref="M:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider.GetFileForMember(System.Reflection.MemberInfo)"/>.
            </summary>
            <remarks>
            This implementation-specific method uses Reflection to find a
            <c>SourceInfoAttribute</c> attached to the member.  If present,
            it identifies the source file.
            </remarks>
            <param name="memberInfo">The member for which a file location is needed.</param>
            <returns>The file name or <c>null</c> if it cannot be determined.</returns>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.HResult.E_FAIL">
            <summary>
            General failure
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolFormat">
            <summary>
            Enumeration of supported symbol formats
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolFormat.PDB">
            <summary>
            Normal PDB format - requires diasymreader.dll
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolAccess">
            <summary>
            This class includes methods for getting top-level access to symbol objects for reading and writing to PDB files
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolAccess.GetReaderForFile(System.String)">
            <summary>
            If you want a SymbolReader for a given exe, just use this function.
            </summary>
            <param name="pathModule">The path to the file</param>
            <returns>A symbol reader</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolAccess.GetReaderForFile(System.String,System.String)">
            <summary>
            If you know the name of the exe and a searchPath where the file may exist, use this one.
            </summary>
            <param name="pathModule">The module name to search</param>
            <param name="searchPath">The search path if known.  It may be null.</param>
            <returns>A new symbol reader for that module</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.IMetadataImportPrivateComVisible">
            <summary>
            This interface is public to allow Marshal.GetComInterfaceForObject() within this
            implementation.  Do not use this interface.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.IMetadataImportPrivateComVisible.Placeholder">
            <summary>
            Just need a single placeholder method so that it doesn't complain about an empty interface.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolBinder.#ctor(OpenRiaServices.DomainServices.Tools.Pdb.SymStore.ISymUnmanagedBinder)">
            <summary>
            Create a SymbolBinder given the underling COM object for ISymUnmanagedBinder
            </summary>
            <param name="comBinderObject"></param>
            <remarks>Note that this could be protected, but C# doesn't have a way to express "internal AND 
            protected", just "internal OR protected"</remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymbolBinder.GetReaderFromCOM(System.Object)">
            <summary>
            Get an ISymbolReader interface given a raw COM symbol reader object.
            </summary>
            <param name="reader">A COM object implementing ISymUnmanagedReader</param>
            <returns>The ISybmolReader interface wrapping the provided COM object</returns>
            <remarks>This method is on SymbolBinder because it's conceptually similar to the
            other methods for creating a reader.  It does not, however, actually need to use the underlying
            Binder, so it could be on SymReader instead (but we'd have to make it a public class instead of
            internal).</remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Pdb.SymStore.SymSearchPolicies">
            <summary>
            Available search policies for symbols
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ProjectFileReader">
            <summary>
            This utility class offers basic support for reading MSBuild
            project files.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.#ctor(OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="logger">The <see cref="T:OpenRiaServices.DomainServices.Tools.ILogger"/> to use for warnings and errors.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.ConvertToRelativePath(System.String,System.String)">
            <summary>
            Returns the relative path of the given <paramref name="path"/>
            relative to <paramref name="projectPath"/>.
            </summary>
            <param name="path">The path we want made into a relative path.</param>
            <param name="projectPath">The project file we want it relative to.</param>
            <returns>The relative path if it is possible, else the unmodified <paramref name="path"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.ConvertToFullPath(System.String,System.String)">
            <summary>
            Returns the full path of the given <paramref name="path"/> relative to the
            given <paramref name="projectPath"/>.
            </summary>
            <param name="path">The path to convert (if not rooted).</param>
            <param name="projectPath">The path to use as the root.</param>
            <returns>The full path of the input <paramref name="path"/>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.LoadProject(System.String)">
            <summary>
            Retrieves a <see cref="T:Microsoft.Build.Evaluation.Project"/> instance from the given project path.
            </summary>
            <param name="projectPath">Full path name to the project file.</param>
            <returns>The project instance or null if it does not exist</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.GetPropertyValue(System.String,System.String)">
            <summary>
            Retrieves the named property from the specified project
            </summary>
            <param name="projectPath">Full path to the project file.</param>
            <param name="propertyName">Name of the property to retrieve</param>
            <returns>The value of the property, or null if it does not exist.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.LoadProjectReferences(System.String)">
            <summary>
            Returns the list of all project references found in the given <paramref name="projectPath"/>
            </summary>
            <remarks>
            This method unconditionally opens an MSBuild object model on the given project
            to extract the set of project references.  It does not cache.  Use with care.
            </remarks>
            <param name="projectPath">Full path to the project to open.</param>
            <returns>The list of full project file names referred by by the given project.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.LoadSourceFilesFromProject(System.String)">
            <summary>
            Retrieves the list of source file names from the specified project.
            </summary>
            <param name="projectPath">Full path to the project file.</param>
            <returns>A non-null (but possibly empty) list of full paths to files.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectFileReader.Dispose">
            <summary>
            Override of IDisposable.Dispose to handle implementation details of dispose
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache">
            <summary>
            This class is responsible for managing the cache of
            source file names for all projects visible to a root project.
            </summary>
            <remarks>
            This class is used by the <see cref="T:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask"/> to
            capture the list of project-to-project references from the root
            project and all the source files within those projects.  It
            has the ability to write this information to disk between builds to
            enhance performance of incremental builds.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.#ctor(System.String,System.String,OpenRiaServices.DomainServices.Tools.ILogger,OpenRiaServices.DomainServices.Tools.ProjectFileReader)">
            <summary>
            Sole constructor
            </summary>
            <param name="rootProjectPath">Full path to the root project file.</param>
            <param name="historyFilePath">Full path to the file where we are allowed to write results between builds.</param>
            <param name="logger">The <see cref="T:OpenRiaServices.DomainServices.Tools.ILogger"/> to use for warnings and errors.</param>
            <param name="projectFileReader">Instance to use to read the project files.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.IsFileCacheCurrent">
            <summary>
            Gets the value indicating whether the file on disk is
            current with respect to the in-memory contents
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.SourceFilesByProject">
            <summary>
            Gets the cache of known source file names keyed by project name.
            </summary>
            <value>
            The value is a dictionary keyed by full path to the project file(s),
            containing the set of known source file names for that project.
            The first access of this property allocates the data structure
            but does not load it.  The keys are case-insensitive.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.Item(System.String)">
            <summary>
            Indexer property that associates a set of source file names
            with a project via the <see cref="P:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.SourceFilesByProject"/> property.
            </summary>
            <value>
            The set of files to associate with this project.  <c>Null</c>
            is treated as a request to remove the associated project from
            the internal cache.  An empty list is permitted and adds an
            entry for the given project.  It means that we know that project
            has been analyzed and has no files, whereas a null means
            we don't know.
            </value>
            <param name="projectPath">Full path to the project file.</param>
            <returns>The set of source file names associated with the given <paramref name="projectPath"/>.
            A <c>null</c> indicates no files are associated with it.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.GetAllKnownProjects">
            <summary>
            Returns the list of all project file names, including the root project
            and all the projects to which is has project references.
            </summary>
            <remarks>
            This method will load the internal data structures the first time it is
            invoked.  Subsequent loads will reuse the cached data.
            </remarks>
            <returns>The collection of full project paths for the root project and all its project references.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.GetSourceFilesInProject(System.String)">
            <summary>
            Returns the list of  source file names from the given project, which is assumed to be
            one of the projects returned by <see cref="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.GetAllKnownProjects"/>
            </summary>
            <remarks>
            This method will load the internal data structures the first time it is
            invoked.  An unknown <paramref name="projectPath"/> will return <c>null</c>.
            </remarks>
            <param name="projectPath">The full path of a project file.</param>
            <returns>The collection of the full paths of the files.  This list may be empty.
            A <c>null</c> return indicates the given <paramref name="projectPath"/> is not known.
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.GetSourceFilesInAllProjects">
            <summary>
            Retrieves the set of all known source file names from the root
            project and all the projects it references.
            </summary>
            <returns>The collection of full paths to all known source files.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.SaveCacheToFile">
            <summary>
            Writes our internal knowledge of project references and their source file names
            to the breadcrumb file passed to the ctor.
            </summary>
            <returns><c>true</c> means the file was written, <c>false</c> if nothing was written.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.GetOrLoadSourceFilesByProject">
            <summary>
            Gets (or loads if this is the first call) the cache of all known project files
            and their associated source files.
            </summary>
            <returns>A dictionary keyed by full project name and containing all the source files for that project.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.LoadCacheFromFile">
            <summary>
            Loads the internal state from the breadcrumb file passed to the ctor.
            </summary>
            <remarks>
            If the root project has been modified since the breadcrumb file
            was written, the entire cache is considered invalid and <c>false</c> is returned.
            If any cached project has been touched since the cache was last written, just
            is portion of the cache will be reloaded from the project file.
            </remarks>
            <returns>A <c>true</c> means the cache was loaded from the breadcrumb file successfully.
            If we detect the cache is out of date or does not exist, a <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProjectSourceFileCache.LoadSourceFilesFromProjects">
            <summary>
            Loads the internal state by opening the root project and all its referenced projects.
            </summary>
            <remarks>This method does not use the cache and is expensive, 
            requiring on the order of 1/2 second per project opened.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ProxyGenerator">
            <summary>
            Abstract base class for all proxy generators.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProxyGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.ProxyGenerator"/> class.
            </summary>
            <param name="proxyGenerator">Our root client proxy generator holding the compilation context.  Cannot be null.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ProxyGenerator.ClientProxyGenerator">
            <summary>
            Gets the main client proxy generator in whose compilation context we are generating code
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ProxyGenerator.Generate">
            <summary>
            Invoked after initialization to product proxy code
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Resource">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Analyzing_Project_Files">
            <summary>
              Looks up a localized string similar to Analyzing project &apos;{0}&apos; for shared source files..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Analyzing_Project_References">
            <summary>
              Looks up a localized string similar to Analyzing project &apos;{0}&apos; for project references..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Assembly_Load_Error">
             <summary>
               Looks up a localized string similar to Assembly &apos;{0}&apos; could not be loaded and will be ignored.
            {1}.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Assembly_Load_Type_Error">
             <summary>
               Looks up a localized string similar to Failed to load types from assembly &apos;{0}&apos; so the assembly will be ignored.
            {1}.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_FailedToGenerate">
            <summary>
              Looks up a localized string similar to The following attributes were not generated:.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_FailedToGenerate_ErrorTemplate">
            <summary>
              Looks up a localized string similar to - {0}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_Parameter_FailedToGenerate">
            <summary>
              Looks up a localized string similar to Unable to generate the following attributes for parameter &apos;{0}&apos; due to the following errors:.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresBuilder">
             <summary>
               Looks up a localized string similar to The attribute &apos;{0}&apos; was not generated because a suitable attribute generator was not found.
            
            Please ensure that the attribute type follows recommended .NET Framework guidelines and meets the following requirements:
             - The attribute has one or more public constructors.
             - All public properties have public setter methods.
               OR
             - A public constructor exists that accepts parameters matching all public properties without public setter methods.  (Matching is performed by case-insensitive name and type.).
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresDataAnnotations">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; requires a reference to System.ComponentModel.DataAnnotations in the client project &apos;{1}&apos;. Skipping generation of attribute. Please add a reference to System.ComponentModel.DataAnnotations to ensure generation of the attribute..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; is not visible in the client project &apos;{1}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Method">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references a method &apos;{1}&apos; on type &apos;{2}&apos; that is not accessible in the client project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_NoPDB">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; in assembly &apos;{1}&apos;
            was not generated in the proxy classes for client project &apos;{2}&apos;
            because there was insufficient information to determine whether it is visible to the client project.
            If this attribute type is intended to be used in shared code, avoid the use of
            automatic properties, provide at least a default constructor,
            and be sure a PDB is available for analysis..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Property">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references a property &apos;{1}&apos; on type &apos;{2}&apos; that is not accessible in the client project &apos;{3}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Type">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references type &apos;{1}&apos; that is not accessible in the client project &apos;{2}&apos;. If you would like the attribute to be generated, make sure the assembly containing the attribute is referenced on the client..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_RequiresShared_Type_NoPDB">
            <summary>
              Looks up a localized string similar to The attribute &apos;{0}&apos; references type &apos;{1}&apos; from assembly &apos;{2}&apos;. The type is not visible to the client project &apos;{3}&apos; because either a PDB file does not exist or the type does not contain user-defined code..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException">
            <summary>
              Looks up a localized string similar to An exception occurred generating the &apos;{1}&apos; property on attribute of type &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeMethod">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; method of the &apos;{2}&apos; class.  Exception message: {3}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeMethodParameter">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; parameter to the &apos;{2}&apos; method of the &apos;{3}&apos; class.  Exception message: {4}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeType">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; type.  Exception message: {2}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Attribute_ThrewException_CodeTypeMember">
            <summary>
              Looks up a localized string similar to {0}  The attribute could not be generated for the &apos;{1}&apos; member of the &apos;{2}&apos; type.  Exception message: {3}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Cannot_Have_Include_And_Exclude">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; in type &apos;{1}&apos; is marked with both IncludeAttribute and ExcludeAttribute.  Ignoring IncludeAttribute. Please remove the ExcludeAttribute if you want the association in the generated code..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_ComplexTypesCannotBeShared_Reference">
            <summary>
              Looks up a localized string similar to The Complex Type &apos;{0}&apos; already exists in another assembly. Complex Types cannot be defined in multiple assemblies..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Copying_File">
            <summary>
              Looks up a localized string similar to Copying file &apos;{0}&apos; to &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Deleting_Orphan">
            <summary>
              Looks up a localized string similar to Deleting previously generated file &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Deleting_Orphan_Folder">
            <summary>
              Looks up a localized string similar to Deleting empty folder &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Domain_Op_Enum_Error">
            <summary>
              Looks up a localized string similar to DomainOperationEntry &apos;{0}&apos; in DomainService &apos;{1}&apos; will not be generated because it uses the Enum type &apos;{2}&apos;.  {3}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CannotBeNested">
            <summary>
              Looks up a localized string similar to Cannot generate DomainService &apos;{0}&apos;. Nested DomainService types are not supported..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_ExceptionCaught">
            <summary>
              Looks up a localized string similar to CodeProcessor type &apos;{0}&apos; defined in DomainIdentifier attribute on type &apos;{1}&apos; threw an Exception: {2}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_InvalidConstructorSignature">
            <summary>
              Looks up a localized string similar to CodeProcessor type &apos;{0}&apos; defined in DomainIdentifier attribute on type &apos;{1}&apos; must have a constructor accepting one parameter of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_DomainService_CodeProcessor_NotValidType">
            <summary>
              Looks up a localized string similar to Type &apos;{0}&apos; defined in DomainIdentifier attribute on type &apos;{1}&apos; is not a valid CodeProcessor implementation..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_DomainService_Inheritance_Not_Allowed">
            <summary>
              Looks up a localized string similar to DomainService &apos;{0}&apos; derives from DomainService &apos;{1}&apos;. Only the leaf DomainService in the inheritance hierarchy may have the EnableClientAccessAttribute..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_EmptyDomainService">
            <summary>
              Looks up a localized string similar to DomainService &apos;{0}&apos; does not contain any public domain operations..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_EntityTypesCannotBeShared_Reference">
            <summary>
              Looks up a localized string similar to The entity type &apos;{0}&apos; already exists in another assembly. Entity types cannot be defined in multiple assemblies..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Failed_Delete_Folder">
            <summary>
              Looks up a localized string similar to Could not delete folder &apos;{0}&apos;.  {1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Failed_Loading_OpenRiaServices_Assembly">
            <summary>
              Looks up a localized string similar to Failed to load the {0} assembly using the path {1}, code generation might fail. Is the server project missing a reference to OpenRiaServices?.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Failed_To_Load">
            <summary>
              Looks up a localized string similar to Failed to load one or more types from assembly &apos;{0}&apos;: {1}.  Continuing with the types that loaded successfully..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Input_Assembly_Not_Found">
            <summary>
              Looks up a localized string similar to Could not find necessary input file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_InvalidDomainServiceType">
            <summary>
              Looks up a localized string similar to Code cannot be generated for the DomainService &apos;{0}&apos; because it isn&apos;t marked with EnableClientAccessAttribute..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Missing_OpenRiaServices_Reference">
            <summary>
              Looks up a localized string similar to The server project does not contain a reference to {0}, code generation might fail. Is the server project missing a reference to OpenRiaServices?.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Namespace_Required">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; must appear inside a namespace..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_NamingCollision_MemberAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate DomainService &apos;{0}&apos; due to a naming conflict with an existing member.  DomainOperationEntry &apos;{1}&apos; conflicts with an auto-generated property with the same name.  Consider renaming..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_No_Input_Assemblies">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; project must be built before client proxy classes can be generated..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_OutputFiles_Are">
            <summary>
              Looks up a localized string similar to The client proxy task generated or is reusing existing copies of these files:{0}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Property_Enum_Error">
            <summary>
              Looks up a localized string similar to Property &apos;{0}.{1}&apos; will not be generated because it uses the Enum type &apos;{2}&apos;.  {3}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_PropertyType_Not_Shared">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; in entity type &apos;{1}&apos; cannot be generated because its type &apos;{2}&apos; is not visible in the client project &apos;{3}&apos;. Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_SignedTools_UnsignedServer">
            <summary>
              Looks up a localized string similar to You are usigned the signed code generation but the server assemblies are unsigned, consider using the unsigned code generation package instead since code generation might fail..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Skipping_CodeGen">
            <summary>
              Looks up a localized string similar to Skipping code generation because existing file &apos;{0}&apos; is current..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_Skipping_Copy">
            <summary>
              Looks up a localized string similar to Skipping copy because existing file &apos;{0}&apos; is current..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_ValidationAttribute_Requires_ResourceType_And_Name">
            <summary>
              Looks up a localized string similar to The validation attribute &apos;{0}&apos; contains ErrorMessageResourceType=&apos;{1}&apos; and ErrorMessageResourceName=&apos;{2}&apos;.  You must specify values for both or neither..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGen_ValidationAttribute_ResourcePropertyNotFound">
            <summary>
              Looks up a localized string similar to The validation attribute &apos;{0}&apos; contains ErrorMessageResourceName=&apos;{1}&apos; which was not found on declared ErrorMessageResourceType &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientCodeGenDispatecher_Threw_Exception_Before_Generate">
            <summary>
              Looks up a localized string similar to Unexpected exception thrown before code gen could be started, this indicates a serious error which might be caused by missing or corrupt assemblies..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ClientProxyGenerator_Initialize_Not_Called">
            <summary>
              Looks up a localized string similar to &apos;ClientProxyGenerator.Initialize&apos; must be called before use..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Code_Generator_Incorrect_Type">
            <summary>
              Looks up a localized string similar to The requested code generator &apos;{0}&apos; cannot be used because it does not implement &apos;IDomainServiceClientCodeGenerator&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Code_Generator_Instantiation_Error">
             <summary>
               Looks up a localized string similar to The requested code generator &apos;{0}&apos; cannot be instantiated:
            {0}.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Code_Generator_Not_Found">
             <summary>
               Looks up a localized string similar to No code generator named &apos;{0}&apos; is available for &apos;{1}&apos;.
            If a generator with this name exists elsewhere, add a reference to its assembly to the
            &apos;{2}&apos; project.
            Otherwise, manually edit the &apos;{3}&apos; project
            to add a &lt;OpenRiaClientCodeGeneratorName&gt; property to name a valid generator.
            To specify the default generator add this property:
              &lt;OpenRiaClientCodeGeneratorName&gt;{4}&lt;/OpenRiaClientCodeGeneratorName&gt;
            .
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Complex_Class_Summary_Comment">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; class..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_CreateEntityContainer_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to A new container instance..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_CreateEntityContainer_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Creates a new EntityContainer for this DomainContext&apos;s EntitySets..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Default_Constructor_Summary_Comments">
            <summary>
              Looks up a localized string similar to Initializes a new instance of the &lt;see cref=&quot;{0}&quot;/&gt; class..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainClient_Custom_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Invokes the &apos;{0}&apos; method of the specified &lt;see cref=&quot;{1}&quot;/&gt; entity..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Class_Summary_Comment">
            <summary>
              Looks up a localized string similar to The DomainContext corresponding to the &apos;{0}&apos; DomainService..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Custom_Method_Entity_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The &lt;see cref=&quot;{0}&quot;/&gt; entity instance..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Custom_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter for this action..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_Callback_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Callback to invoke when the operation completes..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_CancellationToken_Parameter_Comment">
            <summary>
              Looks up a localized string similar to A cancellation token that can be used to cancel the work.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter of this action..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Asynchronously invokes the &apos;{0}&apos; method of the DomainService..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Method_UserState_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Value to pass to the callback.  It can be &lt;c&gt;null&lt;/c&gt;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_Invoke_Returns_Comment">
            <summary>
              Looks up a localized string similar to An operation instance that can be used to manage the asynchronous request..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_AsyncState_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Optional state object..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Callback_Parameter_Comment">
            <summary>
              Looks up a localized string similar to Callback to invoke on completion..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter of this action..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to An IAsyncResult that can be used to monitor the request..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Asynchronously invokes the &apos;{0}&apos; operation..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Begin_SubmitMethod_Changeset_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The change-set to submit..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The IAsyncResult returned from &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; returned from the &apos;{1}&apos; operation..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Completes the asynchronous operation begun by &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_End_SubmitMethod_Returns_Comment">
            <summary>
              Looks up a localized string similar to The collection of change-set entry elements returned from &apos;SubmitChanges&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_DomainContext_ServiceContract_Summary_Comment">
            <summary>
              Looks up a localized string similar to Service contract for the &apos;{0}&apos; DomainService..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_CanInvoke_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets a value indicating whether the &apos;{0}&apos; method can be invoked on this entity..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Class_Context_Summary_Comment">
            <summary>
              Looks up a localized string similar to The &lt;see cref=&quot;{0}&quot;/&gt; context..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Class_Shared_Summary_Comment">
            <summary>
              Looks up a localized string similar to This entity is shared between the following contexts:.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Class_Summary_Comment">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; entity class..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Collection_Association_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets the collection of associated &lt;see cref=&quot;{0}&quot;/&gt; entity instances..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Custom_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value to pass to the server method&apos;s &apos;{0}&apos; parameter..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Custom_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Invokes the &apos;{0}&apos; action on this entity..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_IsInvoked_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets a value indicating whether the &apos;{0}&apos; action has been invoked on this entity..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets or sets the &apos;{0}&apos; value..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Singleton_Association_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets or sets the associated &lt;see cref=&quot;{0}&quot;/&gt; entity..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Entity_Singleton_Association_ReadOnly_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets the associated &lt;see cref=&quot;{0}&quot;/&gt; entity..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_EntitySet_Property_Summary_Comment">
            <summary>
              Looks up a localized string similar to Gets the set of &lt;see cref=&quot;{0}&quot;/&gt; entity instances that have been loaded into this &lt;see cref=&quot;{1}&quot;/&gt; instance..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Execution_Time">
            <summary>
              Looks up a localized string similar to RIA client proxy class generation finished in {0} seconds..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Generating_DomainService">
            <summary>
              Looks up a localized string similar to Generating proxy classes for the DomainService &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Generating_Proxies">
            <summary>
              Looks up a localized string similar to RIA client proxy class generation starting for project &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Generating_WebContext">
            <summary>
              Looks up a localized string similar to Generating WebContext class..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_GetIdentify_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to An object instance that uniquely identifies this entity instance..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_GetIdentify_Method_Summary_Comment">
            <summary>
              Looks up a localized string similar to Computes a value from the key fields that uniquely identifies this entity instance..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_No_Pdb">
             <summary>
               Looks up a localized string similar to Shared file analysis cannot be done on assembly &apos;{0}&apos; because it has no corresponding PDB file.
            Change its project file to set DebugType to &apos;full&apos; or &apos;pdbonly&apos; if you intend to share code..
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Query_Method_Parameter_Comment">
            <summary>
              Looks up a localized string similar to The value for the &apos;{0}&apos; parameter of the query..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Query_Method_Returns_Comment">
            <summary>
              Looks up a localized string similar to An EntityQuery that can be loaded to retrieve &lt;see cref=&quot;{0}&quot;/&gt; entity instances..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGen_Shared_Files">
            <summary>
              Looks up a localized string similar to Files visible to both the client and the server are:{0}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CodeGenerator_Threw_Exception">
             <summary>
               Looks up a localized string similar to The code generator &apos;{0}&apos; encountered a fatal exception and could not generate code for project &apos;{1}&apos;:
            {2}.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.CommentOnCreated">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            This method is invoked from the constructor once initialization is complete and
            can be used for further object setup.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Deleting_Empty_File">
            <summary>
              Looks up a localized string similar to Deleting file {0} because no client proxy classes have been generated..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Param_DomainClient">
            <summary>
              Looks up a localized string similar to The DomainClient instance to use for this DomainContext..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Param_ServiceUri">
            <summary>
              Looks up a localized string similar to The {0} service URI..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_DomainClientAccumulating">
            <summary>
              Looks up a localized string similar to Initializes a new instance of the &lt;see cref=&quot;{0}&quot;/&gt; class with the specified &lt;paramref name=&quot;domainClient&quot;/&gt;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_DomainContext">
            <summary>
              Looks up a localized string similar to Gets an EntityQuery instance that can be used to load &lt;see cref=&quot;{0}&quot;/&gt; entity instances using the &apos;{1}&apos; query..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_ConstructorComments_Summary_ServiceUri">
            <summary>
              Looks up a localized string similar to Initializes a new instance of the &lt;see cref=&quot;{0}&quot;/&gt; class with the specified service URI..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_DuplicateCustomMethodName">
            <summary>
              Looks up a localized string similar to The custom method named &apos;{0}&apos; associated with entity type &apos;{1}&apos; is defined more than once in the &apos;{2}&apos; and &apos;{3}&apos; DomainService classes..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_EntityKey_KeyTypeNotSupported">
            <summary>
              Looks up a localized string similar to Property &apos;{0}.{1}&apos; is marked as a key property and is of type &apos;{2}&apos;, which is not a supported type for a key member..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_EntityKey_PropertyNotSerializable">
            <summary>
              Looks up a localized string similar to The property &apos;{0}.{1}&apos; is marked as a key property, but it&apos;s not serializable. Are you missing DataMemberAttribute?.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_Generating_GuardProperty">
            <summary>
              Looks up a localized string similar to Generating custom method guard property &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_Generating_GuardUpdateMethod">
            <summary>
              Looks up a localized string similar to Generating update method for guard properties....
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_Generating_InvokeMethod">
            <summary>
              Looks up a localized string similar to Generating domain invoke method &apos;{0}&apos;....
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_NamingCollision_EntityCustomMethodNameAlreadyExists">
            <summary>
              Looks up a localized string similar to Unable to generate entity &apos;{0}&apos; due to a naming conflict with an existing member.  Custom method &apos;{1}&apos; conflicts with a field with the same name.  Consider renaming..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_RoundtripOriginalOnBaseType">
            <summary>
              Looks up a localized string similar to There is a RoundtripOriginalAttribute on derived type &apos;{0}&apos; but not on base type &apos;{1}&apos;. RoundtripOriginalAttribute needs to be on the least derived entity type in an inheritance hierarchy..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.EntityCodeGen_SharedEntityMustBeLeastDerived">
            <summary>
              Looks up a localized string similar to Sharing entity types within an inheritance hierarchy is not allowed unless all DomainServices expose the same least derived entity. Entity &apos;{0}&apos; is the least derived entity on DomainService &apos;{1}&apos;,  Entity &apos;{2}&apos; is the least derived Entity on DomainService &apos;{3}&apos;, and Entity &apos;{4}&apos; is exposed from both DomainServices..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Enum_Type_Cannot_Gen_System">
            <summary>
              Looks up a localized string similar to The Enum type is not visible to the client and belongs to the System namespace.  Are you missing an assembly reference?.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Enum_Type_Must_Be_Public">
            <summary>
              Looks up a localized string similar to The Enum type must be public and cannot be nested..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Copy_File">
            <summary>
              Looks up a localized string similar to Failed to copy file &apos;{0}&apos; to &apos;{1}&apos;. {2}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Create_Composition_Container">
             <summary>
               Looks up a localized string similar to The following exception occurred creating the MEF composition container:
            {0}
            The default code generator will be used..
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Create_Folder">
            <summary>
              Looks up a localized string similar to Failed to create folder &apos;{0}&apos;.{1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Delete_File">
            <summary>
              Looks up a localized string similar to Failed to delete file &apos;{0}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Delete_File_Error">
            <summary>
              Looks up a localized string similar to Could not delete file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Modify_ReadOnly">
            <summary>
              Looks up a localized string similar to Failed to modify the read-only attribute of file &apos;{0}&apos;.{1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Open_PDB">
            <summary>
              Looks up a localized string similar to An error was encountered attempting to read the PDB file for &apos;{0}&apos; so it will not be possible to detect shared files in that assembly.  {1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Open_Project">
            <summary>
              Looks up a localized string similar to An error was encountered attempting to open project &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Read_File_From_VS">
            <summary>
              Looks up a localized string similar to Failed to read the contents of &apos;{0}&apos; from Visual Studio..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Rename_File">
            <summary>
              Looks up a localized string similar to Failed to move/rename file &apos;{0}&apos; to &apos;{1}&apos;. {2}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Write_File">
            <summary>
              Looks up a localized string similar to Failed to write file &apos;{0}&apos;. {1}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Failed_To_Write_File_To_VS">
            <summary>
              Looks up a localized string similar to Failed to write the generated contents of &apos;{0}&apos; to Visual Studio..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.HttpRuntimeInitializationError">
            <summary>
              Looks up a localized string similar to There was a problem initializing the HttpRuntime..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Multiple_Custom_Code_Generators">
             <summary>
               Looks up a localized string similar to Multiple custom code generators are available for {0}:
            {1}Please set the OpenRiaClientCodeGeneratorName property in the client project to select which of these you wish to use.
            .
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Multiple_Custom_Code_Generators_Using_Default">
             <summary>
               Looks up a localized string similar to Multiple custom code generators are available for &apos;{0}&apos;:
            {1}The default generator will be used because none was specified.
            To specify one manually edit the &apos;{2}&apos; project
            and add a property like this:
              &lt;OpenRiaClientCodeGeneratorName&gt;{3}&lt;/OpenRiaClientCodeGeneratorName&gt;
            To specify the default generator add this property:
              &lt;OpenRiaClientCodeGeneratorName&gt;{4}&lt;/OpenRiaClientCodeGeneratorName&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Multiple_Named_Code_Generators">
             <summary>
               Looks up a localized string similar to Multiple code generators named &apos;{0}&apos; are available for &apos;{1}&apos;:
            {2}Remove all but one from &apos;{3}&apos;,
            modify them to have unique names,
            or manually edit the &apos;{4}&apos; project
            to add a property that fully qualifies one, like this:
                &lt;OpenRiaClientCodeGeneratorName&gt;{5}&lt;/OpenRiaClientCodeGeneratorName&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Null_Language_Property">
            <summary>
              Looks up a localized string similar to The &apos;ClientProxyCodeGenerationOptions.Language&apos; property cannot be null or empty..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Null_Logger_Property">
            <summary>
              Looks up a localized string similar to The Logger property cannot be null..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Project_Does_Not_Exist">
            <summary>
              Looks up a localized string similar to The project &apos;{0}&apos; does not exist..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Project_References_Found">
            <summary>
              Looks up a localized string similar to The project &apos;{0}&apos; contains project references to:.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.ProjectPath_Argument_Required">
            <summary>
              Looks up a localized string similar to ProjectPath property is required when relative paths are used..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Property_Not_Found">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not contain a property named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Region_ExtensibilityMethodDefinitions">
            <summary>
              Looks up a localized string similar to Extensibility Method Definitions.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.RIA_Link_Present">
            <summary>
              Looks up a localized string similar to A Open Ria Services Link exists between project &apos;{0}&apos; and project &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.RIA_Link_Prevents_Copy">
            <summary>
              Looks up a localized string similar to Shared files will not be copied from &apos;{0}&apos; due to an existing Open Ria Services Link from &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Server_Project_File_Does_Not_Exist">
             <summary>
               Looks up a localized string similar to The Silverlight project &apos;{0}&apos; has a Open Ria Services Link to the project &apos;{1}&apos; which does not exist.
            Did you rename or move that project?
            Please modify the Project Properties of &apos;{0}&apos; and set the Open Ria Services Link to point to a valid project..
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Shared_DomainContext_Skipped">
            <summary>
              Looks up a localized string similar to Skipping proxy class generation for &apos;{0}&apos; because a DomainContext for it already exists in another assembly..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.SharedCodeServiceParameters_Parameter_Null">
            <summary>
              Looks up a localized string similar to SharedCodeServiceParameters.{0} cannot be null..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Type_Must_Be_Attribute">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; is not derived from Attribute..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Unspecified_Resource_Element">
            <summary>
              Looks up a localized string similar to &lt;unspecified&gt;.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Using_Custom_Code_Generator">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; custom code generator will be used to generate the proxy classes..
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.WebContext_CommentClass">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Context for the RIA application.
            &lt;/summary&gt;
            &lt;remarks&gt;
            This context extends the base to make application services and types available
            for consumption from code and xaml.
            &lt;/remarks&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.WebContext_CommentConstructor">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Initializes a new instance of the WebContext class.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.WebContext_CommentCurrent">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Gets the context that is registered as a lifetime object with the current application.
            &lt;/summary&gt;
            &lt;exception cref=&quot;System.InvalidOperationException&quot;&gt; is thrown if there is no current application,
            no contexts have been added, or more than one context has been added.
            &lt;/exception&gt;
            &lt;seealso cref=&quot;System.Windows.Application.ApplicationLifetimeObjects&quot;/&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.WebContext_CommentUser">
             <summary>
               Looks up a localized string similar to &lt;summary&gt;
            Gets a user representing the authenticated identity.
            &lt;/summary&gt;.
             </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.WebContext_ManyAuthServices">
            <summary>
              Looks up a localized string similar to More than one AuthenticationService exists in the project. No AuthenticationService is set as the default in WebContext.\n{0}.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.Resource.Writing_Generated_Code">
            <summary>
              Looks up a localized string similar to Writing generated client proxy classes to &apos;{0}&apos;..
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask">
            <summary>
            Common base class shared by <see cref="T:OpenRiaServices.DomainServices.Tools.CreateOpenRiaClientFilesTask"/> and <see cref="T:OpenRiaServices.DomainServices.Tools.CleanOpenRiaClientFilesTask"/>
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.FilesWereWritten">
            <summary>
            Gets a value indicating whether any files were written
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LiveIntellisense">
            <summary>
            Gets or sets a value indicating whether this is a build
            specifically for Live Intellisense.
            </summary>
            <value>
            This property is no longer used but exists for backward compatibility
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.OutputPath">
            <summary>
            Gets or sets the path where ancillary temporary files should go
            </summary>
            <value>
            This path may be absolute or relative.  If relative, it will be considered to
            be relative to the <see cref="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ClientProjectPath"/>
            This property is required.  Normal MSBuild semantics will not permit this task
            to be used unless it has been set.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ClientProjectPath">
            <summary>
            Gets or sets the path to the client project currently running this task.
            </summary>
            <value>
            Currently supported values are currently "C#" or "VB"
            This property is required
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.GeneratedCodePath">
            <summary>
            Gets or sets the path where generated code files should go
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.FileListPath">
            <summary>
            Gets the path of the file where to write the list of generated files
            </summary>
            <returns>The full path to where to write the list of generated files.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SourceFileListPath">
            <summary>
            Gets the path of the file where we write the list of known source projects and their files
            </summary>
            <returns>The full path to where to write the list of source files.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LinkedServerProjectsPath">
            <summary>
            Gets the path of the file where we write the list of linked server projects
            </summary>
            <returns>The full path to where to write the list of linked server project files.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ClientReferenceListPath">
            <summary>
            Gets the path of the file where to write the list of client references
            </summary>
            <returns>The full path to where to write the list of client references files.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ServerReferenceListPath">
            <summary>
            Gets the path of the file where to write the list of server references
            </summary>
            <returns>The full path to where to write the list of server references files.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ClientProjectDirectory">
            <summary>
            Gets the absolute path to the project running this task
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.OutputDirectory">
            <summary>
            Gets the absolute path of the output directory.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.Execute">
            <summary>
            Implementation of the normal MSBuild tasks execution entry point method
            </summary>
            <returns><c>true</c> for success.  If <c>false</c>, warnings or errors must have been logged.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ExecuteInternal">
            <summary>
            Internal implementation for the <see cref="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.Execute"/> method, called from this base class.
            </summary>
            <returns><c>true</c> for success.  If <c>false</c>, warnings or errors must have been logged.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.NormalizeProjectPaths">
            <summary>
            Helper method to convert input project paths to full path names.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.GetHistoryFolder">
            <summary>
            Returns the full path to the folder where we keep a breadcrumb history of
            what the prior code generation pass did,
            </summary>
            <returns>The full path to where we are allowed to write history files for subsequent builds.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.HasLoggedErrors">
            <summary>
            Gets a value indicating whether any errors were logged.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LogError(System.String)">
            <summary>
            Logs the given error message to the logger associated with this task
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LogException(System.Exception)">
            <summary>
            Logs the given exception to the logger associated with this task
            </summary>
            <param name="ex">MessageException to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LogWarning(System.String)">
            <summary>
            Logs the given warning message to the logger associated with this task
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LogMessage(System.String)">
            <summary>
            Logs the given informational message to the logger associated with this task
            </summary>
            <param name="message">Message to log</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LogWarning(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Logs the given message as a warning, together with information about the source location.
            </summary>
            <param name="message">The message to log as an error.</param>
            <param name="subcategory">The optional description of the error type.</param>
            <param name="errorCode">The optional error code.</param>
            <param name="helpKeyword">The optional help keyword.</param>      
            <param name="file">The optional path to the file containing the error.</param>
            <param name="lineNumber">The zero-relative line number in the <paramref name="file"/> where the error begins.</param>
            <param name="columnNumber">The zero-relative column number in the <paramref name="file"/> where the error begins.</param>
            <param name="endLineNumber">The zero-relative line number in the <paramref name="file"/> where the error ends.</param>
            <param name="endColumnNumber">The zero-relative column number in the <paramref name="file"/> where the error ends.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.LogError(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Logs the given message as an error, together with information about the source location.
            </summary>
            <param name="message">The message to log as an error.</param>
            <param name="subcategory">The optional description of the error type.</param>
            <param name="errorCode">The optional error code.</param>
            <param name="helpKeyword">The optional help keyword.</param>      
            <param name="file">The optional path to the file containing the error.</param>
            <param name="lineNumber">The zero-relative line number in the <paramref name="file"/> where the error begins.</param>
            <param name="columnNumber">The zero-relative column number in the <paramref name="file"/> where the error begins.</param>
            <param name="endLineNumber">The zero-relative line number in the <paramref name="file"/> where the error ends.</param>
            <param name="endColumnNumber">The zero-relative column number in the <paramref name="file"/> where the error ends.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SafeSetReadOnlyAttribute(System.String,System.Boolean)">
            <summary>
            Sets or resets the read-only file attribute of the given file
            </summary>
            <param name="fileName">Full path to the file to modify</param>
            <param name="newState">The desired state of the bit</param>
            <returns><c>false</c> if a problem occurred and the bit could not be altered.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SafeFileDelete(System.String)">
            <summary>
            Safe form of File.Delete that catches and logs exceptions as warnings.
            </summary>
            <param name="fileName">The full path to the file to delete.</param>
            <returns><c>false</c> if an error occurred and the file could not be deleted.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SafeFileWrite(System.String,System.String)">
            <summary>
            Safe form of writing string contents to a file.
            </summary>
            <param name="fileName">The full path to the file to write.</param>
            <param name="contents">The string content to write.</param>
            <returns><c>false</c> if an error occurred and the file could not be written.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SafeFileCopy(System.String,System.String,System.Boolean)">
            <summary>
            Copies the file specified by <paramref name="sourceFile"/> to <paramref name="destinationFile"/>
            </summary>
            <param name="sourceFile">Full path of the source file to copy.</param>
            <param name="destinationFile">Full path to the destination.</param>
            <param name="isProjectFile">If <c>true</c> handle the readonly attribute and track changes.</param>
            <returns><c>true</c> if this method succeeded</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SafeFileMove(System.String,System.String)">
            <summary>
            Moves/Renames the file specified by <paramref name="sourceFile"/> to <paramref name="destinationFile"/>
            </summary>
            <param name="sourceFile">Full path of the source file to move.</param>
            <param name="destinationFile">Full path to the destination.</param>
            <returns><c>true</c> if this method succeeded</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.SafeFolderCreate(System.String)">
            <summary>
            Safe form of <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>
            </summary>
            <remarks>
            This method will do nothing if the folder already exists, otherwise it
            will create it.  Any error in creation will log an appropriate error message
            and return <c>false</c>
            </remarks>
            <param name="directoryPath">The full path to the folder to create.</param>
            <returns><c>false</c> if an error occurred and the folder could not be created.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.IsFileWriteTimeDifferent(System.String,System.DateTime)">
            <summary>
            Tests whether the last write time of the given <paramref name="fileName"/>
            is different than the given <paramref name="referenceTime"/>
            </summary>
            <param name="fileName">File to test</param>
            <param name="referenceTime">Time to test it againt</param>
            <returns><c>true</c> if the given file has a different last write time than the given time</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.IsFileWriteTimeDifferent(System.String,System.String)">
            <summary>
            Tests whether the last write time of the given <paramref name="fileName"/>
            is different than the given <paramref name="referenceFileName"/>
            </summary>
            <param name="fileName">File to test</param>
            <param name="referenceFileName">File to test it againt</param>
            <returns><c>true</c> if the given <paramref name="fileName"/> has a different last write time than the given <paramref name="referenceFileName"/></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.GetLastChangeTimeFromVS(System.String)">
            <summary>
            Get the last time that the file was changed from Visual Studio
            </summary>
            <param name="visualStudioFile">The file to test</param>
            <returns>The DateTime of the file's last modified time</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.ReadFileFromVS(System.String)">
            <summary>
            Reads the contents of the given file.
            </summary>
            <param name="fileName">File to read</param>
            <returns>The contents of the file as a string</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.WriteOrDeleteFileToVS(System.String,System.String,System.Boolean)">
            <summary>
            Writes the given content to the given file if it is non-empty, else deletes the file
            </summary>
            <param name="destinationFile">Full path to file to write or delete</param>
            <param name="content">Content to write to file</param>
            <param name="forceWriteToFile">If <c>true</c>, write file always, even if Intellisense only build.</param>
            <returns><c>true</c> if the write succeeded, <c>false</c> if it was deleted or the write failed.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.WriteFileToVS(System.String,System.String,System.Boolean)">
            <summary>
            Writes the given file to VS.  If VS is not present, it just writes to the file system
            </summary>
            <param name="destinationFile">Name of the file to create/write</param>
            <param name="content">String content of file to write</param>
            <param name="forceWriteToFile">If <c>true</c>, write file always, even if Intellisense only build.</param>
            <returns><c>true</c> if the write succeeded</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.DeleteFileFromVS(System.String)">
            <summary>
            Deletes the specified file in VS-compatible way
            </summary>
            <param name="fileName">Full path of the file to delete.  It may or may not exist on disk.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.FullPath(System.String,System.String)">
            <summary>
            Constructs the absolute path to a given file.
            </summary>
            <param name="fileName">The file name.</param>
            <param name="directory">The directory path.</param>
            <returns>An absolute path based on specified fileName and directory.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.PrependClientProjectName(System.String)">
            <summary>
            Prepends the simple name of the client project file
            to the given <paramref name="fileName"/> which is assumed
            to be just a base name (no path).
            </summary>
            <remarks>
            This method is used to produce unique file names associated
            with a client project in the event there are multiple client
            projects within a single physical folder.
            </remarks>
            <param name="fileName">Simple short name of a file</param>
            <returns>The input <paramref name="fileName"/> with the client project name prepended.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.GetFullPathRelativeToDirectory(System.String,System.String)">
            <summary>
            Given a potentially relative path and a root directory, resolves to a full path.
            </summary>
            <param name="fileName">Name of file.  Maybe relative or full.</param>
            <param name="directory">Name of directory to use as root if file name is relative.</param>
            <returns>The full path of the file</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.GetPathRelativeToProjectDirectory(System.String,System.String)">
            <summary>
            If the file path is under the project directory, returns the relative path under the project directory, else returns the original file path.
            </summary>
            <param name="fileName">The full file path</param>
            <param name="projectDirectoryPath">The project directory path.</param>
            <returns>Relative path under the project directory</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.FilesPreviouslyWritten">
            <summary>
            Returns the set of full file names previously written by the
            last code generation pass.
            </summary>
            <remarks>The list is ordered (descending) by length of folder name so that subfolders
            appear before their parent folders.
            </remarks>
            <returns>The collection of full file names.  The list may be empty but it will not be null.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.DeleteFolderIfEmpty(System.String)">
            <summary>
            Deletes the specified folder if it is empty.
            </summary>
            <param name="folderPath">Full path to folder</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.NormalizeFolderPath(System.String)">
            <summary>
            Strips trailing slashes from the given folder path if present
            </summary>
            <param name="path">The path to normalize.</param>
            <returns>The input <paramref name="path"/> without any trailing slashes</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.RiaClientFilesTask.DeleteCodeGenMetafileLists">
            <summary>
            Deletes the breadcrumb files we created to keep track of files written on prior pass
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters">
            <summary>
            Internal data class that allows parameters to be
            passed across an AppDomain boundary to construct a <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.SharedSourceFiles">
            <summary>
            Gets or sets the set of source files common to both the reference and dependent projects
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.SymbolSearchPaths">
            <summary>
            Gets or sets the paths to search for symbols for the <see cref="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.ServerAssemblies"/>.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.ServerAssemblies">
            <summary>
            Gets or sets the full path names of the set of server assemblies.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.ClientAssemblies">
            <summary>
            Gets or sets the full path names of the set of client assemblies
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.ClientAssemblyPathsNormalized">
            <summary>
            Gets the set of paths to search for the <see cref="P:OpenRiaServices.DomainServices.Tools.SharedCodeServiceParameters.ClientAssemblies"/>.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey">
            <summary>
            Class that encapsulates the description of a code member in terms of strings.
            </summary>
            <remarks>
            This class can represent a type, a property, or a method.  It is meant to be
            used as a unique key and overrides <see cref="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.GetHashCode"/> and 
            <see cref="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Equals(System.Object)"/> to convey value-based equality.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CreateTypeKey(System.String)">
            <summary>
            Creates a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/> class
            to describe a <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Type"/>.
            </summary>
            <param name="typeName">The fully qualified type name.</param>
            <returns>A new instance which describes that type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CreateTypeKey(System.Type)">
            <summary>
            Creates a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/> class
            to describe the a <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Type"/> from the given <paramref name="type"/>.
            </summary>
            <param name="type">The <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Type"/> from which to construct the key.</param>
            <returns>A new instance which describes that type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CreatePropertyKey(System.String,System.String)">
            <summary>
            Creates a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/> class that describes
            a property.
            </summary>
            <param name="typeName">The fully qualified type name declaring the property.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>A new instance which describes that property.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CreatePropertyKey(System.Reflection.PropertyInfo)">
            <summary>
            Creates a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/> class that describes
            a property.
            </summary>
            <param name="propertyInfo">The <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.PropertyInfo"/> of that property.</param>
            <returns>A new instance which describes that property.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CreateMethodKey(System.String,System.String,System.String[])">
            <summary>
            Creates a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/> class that describes
            a method.
            </summary>
            <param name="typeName">The fully qualified type name that declares the method.</param>
            <param name="methodName">The name of the method.</param>
            <param name="parameterTypeNames">The set of fully qualified type names of the method parameters.</param>
            <returns>A new instance that describes that method.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CreateMethodKey(System.Reflection.MethodBase)">
            <summary>
            Creates a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/> class that describes
            a method or a constructor.
            </summary>
            <param name="methodBase">The <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.MethodBase"/> of the method or constructor.</param>
            <returns>A new instance that describes that method.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Type">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Type"/> for this key.  It may be null if
            the type does not exist in the current set of loaded assemblies.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.PropertyInfo">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.PropertyInfo"/> from a property key.
            </summary>
            <remarks>
            This property is available only for a property key.
            </remarks>
            <value>The value may be <c>null</c> if the property does not actually exist.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.MethodBase">
            <summary>
            Gets the <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.MethodBase"/> from a method key.
            </summary>
            <remarks>
            This property is available only for a method key.
            </remarks>
            <value>The value may be <c>null</c> if the method does not actually exist.
            </value>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.IsConstructor">
            <summary>
            Gets a value indicating whether the current key describes a constructor.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.ParameterTypes">
            <summary>
            Gets the set of <see cref="P:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Type"/>s for the parameters of a method key.
            </summary>
            <remarks>
            This property is available only for a method key.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.GetHashCode">
            <summary>
            Override to provide a unique hash code based on this key's data.
            </summary>
            <returns>A unique hash code.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.Equals(System.Object)">
            <summary>
            Override to provide property equality checks using value-based comparison.
            </summary>
            <param name="obj">The object to compare against the current instance.</param>
            <returns><c>true</c> if the objects are equal.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CodeMemberKeyKind">
            <summary>
            Nested internal enum type used by <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey"/>
            to identify the key type
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CodeMemberKeyKind.TypeKey">
            <summary>
            The key refers to a type
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CodeMemberKeyKind.PropertyKey">
            <summary>
            The key refers to a property
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey.CodeMemberKeyKind.MethodKey">
            <summary>
            The key refers to a method
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap">
            <summary>
            Internal class to maintain mapping between file names and an internally generated integer ID.
            </summary>
            <remarks>This class is used to eliminate duplicate copies of file names kept by the
            shared code utility classes.
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap.Item(System.String)">
            <summary>
            Indexer that gets the internal ID for a given file name.
            </summary>
            <remarks>The specified file name must already be known to have
            a unique ID or this internal method will assert.
            </remarks>
            <param name="fileName">The name of the file.</param>
            <returns>The internal ID.</returns>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap.Item(System.Int32)">
            <summary>
            Indexer that gets the file name associated with the given internal ID.
            </summary>
            <remarks>The specified ID must already be known to have an associated
            file name or this internal method will assert.
            </remarks>
            <param name="id">The internal ID.</param>
            <returns>The file name associated with the given ID.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap.AddOrGet(System.String)">
            <summary>
            Retrieves the internal ID associated with a given file name.
            If it does not already have an ID, one will be created.
            </summary>
            <param name="fileName">The file name.  It may be null or empty.</param>
            <returns>The internal ID.   A null or empty file name will always return <see cref="F:OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap.NotAFile"/>.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileLocationService">
            <summary>
            General purpose interface to locate the names of the files
            used to define types or type members.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileLocationService.GetFilesForType(System.Type)">
            <summary>
            Retrieves the collection of file names that jointly define
            the given type.
            </summary>
            <param name="type">The type to test.  It cannot be null.</param>
            <returns>A collection of full file names that define the type.  It may be empty.  
            There are no guarantees the files in this collection can be opened.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileLocationService.GetFileForMember(System.Reflection.MemberInfo)">
            <summary>
            Retrieves the name of the file that defines the given type member.
            </summary>
            <param name="memberInfo">The type member to test.  It cannot be null.</param>
            <returns>The full file name or null if it cannot be determined.  
            There are no guarantees the files can be opened.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider">
            <summary>
            General purpose interface to locate the names of the files
            used to define types or type members.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider.GetFileForMember(System.Reflection.MemberInfo)">
            <summary>
            Retrieves the name of the file that defines the given type member.
            </summary>
            <param name="memberInfo">The type member to test.  It cannot be null.</param>
            <returns>The full file name or null if it cannot be determined.  
            There are no guarantees the files can be opened.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProviderFactory">
            <summary>
            Factory interface to allow creation of <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider"/> instances.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProviderFactory.CreateProvider">
            <summary>
            Instantiates a <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider"/> object
            that can be used to interrogate source file locations
            </summary>
            <returns>A <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider"/> instance.  It will be disposed by the caller.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies">
            <summary>
            Internal class to maintain a set of known assemblies
            and allow clients to ask whether types or methods are
            in that set.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},OpenRiaServices.DomainServices.Tools.ILogger)">
            <summary>
            Creates a new instance of this type.
            </summary>
            <param name="assemblyFileNames">The set of assemblies to use</param>
            <param name="assemblySearchPaths">Optional set of paths to search for referenced assemblies.</param>
            <param name="logger">Optional logger to use to report errors or warnings</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.Assemblies">
            <summary>
            Gets the set of loaded assemblies
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.GetSharedAssemblyPath(OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey)">
            <summary>
            Returns the location of the shared assembly containing the
            code member described by <paramref name="key"/>.
            </summary>
            <param name="key">The description of the code element.</param>
            <returns>The location of the assembly that contains it or <c>null</c> if it is not in a shared assembly.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.FindSharedMethodOrConstructor(System.Type,OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey)">
            <summary>
            Locates the <see cref="T:System.Reflection.MethodBase"/> in the set of shared assemblies that
            corresponds to the method described by <paramref name="key"/>.
            </summary>
            <param name="sharedType">The <see cref="T:System.Type"/> we have already located in our set of shared assemblies.</param>
            <param name="key">The key describing the method to find.</param>
            <returns>The matching <see cref="T:System.Reflection.MethodBase"/> or <c>null</c> if no match is found.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.GetSharedTypes(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Given a collection of <see cref="T:System.Type"/> names, this method returns
            an array of all those types from the set of shared assemblies.
            </summary>
            <param name="typeNames">The collection of type names.  It can be null.</param>
            <returns>The collection of types in the shared assemblies.
            A <c>null</c> means one or more types in the list were not shared.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.GetSharedMethod(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns the <see cref="T:System.Reflection.MethodBase"/> of the method or constructor from the
            set of shared assemblies, if it exists.
            </summary>
            <param name="typeName">The fully qualified type name declaring the method.</param>
            <param name="methodName">The name of the method</param>
            <param name="parameterTypeNames">The fully qualified type names of the method parameters.</param>
            <returns>The <see cref="T:System.Reflection.MethodBase"/> if it exists in the shared assemblies, otherwise <c>null</c></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.GetSharedType(System.String)">
            <summary>
            Returns the <see cref="T:System.Type"/> from the set of shared assemblies of the given name.
            </summary>
            <param name="typeName">The fully qualified type name.</param>
            <returns>The <see cref="T:System.Type"/> from the shared assemblies if it exists, otherwise <c>null</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.EquivalentMsCorlibType(System.Type)">
            <summary>
            If the given type is defined in a system assembly, returns the type directly, otherwise <c>null</c>.
            </summary>
            <param name="type">The type whose equivalent we need.</param>
            <returns>If the type lives in a system assembly, the input type, else <c>null</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.FindSharedType(System.String)">
            <summary>
            Searches the shared assemblies for a type of the given name.
            </summary>
            <param name="typeName">The fully-qualified type name.</param>
            <returns>The <see cref="T:System.Type"/> or <c>null</c> if it is not in one of the shared assemblies.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.FindSharedTypeInAssemblies(System.String)">
            <summary>
            Locates and returns the type in the set of known assemblies
            that is equivalent to the given type.
            </summary>
            <param name="typeFullName">FullName of the type to search for</param>        
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedAssemblies.LoadAssemblies">
            <summary>
            Loads all the named assemblies into a cache of known assemblies
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService">
            <summary>
            Implementation of <see cref="T:OpenRiaServices.DomainServices.Tools.ISharedCodeService"/> based on a set of
            known assemblies and a set of shared source files.
            </summary>
            <remarks>
            This class is also a cache so that subsequent requests for a
            given code member can give an immediate return.
            </remarks>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.SharedAssemblies">
            <summary>
            Gets the instances managing the shared assemblies
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.SharedSourceFiles">
            <summary>
            Gets the instance managing the shared source files.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.GetSharedCodeDescription(OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey)">
            <summary>
            Gets the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.SharedCodeDescription"/> for the code member described by <paramref name="key"/>.
            </summary>
            <param name="key">Describes the code member.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.SharedCodeDescription"/> or <c>null</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.GetTypeShareKind(System.String)">
            <summary>
            Returns a value indicating whether the <see cref="T:System.Type"/>specified by <paramref name="typeName"/>
            from the reference project is also visible to the dependent project.
            </summary>
            <param name="typeName">The full name of the <see cref="T:System.Type"/>from the reference project.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.GetPropertyShareKind(System.String,System.String)">
            <summary>
            Returns a value indicating whether the a property named <paramref name="propertyName"/>
            exposed by the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the reference project is also visible to the dependent project.
            </summary>
            <param name="typeName">The full name of the <see cref="T:System.Type"/> from the reference project.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.GetMethodShareKind(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Returns a value indicating whether a method named <paramref name="methodName"/>
            exposed by the <see cref="T:System.Type"/> specified by <paramref name="typeName"/>
            from the reference project is also visible to the dependent project.
            </summary>
            <param name="typeName">The full name of the <see cref="T:System.Type"/> from the reference project.</param>
            <param name="methodName">The name of the method.</param>
            <param name="parameterTypeNames">The full type names of the method parameters, in the order they must be declared.</param>
            <returns>The <see cref="T:OpenRiaServices.DomainServices.Tools.CodeMemberShareKind"/> representing whether it is shared and in what way.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedCodeService.SharedCodeDescription">
            <summary>
            Nested class that captures the location of a shared code member as well as how it is shared.
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles">
            <summary>
            Internal class to maintain a list of known source files
            and to answer questions whether the source files for
            specific types or methods are defined in those files.
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles.#ctor(OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileLocationService,OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles"/> class.
            </summary>
            <param name="sourceFileLocationService">Service to use to locate source files for types or methods.  
            It cannot be null.</param>
            <param name="filenameMap">Cache to map file names to an internal ID and back.</param>
            <param name="sharedFiles">The set of files to consider "shared" in answering requests about types or methods.  
            It may be empty but it cannot be null.</param>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles.SourceFileLocationService">
            <summary>
            Gets the source file location service
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles.GetSharedFileIds(OpenRiaServices.DomainServices.Tools.SharedTypes.CodeMemberKey)">
            <summary>
            Gets the collection of internal ID's of the files that collectively
            define the code member described by <paramref name="key"/>.
            </summary>
            <param name="key">The key describing the code member.</param>
            <returns>The collection of internal ID's, or <c>null</c> if no shared files exist for this code element.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles.FileNameToSharedID(System.String)">
            <summary>
            Returns the internal ID of the shared file for the given <paramref name="file"/>
            </summary>
            <param name="file">The file to test.</param>
            <returns>The internal ID of the shared file or <see cref="F:OpenRiaServices.DomainServices.Tools.SharedTypes.SharedSourceFiles.NotShared"/> 
            if it is not shared or <paramref name="file"/> was null or empty.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService">
            <summary>
            Implementation of <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileLocationService"/> to locate source files for types or members.
            </summary>
            <remarks>
            This class maintains the cache of types and members that have been interrogated
            previously.  It does not contain any implementation logic for how the files are found,
            but instead delegates that policy to the <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProviderFactory"/>
            instances it has been given.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService.#ctor(System.Collections.Generic.IEnumerable{OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProviderFactory},OpenRiaServices.DomainServices.Tools.SharedTypes.FilenameMap)">
            <summary>
            Initializes a new <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService"/> instance.
            </summary>
            <param name="providerFactories">Ordered set of factories that can supply <see cref="T:OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider"/>
            instances to perform implementation-specific file location.
            </param>
            <param name="filenameMap">A file name to ID mapping cache to use to keep file names as integer ID's.
            </param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService.GetFilesForType(System.Type)">
            <summary>
            Returns the collection of files that jointly define the given type.
            </summary>
            <param name="type">The type whose set of files is needed.  It cannot be null.</param>
            <returns>The collection of the source file names that define this type.  These names will be absolute paths.
            </returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService.GetFileForMember(System.Reflection.MemberInfo)">
            <summary>
            Returns the full path of the source file that defines the specified member
            </summary>
            <param name="memberInfo">The member whose file we want to identify.  It cannot be null.</param>
            <returns>The full path of the source file or null if it cannot be determined.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService.AddMemberInfoToCache(System.Reflection.MemberInfo,OpenRiaServices.DomainServices.Tools.SharedTypes.ISourceFileProvider)">
            <summary>
            Adds (if not already present) the specified <paramref name="memberInfo"/> to the
            cache associating members with their declaring file.
            </summary>
            <param name="memberInfo">The <see cref="T:System.Reflection.MemberInfo"/> to cache.</param>
            <param name="provider">The implementation-specific provider to invoke if do not already have in cache.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService.LoadAllMembersForType(System.Type)">
            <summary>
            Loads into the cache all the members for the given type.
            </summary>
            <param name="type">The type to load</param>
            <returns>A dictionary keyed by <see cref="T:System.Reflection.MemberInfo"/> and containing the id's of the files</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.SourceFileLocationService.GetMembersForType(System.Type)">
            <summary>
            Returns the cached set of members for the given type.
            </summary>
            <remarks>Loads the cache for this type the first time it is called.
            </remarks>
            <param name="type">The type whose methods are required</param>
            <returns>The set of <see cref="T:System.Reflection.MemberInfo"/>s for this type.</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.SharedTypes.VirtualType">
            <summary>
            Subclass of <see cref="T:System.Type"/> used to create hypothetical types
            that may not yet exist.
            </summary>
            <remarks>
            Instances of this class are not fully-fledged types but are
            intended simply to let us describe a Type using conventions
            already known by Reflection clients.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.VirtualType.#ctor(System.String,System.String,System.Reflection.Assembly,System.Type)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="name">The simple type name for this virtual type.</param>
            <param name="namespaceName">The namespace for this virtual type</param>
            <param name="assembly">The assembly to which this virtual type belongs.</param>
            <param name="baseType">The base type to use for this virtual type.  It may be null.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.VirtualType.#ctor(System.Type)">
            <summary>
            Creates a new instance using the given <paramref name="sourceType"/>
            </summary>
            <param name="sourceType">The type to use as the source to copy.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.SharedTypes.VirtualType.AddDeclaredMember(System.Reflection.MemberInfo)">
            <summary>
            Adds the given member into the internal list of declared
            members.
            </summary>
            <param name="memberInfo">The member to consider declared by this type</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.TargetPlatform">
            <summary>
            Target platform
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TargetPlatform.Unknown">
            <summary>
            Unknown platform
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TargetPlatform.Silverlight">
            <summary>
            Target Silverlight 5
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TargetPlatform.Portable">
            <summary>
            Target PCL
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TargetPlatform.Desktop">
            <summary>
            Targets the full .Net framework
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TargetPlatform.Win8">
            <summary>
            A windows 8 app
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.TypeConstants">
            <summary>
            Since this code generator doesn't have assembly references to the server/client
            framework assemblies, we're using type name strings rather than type references
            during codegen.
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.InvokeOperationTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.InvokeOperation' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.InvokeResultTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.InvokeResult' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityQueryTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityQuery' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityKeyTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityKey' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntitySetTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntitySet' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.DomainContextTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.DomainContext' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityContainerTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityContainer' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntitySetOperationsTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntitySetOperations' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.ChangeSetEntryTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.ChangeSetEntry' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityRefTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityRef' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityCollectionTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityCollection' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityType' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.ComplexObjectTypeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.ComplexObject' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.DomainClientTypeFullName">
            <summary>
            The full DomainClient type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.WebDomainClientTypeFullName">
            <summary>
            The full WebDomainClient type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.DefaultDomainClientTypeFullName">
            <summary>
            The default DomainClient type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.WebContextBaseName">
            <summary>
            The full WebContextBase type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.ServiceQueryTypeFullName">
            <summary>
            The full ServiceQuery type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.DomainServiceFaultFullName">
            <summary>
            The full DomainServiceFault type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.QueryResultFullName">
            <summary>
            The the full QueryResult type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.IEnumerableFullName">
            <summary>
            The 'System.Collections.Generic.IEnumerable' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.HasSideEffectsFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.HasSideEffects' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="F:OpenRiaServices.DomainServices.Tools.TypeConstants.EntityActionAttributeFullName">
            <summary>
            The 'OpenRiaServices.DomainServices.Client.EntityActionAttribute' type name.
            </summary>
            <remarks>
            Used during code generation.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask">
            <summary>
            Task that validates the integrity of the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>s exposed by the target Web Application
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask"/>
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.ProjectPath">
            <summary>
            Gets or sets the path to the project file
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.Assembly">
            <summary>
            Gets or sets the assembly containing <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> types
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.ReferenceAssemblies">
            <summary>
            Gets or sets the list of reference assemblies that may contains <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/> types
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.ProjectDirectory">
            <summary>
            Gets the absolute path to the project directory
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.LoggingService">
            <summary>
            Gets the <see cref="T:OpenRiaServices.DomainServices.Tools.ILoggingService"/> for this task
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.GetFileName(Microsoft.Build.Framework.ITaskItem)">
            <summary>
            Returns the absolute filename of the <see cref="T:Microsoft.Build.Framework.ITaskItem"/>
            </summary>
            <param name="taskItem">The item to get the name for</param>
            <returns>The absolute filename</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.Execute">
            <summary>
            Invoked by MSBuild to run this task
            </summary>
            <returns><c>true</c> if task succeeds</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.ValidateDomainServices">
            <summary>
            Validates the integrity of the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>s exposed by the target Web Application
            in a separate <see cref="T:System.AppDomain"/>
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.WarnIfAssembliesDontExist(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Checks the existence of files and logs a warning message for each that does not exist
            </summary>
            <param name="assemblies">The set of assembly names to test</param>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask.TaskLoggingHelperLoggingService">
            <summary>
            <see cref="T:OpenRiaServices.DomainServices.Tools.ILoggingService"/> implementation that writes to a <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"/> and 
            handles cross-appdomain logging requests
            </summary>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.Validation.DomainServiceValidator">
            <summary>
            Validator used by the <see cref="T:OpenRiaServices.DomainServices.Tools.ValidateDomainServicesTask"/> to validate the
            integrity of the <see cref="T:OpenRiaServices.DomainServices.Server.DomainService"/>s exposed by the target Web Application
            </summary>
            <remarks>
            This class is <see cref="T:System.MarshalByRefObject"/> so that it can be invoked across
            AppDomain boundaries.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.VisualBasicCodeDomClientCodeGenerator">
            <summary>
            CodeDom-based client proxy code generator for VisualBasic.
            </summary>
            <remarks>
            This internal class exists solely to provide a unique export
            for the VisualBasic language.
            </remarks>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Tools.WebContextGenerator">
            <summary>
            Generator for the <c>WebContext</c> application class.
            </summary>
            <remarks>
            The <c>WebContext</c> class will only be generated for Application assemblies.
            </remarks>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.WebContextGenerator.#ctor(OpenRiaServices.DomainServices.Tools.CodeDomClientCodeGenerator)">
            <summary>
            Initializes a new instance of the <see cref="T:OpenRiaServices.DomainServices.Tools.WebContextGenerator"/> class.
            </summary>
            <param name="proxyGenerator">The client proxy generator against which this will generate code.</param>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Tools.WebContextGenerator.Generate">
            <summary>
            Generates the WebContext class
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.BinaryTypeUtility.IsTypeBinary(System.Type)">
            <summary>
            Returns whether the <paramref name="type"/> <c>is System.Data.Linq.Binary</c>.
            </summary>
            <remarks>
            We test Binary by Type Name so our client framework assembly can avoid taking an
            assembly reference to <c>System.Data.Linq</c>. If a type is determined to be
            binary, that type will be used to check reference equality for all subsequent
            invocations.
            </remarks>
            <param name="type">The type to check</param>
            <returns>Whether the <paramref name="type"/> is binary</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.BinaryTypeUtility.GetByteArrayFromBinary(System.Object)">
            <summary>
            Returns the <paramref name="binary"/> converted to a <c>byte[]</c>.
            </summary>
            <param name="binary">The binary to convert</param>
            <returns>The byte[] form of the binary</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.BinaryTypeUtility.GetBinaryFromByteArray(System.Byte[])">
            <summary>
            Returns the <paramref name="bytes"/> converted to a <c>System.Data.Linq.Binary</c>.
            </summary>
            <param name="bytes">The bytes to convert</param>
            <returns>The binary form of the bytes</returns>
        </member>
        <member name="F:OpenRiaServices.DomainServices.TypeUtility.systemAssemblyPublicKeyTokens">
            <summary>
            List of public key tokens used for System assemblies
            </summary>
        </member>
        <member name="F:OpenRiaServices.DomainServices.TypeUtility.OpenRiaServicesAssemblyNames">
            <summary>
            The list of assemblies that form OpenRiaServices. If OpenRiaServices is extended with
            additional assemblies, or if assemblies are removed, this array must be updated accordingly.
            </summary>
        </member>
        <member name="P:OpenRiaServices.DomainServices.TypeUtility.EmptyTypes">
            <summary>
            Represents an empty array of type <see href="System.Type" />
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsAttributeDefined(System.Reflection.PropertyInfo,System.Type,System.Boolean)">
            <summary>
            Determines if a specific attribute is defined on a property.
            </summary>
            <param name="property"></param>
            <param name="attributeType">the type of attribute to look for</param>
            <param name="inherit"></param>
            <returns><c>true</c> if the attribute is defined, otherwise <c>false</c></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsAttributeDefined(System.Type,System.Type,System.Boolean)">
            <summary>
            Determines if a specific attribute is defined for a type.
            </summary>
            <param name="type"></param>
            <param name="attributeType">the type of attribute to look for</param>
            <param name="inherit"></param>
            <returns><c>true</c> if the attribute is defined, otherwise <c>false</c></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsNullableType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a <see cref="T:System.Nullable"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the given type is a nullable type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsTaskType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a <see cref="T:System.Threading.Tasks.Task"/>
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the given type is a Task or Task{T}</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.GetNonNullableType(System.Type)">
            <summary>
            If the given type is <see cref="T:System.Nullable"/>, returns the element type,
            otherwise simply returns the input type
            </summary>
            <param name="type">The type to test that may or may not be Nullable</param>
            <returns>Either the input type or, if it was Nullable, its element type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsPredefinedType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is a primitive type or one
            of our standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, or one of our standard generic types whose generic
            argument is primitive or simple (e.g. Nullable, IEnumerable, IDictionary&lt;TKey,TValue&gt;).
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsPredefinedListType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is <see cref="T:System.Collections.Generic.IEnumerable`1"/> or an <see cref="T:System.Collections.IList"/> type, 
            and is either an interface, an array, or has a default constructor.
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsSupportedCollectionType(System.Type)">
            <summary>
            Returns <c>true</c> if specified type is a supported collection Type. This method only checks the collection
            Type itself, not whether the element Type is supported.
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a supported collection Type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsPredefinedDictionaryType(System.Type)">
            <summary>
            Returns <c>true</c> if <paramref name="type"/> implements <see cref="T:System.Collections.Generic.IDictionary`2"/> and
            its generic type arguments are acceptable predefined simple types.
            </summary>
            <param name="type">The type to test.</param>
            <returns><c>true</c> if the type is a <see cref="T:System.Collections.Generic.IDictionary`2"/> with supported generic type arguments.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsPredefinedSimpleType(System.Type)">
            <summary>
            Returns <c>true</c> if the given type is either primitive or one of our
            standard acceptable simple types, such as <see cref="T:System.String"/>,
            <see cref="T:System.Guid"/>, etc
            </summary>
            <param name="type">The type to test</param>
            <returns><c>true</c> if the type is a primitive or standard acceptable types</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsComplexType(System.Type)">
            <summary>
            This method determines if the specified Type should be treated as a
            complex type by the framework.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the type is a complex type, false otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsComplexTypeCollection(System.Type)">
            <summary>
            Determines whether the specified type is one of the supported collection types
            with a complex element type.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the type is a supported complex collection type, false otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsSupportedComplexType(System.Type)">
            <summary>
            Determines whether the specified type is a complex type or a collection of
            complex types.
            </summary>
            <param name="type">The type to check.</param>
            <returns>True if the specified type is a complex type or a collection of
            complex types, false otherwise.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.GetElementType(System.Type)">
            <summary>
            Returns the underlying element type starting from a given type.
            </summary>
            <remarks>
            Simple types simply return the input type.
            If the given type is an array, this method returns the array's
            element type.
            If the type is a generic type of <see cref="T:System.Collections.IEnumerable"/>, 
            or <see cref="T:System.Nullable"/>, this method returns the element
            type of the generic parameter
            </remarks>
            <param name="type"><see cref="T:System.Type"/> to examine.</param>
            <returns>The underlying element type starting from the given type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.DefinitionIsAssignableFrom(System.Type,System.Type)">
            <summary>
            Determines whether the generic type definition is assignable from the derived type.
            </summary>
            <remarks>
            This behaves just like <see cref="M:System.Type.IsAssignableFrom(System.Type)"/> except that it determines
            whether any generic type that can be made from the <paramref name="genericTypeDefinition"/>
            is assignable from <paramref name="derivedType"/>.
            </remarks>
            <param name="genericTypeDefinition">The generic type definition</param>
            <param name="derivedType">The type to determine assignability from</param>
            <returns>Whether the type definition is assignable from the derived type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.DefinitionIsAssignableFrom(System.Type,System.Type,System.Type@)">
            <summary>
            Determines whether the generic type definition is assignable from the derived type.
            </summary>
            <remarks>
            This behaves just like <see cref="M:System.Type.IsAssignableFrom(System.Type)"/> except that it determines
            whether any generic type that can be made from the <paramref name="genericTypeDefinition"/>
            is assignable from <paramref name="derivedType"/>.
            </remarks>
            <param name="genericTypeDefinition">The generic type definition</param>
            <param name="derivedType">The type to determine assignability from</param>
            <param name="genericType">The generic base class or interface implemented by the derived
            type that can be made from the <paramref name="genericTypeDefinition"/>. This value is
            null when the method return false.
            </param>
            <returns>Whether the type definition is assignable from the derived type</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsSystemAssembly(System.Reflection.Assembly)">
            <summary>
            Performs a check against an assembly to determine if it's a known
            System assembly.
            </summary>
            <param name="assembly">The assembly to check.</param>
            <returns><c>true</c> if the assembly is known to be a system assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsSystemAssembly(System.Reflection.AssemblyName)">
            <summary>
            Performs a check against an <see cref="T:System.Reflection.AssemblyName"/> to determine if it's a known
            System assembly.
            </summary>
            <param name="assemblyName">The assembly name to check.</param>
            <returns><c>true</c> if the assembly is known to be a system assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsOpenRiaAssembly(System.Reflection.AssemblyName)">
            <summary>
            Performs a check against an <see cref="T:System.Reflection.AssemblyName"/> to determine if it's a known
            Open Ria assembly.
            </summary>
            <param name="assemblyName">The assembly name to check.</param>
            <returns><c>true</c> if the assembly is known to be a Open Ria assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.CanContainDomainServiceImplementations(System.Reflection.Assembly)">
            <summary>
            Performs a quick check to determine if an assembly can contain DomainService implementations
            by checking that the assembly 
            1. References the OpenRiaServices.DomainServices.Server assembly (even classes inheriting 
            indirectly must reference the assembly to compile) 
            2. Excludes system assemblies (including OpenRiaServices framework assemblies).
            </summary>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsSigned(System.Reflection.AssemblyName)">
            <summary>
            Check against an <see cref="T:System.Reflection.AssemblyName"/> to determine if signed to create a strong name
            (it has public key token != null)
            </summary>
            <remarks>
             This should not be confuse with assemblies signed with a certificate (authenticode signed).
            </remarks>
            <param name="assemblyName">The assembly name to check.</param>
            <returns><c>true</c> if the assembly is strongly named (signed), otherwise <c>false</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.TypeUtility.IsSystemAssembly(System.String)">
            <summary>
            Performs a check against an assembly's full name to determine if it's a known
            System assembly.
            </summary>
            <remarks>
            We can't use Assembly.GetName().GetPublicKeyToken() since that requires FileIOPermissions.
            </remarks>
            <param name="assemblyFullName">The <see cref="P:System.Reflection.AssemblyName.FullName"/> to check.</param>
            <returns><c>true</c> if the assembly is known to be a system assembly, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.SerializationUtility.GetClientType(System.Type)">
            <summary>
            Gets the type that should be used on the client for the specified type.
            </summary>
            <param name="t">The type to get the client type for.</param>
            <returns>The client type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.SerializationUtility.GetClientValue(System.Type,System.Object)">
            <summary>
            Gets a value that can be used by the client.
            </summary>
            <remarks>
            This method should be kept in sync with DataContractSurrogateGenerator.EmitToClientConversion.
            </remarks>
            <param name="targetType">The type used by the client.</param>
            <param name="value">The value on the server.</param>
            <returns>A value that can be used by the client.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.SerializationUtility.GetServerValue(System.Type,System.Object)">
            <summary>
            Gets a value that can be used by the server.
            </summary>
            <remarks>
            This method should be kept in sync with DataContractSurrogateGenerator.EmitToServerConversion.
            </remarks>
            <param name="targetType">The type used by the server.</param>
            <param name="value">The value from the client.</param>
            <returns>A value that can be used by the server.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.SerializationUtility.IsSerializableDataMember(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns true if the specified property is a data member that should be serialized
            </summary>
            <param name="propertyDescriptor">The property to inspect</param>
            <returns>true if the specified property is a data member that should be serialized</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.ExceptionHandlingUtility.IsFatal(System.Exception)">
            <summary>
            Determines if an <see cref="T:System.Exception"/> is fatal and therefore should not be handled.
            </summary>
            <example>
            try
            {
                // Code that may throw
            }
            catch (Exception ex)
            {
                if (ex.IsFatal())
                {
                    throw;
                }
                
                // Handle exception
            }
            </example>
            <param name="exception">The exception to check</param>
            <returns><c>true</c> if the exception is fatal, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.ExceptionHandlingUtility.GetUnwrappedException(System.Exception)">
            <summary>
            Helper method to unwrap a TargetInvocationException and AggregateException.
            </summary>
            <param name="e">The exception to unwrap.</param>
            <returns>the first inner exception which is neither a TargetInvocationException nor a AggregateException</returns>
        </member>
        <member name="T:OpenRiaServices.DomainServices.Server.TypeDescriptorExtensions">
            <summary>
            Extension methods for TypeDescriptors
            </summary>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorExtensions.ExplicitAttributes(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Extension method to extract only the explicitly specified attributes from a <see cref="T:System.ComponentModel.PropertyDescriptor"/>.
            </summary>
            <remarks>
            Normal TypeDescriptor semantics are to inherit the attributes of a property's type.  This method
            exists to suppress those inherited attributes.
            </remarks>
            <param name="propertyDescriptor">The property descriptor whose attributes are needed.</param>
            <returns>A new <see cref="T:System.ComponentModel.AttributeCollection"/> stripped of any attributes from the property's type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorExtensions.Attributes(System.Type)">
            <summary>
            Extension method to extract attributes from a type taking into account the inheritance type of attributes
            </summary>
            <remarks>
            Normal TypeDescriptor semantics are to inherit the attributes of a type's base type, regardless of their 
            inheritance type.
            </remarks>
            <param name="type">The type whose attributes are needed.</param>
            <returns>A new <see cref="T:System.ComponentModel.AttributeCollection"/> stripped of any incorrectly inherited attributes from the type.</returns>
        </member>
        <member name="M:OpenRiaServices.DomainServices.Server.TypeDescriptorExtensions.ContainsAttributeType``1(System.ComponentModel.AttributeCollection)">
            <summary>
            Checks to see if an attribute collection contains any attributes of the provided type.
            </summary>
            <typeparam name="TAttribute">The attribute type to check for</typeparam>
            <param name="attributes">The attribute collection to inspect</param>
            <returns><c>True</c> if an attribute of the provided type is contained in the attribute collection.</returns>
        </member>
    </members>
</doc>
