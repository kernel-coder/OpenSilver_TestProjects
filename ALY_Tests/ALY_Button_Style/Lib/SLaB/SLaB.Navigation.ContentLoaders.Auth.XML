<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SLaB.Navigation.ContentLoaders.Auth</name>
    </assembly>
    <members>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.Allow">
            <summary>
              Specifies the roles/users that are allowed to access a page.
            </summary>
        </member>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.INavigationAuthorizationRulePart">
            <summary>
              An interface for specifying part of a rule based upon some characteristics of the principal.  The premade instances of this interface are
              Allow and Deny, and work similar to the ASP.NET web.config authentication options.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.INavigationAuthorizationRulePart.IsAllowed(System.Security.Principal.IPrincipal)">
            <summary>
              Indicates whether the principal is allowed by this rule part.
            </summary>
            <param name = "principal">The principal to check.</param>
            <returns>True if the principal is allowed.  False otherwise.</returns>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.INavigationAuthorizationRulePart.IsDenied(System.Security.Principal.IPrincipal)">
            <summary>
              Indicates whether the principal is denied by this rule part.
            </summary>
            <param name = "principal">The principal to check.</param>
            <returns>True if the principal is denied.  False otherwise.</returns>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.Allow.RolesProperty">
            <summary>
              Gets or sets, in a comma-separated list, the set of roles to allow.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.Allow.UsersProperty">
            <summary>
              Gets or sets, in a comma-separated list, the set of users to allow.  "?" indicates anonymous users will be allowed.
              "*" indicates that all users will be allowed.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.Allow.IsAllowed(System.Security.Principal.IPrincipal)">
            <summary>
              Indicates whether the principal is allowed by this rule part.
            </summary>
            <param name = "principal">The principal to check.</param>
            <returns>True if the principal is allowed.  False otherwise.</returns>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.Allow.IsDenied(System.Security.Principal.IPrincipal)">
            <summary>
              Indicates whether the principal is denied by this rule part.
            </summary>
            <param name = "principal">The principal to check.</param>
            <returns>True if the principal is denied.  False otherwise.</returns>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.Allow.Roles">
            <summary>
              Gets or sets, in a comma-separated list, the set of roles to allow.
            </summary>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.Allow.Users">
            <summary>
              Gets or sets, in a comma-separated list, the set of users to allow.  "?" indicates anonymous users will be allowed.
              "*" indicates that all users will be allowed.
            </summary>
        </member>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule">
            <summary>
              Represents an authorization rule for the NavigationAuthorizer.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.IgnoreCaseProperty">
            <summary>
              Specifies whether the regular expression will ignore case when checking for matches.  True by default.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.PartsProperty">
            <summary>
              The set of parts (e.g. Allow and Deny) that make up the authorization rule.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.UriProperty">
            <summary>
              Specifies a regular expression to be used to match Uris being loaded.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.#ctor">
            <summary>
              Constructs a new NavigationAuthRule.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.Check(System.Security.Principal.IPrincipal)">
            <summary>
              Checks the principal against the parts of the rule and throws if the principal is unauthorized.
            </summary>
            <param name = "principal">The principal whose credentials are being checked.</param>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.Matches(System.Uri)">
            <summary>
              Checks to see whether the given uri matches the UriPattern.
            </summary>
            <param name = "uri">The uri being matched.</param>
            <returns>True if the Uri is a match for the regular expression pattern supplied as UriPattern.</returns>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.IgnoreCase">
            <summary>
              Specifies whether the regular expression will ignore case when checking for matches.  True by default.
            </summary>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.Parts">
            <summary>
              The set of parts (e.g. Allow and Deny) that make up the authorization rule.
            </summary>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthRule.UriPattern">
            <summary>
              Specifies a regular expression to be used to match Uris being loaded.
            </summary>
        </member>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.INavigationAuthorizer">
            <summary>
              INavigationAuthorizor is used by the AuthContentLoader to check to see whether navigation should be allowed based upon
              user credentials.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.INavigationAuthorizer.CheckAuthorization(System.Security.Principal.IPrincipal,System.Uri,System.Uri)">
            <summary>
              Checks whether the principal has sufficient authorization to access the Uri being loaded by the AuthContentLoader.
              If the principal is authorized, this method should simply return.  Otherwise, it should throw.
            </summary>
            <param name = "principal">The user credentials against which to check.</param>
            <param name = "targetUri">The Uri being loaded.</param>
            <param name = "currentUri">The current Uri from which the new Uri is being loaded.</param>
        </member>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthorizer">
            <summary>
              A default authorizer for the AuthContentLoader that mimics the behavior of ASP.NET's web.config authorization markup.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthorizer.RulesProperty">
            <summary>
              The set of rules used by the authorizer.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthorizer.#ctor">
            <summary>
              Constructs a NavigationAuthorizer.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthorizer.CheckAuthorization(System.Security.Principal.IPrincipal,System.Uri,System.Uri)">
            <summary>
              Checks whether the principal has sufficient authorization to access the Uri being loaded by the AuthContentLoader.
              If the principal is authorized, this method should simply return.  Otherwise, it should throw.
            </summary>
            <param name = "principal">The user credentials against which to check.</param>
            <param name = "targetUri">The Uri being loaded.</param>
            <param name = "currentUri">The current Uri from which the new Uri is being loaded.</param>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.NavigationAuthorizer.Rules">
            <summary>
              The set of rules used by the authorizer.
            </summary>
        </member>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader">
            <summary>
              An INavigationContentLoader that throws an UnauthorizedAccessException if the user does not meet the requirements
              specified for the page they are trying to navigate to.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.AuthorizerProperty">
            <summary>
              The Authorizer that will be used to authorize the Principal.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.ContentLoaderProperty">
            <summary>
              The INavigationContentLoader being wrapped by the AuthContentLoader.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.PrincipalProperty">
            <summary>
              The principal that will be used to check authorization.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.CanLoad(System.Uri,System.Uri)">
            <summary>
              Gets a value that indicates whether the specified URI can be loaded.
            </summary>
            <param name = "targetUri">The URI to test.</param>
            <param name = "currentUri">The URI that is currently loaded.</param>
            <returns>true if the URI can be loaded; otherwise, false.</returns>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.CreateLoader">
            <summary>
              Creates an instance of a LoaderBase that will be used to handle loading.
            </summary>
            <returns>An instance of a LoaderBase.</returns>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.Authorizer">
            <summary>
              The Authorizer that will be used to authorize the Principal.
            </summary>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.ContentLoader">
            <summary>
              The INavigationContentLoader being wrapped by the AuthContentLoader.
            </summary>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.AuthContentLoader.Principal">
            <summary>
              The principal that will be used to check authorization.  Bind this to, for example, the
            </summary>
        </member>
        <member name="T:SLaB.Navigation.ContentLoaders.Auth.Deny">
            <summary>
              Specifies the roles/users that are denied to access a page.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.Deny.RolesProperty">
            <summary>
              Gets or sets, in a comma-separated list, the set of roles to be denied.
            </summary>
        </member>
        <member name="F:SLaB.Navigation.ContentLoaders.Auth.Deny.UsersProperty">
            <summary>
              Gets or sets, in a comma-separated list, the set of users to denied.  "?" indicates anonymous users will be denied.
              "*" indicates that all users will be denied.
            </summary>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.Deny.IsAllowed(System.Security.Principal.IPrincipal)">
            <summary>
              Indicates whether the principal is allowed by this rule part.
            </summary>
            <param name = "principal">The principal to check.</param>
            <returns>True if the principal is allowed.  False otherwise.</returns>
        </member>
        <member name="M:SLaB.Navigation.ContentLoaders.Auth.Deny.IsDenied(System.Security.Principal.IPrincipal)">
            <summary>
              Indicates whether the principal is denied by this rule part.
            </summary>
            <param name = "principal">The principal to check.</param>
            <returns>True if the principal is denied.  False otherwise.</returns>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.Deny.Roles">
            <summary>
              Gets or sets, in a comma-separated list, the set of roles to be denied.
            </summary>
        </member>
        <member name="P:SLaB.Navigation.ContentLoaders.Auth.Deny.Users">
            <summary>
              Gets or sets, in a comma-separated list, the set of users to denied.  "?" indicates anonymous users will be denied.
              "*" indicates that all users will be denied.
            </summary>
        </member>
    </members>
</doc>
