<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:layoutToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Layout.Toolkit"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
    xmlns:VirtuosoCoreBehaviors="clr-namespace:Virtuoso.Core.Behaviors"
    xmlns:VirtuosoCoreControls="clr-namespace:Virtuoso.Core.Controls"
                    mc:Ignorable="d">

   <!-- Global Settings-->
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="Brushes.xaml"/>
      <ResourceDictionary Source="Fonts.xaml"/>
   </ResourceDictionary.MergedDictionaries>

   <!-- *******CONTROLS STYLES****** -->
   <!-- **************************** -->

   <Style x:Key="CoreImageButton" TargetType="Button">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid x:Name="grid">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                 <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                 <EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HoverVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                 <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.995"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                 <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.245"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                 <EasingDoubleKeyFrame KeyTime="00:00:00"
                                                       Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="BaseVisualElement" Margin="0" Background="#64FFFFFF" BorderBrush="#FFAA9E95" BorderThickness="1" CornerRadius="3"/>
                  <Rectangle x:Name="HoverVisualElement" Stroke="#FFA39890" RadiusX="2" RadiusY="2" Margin="1" Opacity="0"/>
                  <Rectangle x:Name="FocusVisualElement" Stroke="#FF50004E" RadiusX="2" RadiusY="2" Margin="1" Opacity="0"/>
                  <ContentPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}"/>
                  <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Margin="0" StrokeThickness="0" Fill="#3E000000" Opacity="0"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!--ValidationToolTipTemplate Style-->
   <ControlTemplate x:Key="ValidationToolTipTemplate">
      <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
         <Grid.RenderTransform>
            <TranslateTransform x:Name="xform" X="-25"/>
         </Grid.RenderTransform>
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="OpenStates">
               <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0"/>
                  <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                     <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                           <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                           <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                        </DoubleAnimationUsingKeyFrames>
                     </Storyboard>
                  </VisualTransition>
               </VisualStateGroup.Transitions>
               <VisualState x:Name="Closed">
                  <Storyboard>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Open">
                  <Storyboard>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
                        <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                     </DoubleAnimationUsingKeyFrames>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                        <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
         <Border Background="{StaticResource ValidationBrush1}" CornerRadius="5" Margin="4,4,-4,-4"/>
         <Border Background="{StaticResource ValidationBrush2}" CornerRadius="4" Margin="3,3,-3,-3"/>
         <Border Background="{StaticResource ValidationBrush3}" CornerRadius="3" Margin="2,2,-2,-2"/>
         <Border Background="{StaticResource ValidationBrush4}" CornerRadius="2" Margin="1,1,-1,-1"/>
         <Border Background="{StaticResource ValidationBrush5}" CornerRadius="2"/>
         <Border CornerRadius="2">
            <TextBlock Foreground="{StaticResource WhiteColorBrush}" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}" UseLayoutRounding="false"/>
         </Border>
      </Grid>
   </ControlTemplate>

   <!--CommonValidationToolTipTemplate Style-->
   <ControlTemplate x:Key="CommonValidationToolTipTemplate" TargetType="ToolTip">
      <Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="OpenStates">
               <VisualStateGroup.Transitions>
                  <VisualTransition GeneratedDuration="0" />
                  <VisualTransition GeneratedDuration="0:0:0.2" To="Open">
                     <Storyboard>
                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0">
                           <DoubleAnimation.EasingFunction>
                              <BackEase Amplitude=".3" EasingMode="EaseOut" />
                           </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                     </Storyboard>
                  </VisualTransition>
               </VisualStateGroup.Transitions>
               <VisualState x:Name="Closed">
                  <Storyboard>
                     <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="0" />
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Open">
                  <Storyboard>
                     <DoubleAnimation Duration="0" Storyboard.TargetName="Translation" Storyboard.TargetProperty="X" To="0" />
                     <DoubleAnimation Duration="0" Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity" To="1" />
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
         <Grid.RenderTransform>
            <TranslateTransform x:Name="Translation" X="-25" />
         </Grid.RenderTransform>
         <Border Margin="4,4,-4,-4" Background="{StaticResource ValidationBrush1}" CornerRadius="5" />
         <Border Margin="3,3,-3,-3" Background="{StaticResource ValidationBrush2}" CornerRadius="4" />
         <Border Margin="2,2,-2,-2" Background="{StaticResource ValidationBrush3}" CornerRadius="3" />
         <Border Margin="1,1,-1,-1" Background="{StaticResource ValidationBrush4}" CornerRadius="2" />
         <Border Background="{StaticResource ValidationBrush5}" CornerRadius="2">
            <TextBlock Margin="8,4,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="{StaticResource WhiteColorBrush}" Text="{Binding (Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap" />
         </Border>
      </Grid>
   </ControlTemplate>

   <!--Button Style-->
   <Style x:Key="CoreButtonStyle"  TargetType="Button">
      <Setter Property="Background" Value="{StaticResource HighlightDarkColor}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource WhiteColor}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="Padding" Value="5,6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder" d:IsOptimized="True"/>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightDarkColor}"/>
                              </ColorAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                  <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource WhiteColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}">
                        <ContentPresenter.Resources>
                           <Style TargetType="TextBlock" />
                        </ContentPresenter.Resources>
                     </ContentPresenter>
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="Button" BasedOn="{StaticResource CoreButtonStyle}" />
   <Style x:Key="LookbackButtonStyle" TargetType="Button" BasedOn="{StaticResource CoreButtonStyle}">
      <Setter Property="FontSize" Value="11"/>
      <Setter Property="Height" Value="26"/>
      <Setter Property="Width" Value="73"/>
      <Setter Property="Content" Value="Look Back"/>
   </Style>
   <Style x:Key="BackOfficeLaunchButtonStyle"  TargetType="Button">
      <Setter Property="Background" Value="{StaticResource HighlightDarkColor}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource WhiteColor}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="Padding" Value="5,6"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0"  Background="{TemplateBinding Background}" CornerRadius="3"/>
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                  <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <ContentControl HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource WhiteColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" />
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="XXCloseButtonStyle" TargetType="Button">
      <Setter Property="Background" Value="{StaticResource HighlightDarkColor}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource WhiteColor}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="Padding" Value="5,6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder" d:IsOptimized="True"/>
                              <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder" d:IsOptimized="True"/>
                              <DoubleAnimation Duration="0" To="0.3" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="border" d:IsOptimized="True"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>

                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                  <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <ContentPresenter x:Name="contentPresenter" Margin="1" d:LayoutOverrides="Width, Height">
                     <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                        <Viewbox>
                           <Canvas Width="121.333" Height="121.333">
                              <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                              <Path Width="71" Height="80" Canvas.Left="25.167" Canvas.Top="20.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 1116.97,1213.32L 1167.51,1272.86" UseLayoutRounding="False"/>
                              <Path Width="71" Height="80" Canvas.Left="25.167" Canvas.Top="20.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 1167.51,1213.32L 1116.97,1272.86" UseLayoutRounding="False"/>
                           </Canvas>
                        </Viewbox>
                     </Border>
                  </ContentPresenter>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--SearchButtonStyle-->
   <Style x:Key="SearchButtonStyle" TargetType="HyperlinkButton">
      <Setter Property="Margin" Value="-22,0,20,0" />
      <Setter Property="ContentTemplate">
         <Setter.Value>
            <DataTemplate>
               <Grid Width="14" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="3,2,0,0">
                  <Rectangle Fill="#FF767676" HorizontalAlignment="Right" Height="8" Margin="0,0,-0.164,-0.334" RadiusY="0.5" RadiusX="0.5" RenderTransformOrigin="0.5,0.5" Stroke="#FF767676" UseLayoutRounding="False" VerticalAlignment="Bottom" Width="4">
                     <Rectangle.RenderTransform>
                        <RotateTransform Angle="-45"/>
                     </Rectangle.RenderTransform>
                  </Rectangle>
                  <Ellipse Fill="Transparent" Margin="0,0,1,3" Stroke="#FF767676"/>
               </Grid>
            </DataTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid x:Name="grid" Cursor="{TemplateBinding Cursor}" Margin="-6,0,0,-4">
                  <Grid.Background>
                     <SolidColorBrush Color="{StaticResource BaseColor2}"/>
                  </Grid.Background>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HighlightLightColor}" Storyboard.TargetProperty="(SolidColorBrush.Color)" Storyboard.TargetName="ContentPresenterWrapperColor" d:IsOptimized="True"/>
                              <ColorAnimation Duration="0" To="{StaticResource Gray5}" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource Gray5}" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                              <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid" d:IsOptimized="True"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ColorAnimation Duration="0"
                                              To="{StaticResource HighlightLightColor}"
                                              Storyboard.TargetProperty="(SolidColorBrush.Color)"
                                              Storyboard.TargetName="ContentPresenterWrapperColor"
                                              d:IsOptimized="True" />
                              <ColorAnimation Duration="0"
                                              To="{StaticResource Gray5}"
                                              Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                              Storyboard.TargetName="grid"
                                              d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource HighlightDarkColor}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Width="21" Margin="2,3,0,0"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--Control Label Style-->
   <Style x:Key="ControlLabelStyle" TargetType="TextBlock">
      <Setter Property="Foreground" Value="{StaticResource LabelTextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource LabelFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
   </Style>

   <!--HyperlinkButton Style-->
   <Style x:Name="BasicHyperlinkButtonStyle"
          TargetType="HyperlinkButton">
      <Setter Property="Foreground"
              Value="{StaticResource HighlightBrush}" />
      <Setter Property="FontFamily"
              Value="{StaticResource ContentFontFamily}" />
      <Setter Property="FontSize"
              Value="{StaticResource HyperlinkFontSize}" />
      <Setter Property="TextOptions.TextHintingMode"
              Value="Animated" />
      <Setter Property="Padding"
              Value="2,0,2,0" />
      <Setter Property="Cursor"
              Value="Hand" />
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="VerticalContentAlignment"
              Value="Top" />
      <Setter Property="Background"
              Value="Transparent" />
   </Style>

   <!--HyperlinkButton Style-->
   <Style x:Name="CoreHyperlinkButtonStyle" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource HighlightDarkColor}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <ContentPresenter.Resources>
                           <Style TargetType="TextBlock" />
                        </ContentPresenter.Resources>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="HyperlinkButton" BasedOn="{StaticResource CoreHyperlinkButtonStyle}" />
   <Style TargetType="HyperlinkButton" x:Name="HyperlinkButtonWrap">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="0,0,0,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"
                                 TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             Width="{TemplateBinding Width}" TextWrapping="Wrap"
                             Height="{TemplateBinding Height}"
                                   >
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource HighlightDarkColor}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                                 Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"
                                  Width="{TemplateBinding Width}" TextWrapping="Wrap" Height="{TemplateBinding Height}"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="HyperlinkButton" x:Name="HyperlinkButtonWrapAndForeground">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="0,0,0,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}"
                             TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             Width="{TemplateBinding Width}" TextWrapping="Wrap"
                             Height="{TemplateBinding Height}"
                             Foreground="{TemplateBinding Foreground}"
                                   >
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}"
                             Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"
                             Width="{TemplateBinding Width}" TextWrapping="Wrap" Height="{TemplateBinding Height}"/>
                  <ContentControl
                      Foreground="{TemplateBinding Foreground}" >
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="ErrorHyperlinkButton" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource ValidationSummaryColor1}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource ValidationSummaryColor1}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="MedicationAdministrationHyperlinkButton" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource MedicationAdministrationColor}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource MedicationAdministrationColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="MedicationReconcileHyperlinkButton" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource MedicationReconcileColor}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource MedicationReconcileColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="MedicationTeachingHyperlinkButton" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                     <TextBlock.Foreground>
                        <SolidColorBrush Color="{StaticResource MedicationTeachingColor}"/>
                     </TextBlock.Foreground>
                  </TextBlock>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource MedicationTeachingColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="ExternalLinkStyle" TargetType="HyperlinkButton">
      <Setter Property="Foreground" Value="Blue"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HighlightLightColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl Foreground="{TemplateBinding Foreground}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="Blue"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CacheHyperlinkButton"
          TargetType="HyperlinkButton">
      <Setter Property="Height"
              Value="23" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="HorizontalAlignment"
              Value="Left" />
      <Setter Property="Foreground"
              Value="{StaticResource HighlightBrush}" />
      <Setter Property="FontFamily"
              Value="{StaticResource ContentFontFamily}" />
      <Setter Property="FontSize"
              Value="{StaticResource HyperlinkFontSize}" />
      <Setter Property="TextOptions.TextHintingMode"
              Value="Animated" />
      <Setter Property="Padding"
              Value="2,0,2,0" />
      <Setter Property="Cursor"
              Value="Hand" />
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="VerticalContentAlignment"
              Value="Top" />
      <Setter Property="Background"
              Value="Transparent" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}"
                     Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock"
                             FontSize="{TemplateBinding FontSize}"
                             FontWeight="{TemplateBinding FontWeight}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="28,1,0,0"
                             Text="{TemplateBinding Content}"
                             TextDecorations="Underline"
                             Visibility="Collapsed"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  <TextBlock x:Name="DisabledOverlay"
                             FontSize="{TemplateBinding FontSize}"
                             FontWeight="{TemplateBinding FontWeight}"
                             Foreground="{StaticResource DisabledForegroundBrush}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="28,1,0,0"
                             Text="{TemplateBinding Content}"
                             Visibility="Collapsed"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             Canvas.ZIndex="1" />
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                         Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border"
                                   CornerRadius="2"
                                   BorderThickness="1"
                                   BorderBrush="{StaticResource HighlightBrush}"
                                   Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="25"
                                         Height="25">
                                    <Canvas Width="25"
                                            Height="25"
                                            Canvas.Left="0"
                                            Canvas.Top="0">
                                       <Path Width="25"
                                             Height="25"
                                             Canvas.Left="0"
                                             Canvas.Top="5.72205e-006"
                                             Stretch="Fill"
                                             Fill="#FF50004E"
                                             Data="F1 M 4,5.72205e-006L 21,5.72205e-006C 23.2091,5.72205e-006 25,1.79087 25,4.00001L 25,21C 25,23.2091 23.2091,25 21,25L 4,25C 1.79086,25 0,23.2091 0,21L 0,4.00001C 0,1.79087 1.79086,5.72205e-006 4,5.72205e-006 Z " />
                                       <Path Width="16.4063"
                                             Height="17.0941"
                                             Canvas.Left="4.29688"
                                             Canvas.Top="4.34359"
                                             Stretch="Fill"
                                             StrokeThickness="1"
                                             StrokeLineJoin="Round"
                                             Stroke="#FFFFFFFF"
                                             Fill="#FFFFFFFF"
                                             Data="F1 M 12.5,21.4376L 4.29688,12.5748L 8.726,12.5748L 8.726,4.34359L 16.274,4.34359L 16.274,12.5748L 20.7031,12.5748L 12.5,21.4376 Z " />
                                    </Canvas>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,1,0,0"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Text="{TemplateBinding Content}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement"
                             IsHitTestVisible="false"
                             Opacity="0"
                             StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}" />
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CacheHyperlinkButtonLarge" TargetType="HyperlinkButton" BasedOn="{StaticResource CacheHyperlinkButton}">
      <Setter Property="FontSize" Value="17" />
   </Style>

   <Style  x:Key="AddHyperlinkButton" TargetType="HyperlinkButton">
      <Setter Property="Height" Value="23"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="28,1,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="28,1,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="21" Height="88" Canvas.Left="50.167" Canvas.Top="16.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 316.501,1042.33L 316.333,1109.62" UseLayoutRounding="False"/>
                                    <Path Width="88" Height="21" Canvas.Left="16.667" Canvas.Top="50.167" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 350.063,1076.06L 282.77,1075.89" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,1,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style  x:Key="AddHyperlinkButtonPatientTaskNote" TargetType="HyperlinkButton">
      <Setter Property="Height" Value="23"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="28,1,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="28,1,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource PatientImportantBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource PatientImportantBrush}"/>
                                    <Path Width="21" Height="88" Canvas.Left="50.167" Canvas.Top="16.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 316.501,1042.33L 316.333,1109.62" UseLayoutRounding="False"/>
                                    <Path Width="88" Height="21" Canvas.Left="16.667" Canvas.Top="50.167" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 350.063,1076.06L 282.77,1075.89" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,1,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="AddHyperlinkButtonLarge" TargetType="HyperlinkButton" BasedOn="{StaticResource AddHyperlinkButton}">
      <Setter Property="FontSize" Value="17"/>
   </Style>

   <!--EditHyperlinkButton Style-->
   <Style  x:Key="EditHyperlinkButton" TargetType="HyperlinkButton">
      <Setter Property="Height" Value="30"/>
      <Setter Property="Content" Value="Edit"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalAlignment" Value="Left"/>
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <!--<Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>-->
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2,0,2,0"/>
      <Setter Property="Cursor" Value="Hand"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="55" Height="55" Canvas.Left="29.638" Canvas.Top="34.061" Stretch="Fill" Fill="#FFFFFFFF" Data="M 794.759,1112.58L 832.161,1075.18C 833.723,1073.62 836.111,1073.48 837.495,1074.86L 847.842,1085.21C 849.226,1086.59 849.081,1088.98 847.518,1090.54L 810.116,1127.94C 808.554,1129.5 806.166,1129.64 804.783,1128.26L 794.435,1117.91C 793.052,1116.53 793.197,1114.14 794.759,1112.58 Z M 807.243,1123.02L 842.596,1087.67C 843.227,1087.04 844.191,1086.98 844.749,1087.54L 844.749,1087.54C 845.308,1088.1 845.249,1089.06 844.618,1089.69L 809.266,1125.04C 808.635,1125.67 807.671,1125.73 807.113,1125.17L 807.113,1125.17C 806.554,1124.61 806.613,1123.65 807.243,1123.02 Z " UseLayoutRounding="False"/>
                                    <Path Width="22" Height="22" Canvas.Left="74.126" Canvas.Top="22.575" Stretch="Fill" Fill="#FFFFFFFF" Data="M 839.386,1067.95L 843.509,1063.83C 845.071,1062.27 847.459,1062.12 848.842,1063.51L 859.19,1073.86C 860.574,1075.24 860.429,1077.63 858.866,1079.19L 854.743,1083.31C 853.181,1084.87 850.793,1085.02 849.41,1083.63L 839.062,1073.28C 837.679,1071.9 837.824,1069.51 839.386,1067.95 Z M 841.51,1068.12L 841.51,1068.12C 841.667,1067.97 841.908,1067.95 842.047,1068.09L 854.326,1080.37C 854.465,1080.51 854.45,1080.75 854.293,1080.91L 854.293,1080.91C 854.136,1081.07 853.895,1081.08 853.756,1080.94L 841.478,1068.66C 841.338,1068.52 841.353,1068.28 841.51,1068.12 Z M 840.561,1069.07L 840.561,1069.07C 840.719,1068.91 840.959,1068.9 841.098,1069.04L 853.377,1081.32C 853.516,1081.46 853.501,1081.7 853.344,1081.86L 853.344,1081.86C 853.187,1082.02 852.947,1082.03 852.807,1081.89L 840.529,1069.61C 840.39,1069.47 840.404,1069.23 840.561,1069.07 Z M 839.613,1070.02L 839.613,1070.02C 839.77,1069.86 840.01,1069.85 840.149,1069.99L 852.428,1082.27C 852.567,1082.41 852.553,1082.65 852.395,1082.81L 852.395,1082.81C 852.238,1082.96 851.998,1082.98 851.859,1082.84L 839.58,1070.56C 839.441,1070.42 839.455,1070.18 839.613,1070.02 Z " UseLayoutRounding="False"/>
                                    <Path Width="18" Height="18" Canvas.Left="21.359" Canvas.Top="79.317" Stretch="Fill" Fill="#FFFFFFFF" Data="M 786.891,1120.44C 788.454,1118.88 790.748,1118.64 792.017,1119.91L 802.781,1130.68C 804.049,1131.95 803.811,1134.24 802.249,1135.81L 785.121,1137.53L 786.891,1120.44 Z M 788.086,1134.28L 798.951,1132.66C 799.401,1132.59 799.777,1132.89 799.79,1133.34L 799.79,1133.34C 799.803,1133.79 799.449,1134.2 798.998,1134.27L 788.134,1135.9C 787.684,1135.96 787.308,1135.66 787.295,1135.21L 787.295,1135.21C 787.281,1134.77 787.636,1134.35 788.086,1134.28 Z " UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!--EditHyperlinkButton SmallStyle-->
   <Style  x:Key="EditHyperlinkButtonSmall"
           TargetType="HyperlinkButton">
      <Setter Property="Height"
              Value="28" />
      <Setter Property="Content"
              Value="Edit" />
      <Setter Property="VerticalAlignment"
              Value="Center" />
      <Setter Property="HorizontalAlignment"
              Value="Left" />
      <Setter Property="Foreground"
              Value="{StaticResource HighlightBrush}" />
      <Setter Property="FontFamily"
              Value="{StaticResource ContentFontFamily}" />
      <!--<Setter Property="FontSize" Value="{StaticResource HyperlinkFontSize}"/>-->
      <Setter Property="FontSize"
              Value="{StaticResource ContentFontSize}" />
      <Setter Property="FontWeight"
              Value="SemiBold" />
      <Setter Property="TextOptions.TextHintingMode"
              Value="Animated" />
      <Setter Property="Padding"
              Value="2,0,2,0" />
      <Setter Property="Cursor"
              Value="Hand" />
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="VerticalContentAlignment"
              Value="Top" />
      <Setter Property="Background"
              Value="Transparent" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}"
                     Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock"
                             FontSize="{TemplateBinding FontSize}"
                             FontWeight="{TemplateBinding FontWeight}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="28,3,0,0"
                             Text="{TemplateBinding Content}"
                             TextDecorations="Underline"
                             Visibility="Collapsed"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                  <TextBlock x:Name="DisabledOverlay"
                             FontSize="{TemplateBinding FontSize}"
                             FontWeight="{TemplateBinding FontWeight}"
                             Foreground="{StaticResource DisabledForegroundBrush}"
                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                             Margin="28,3,0,0"
                             Text="{TemplateBinding Content}"
                             Visibility="Collapsed"
                             VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                             Canvas.ZIndex="1" />
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                         Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border"
                                   CornerRadius="2"
                                   Height="23"
                                   BorderThickness="1"
                                   BorderBrush="{StaticResource HighlightBrush}"
                                   Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333"
                                         Height="121.333">
                                    <Rectangle Width="121.333"
                                               Height="121.333"
                                               Canvas.Left="0"
                                               Canvas.Top="0"
                                               Stretch="Fill"
                                               Fill="{StaticResource HighlightBrush}" />
                                    <Path Width="55"
                                          Height="55"
                                          Canvas.Left="29.638"
                                          Canvas.Top="34.061"
                                          Stretch="Fill"
                                          Fill="#FFFFFFFF"
                                          Data="M 794.759,1112.58L 832.161,1075.18C 833.723,1073.62 836.111,1073.48 837.495,1074.86L 847.842,1085.21C 849.226,1086.59 849.081,1088.98 847.518,1090.54L 810.116,1127.94C 808.554,1129.5 806.166,1129.64 804.783,1128.26L 794.435,1117.91C 793.052,1116.53 793.197,1114.14 794.759,1112.58 Z M 807.243,1123.02L 842.596,1087.67C 843.227,1087.04 844.191,1086.98 844.749,1087.54L 844.749,1087.54C 845.308,1088.1 845.249,1089.06 844.618,1089.69L 809.266,1125.04C 808.635,1125.67 807.671,1125.73 807.113,1125.17L 807.113,1125.17C 806.554,1124.61 806.613,1123.65 807.243,1123.02 Z "
                                          UseLayoutRounding="False" />
                                    <Path Width="22"
                                          Height="22"
                                          Canvas.Left="74.126"
                                          Canvas.Top="22.575"
                                          Stretch="Fill"
                                          Fill="#FFFFFFFF"
                                          Data="M 839.386,1067.95L 843.509,1063.83C 845.071,1062.27 847.459,1062.12 848.842,1063.51L 859.19,1073.86C 860.574,1075.24 860.429,1077.63 858.866,1079.19L 854.743,1083.31C 853.181,1084.87 850.793,1085.02 849.41,1083.63L 839.062,1073.28C 837.679,1071.9 837.824,1069.51 839.386,1067.95 Z M 841.51,1068.12L 841.51,1068.12C 841.667,1067.97 841.908,1067.95 842.047,1068.09L 854.326,1080.37C 854.465,1080.51 854.45,1080.75 854.293,1080.91L 854.293,1080.91C 854.136,1081.07 853.895,1081.08 853.756,1080.94L 841.478,1068.66C 841.338,1068.52 841.353,1068.28 841.51,1068.12 Z M 840.561,1069.07L 840.561,1069.07C 840.719,1068.91 840.959,1068.9 841.098,1069.04L 853.377,1081.32C 853.516,1081.46 853.501,1081.7 853.344,1081.86L 853.344,1081.86C 853.187,1082.02 852.947,1082.03 852.807,1081.89L 840.529,1069.61C 840.39,1069.47 840.404,1069.23 840.561,1069.07 Z M 839.613,1070.02L 839.613,1070.02C 839.77,1069.86 840.01,1069.85 840.149,1069.99L 852.428,1082.27C 852.567,1082.41 852.553,1082.65 852.395,1082.81L 852.395,1082.81C 852.238,1082.96 851.998,1082.98 851.859,1082.84L 839.58,1070.56C 839.441,1070.42 839.455,1070.18 839.613,1070.02 Z "
                                          UseLayoutRounding="False" />
                                    <Path Width="18"
                                          Height="18"
                                          Canvas.Left="21.359"
                                          Canvas.Top="79.317"
                                          Stretch="Fill"
                                          Fill="#FFFFFFFF"
                                          Data="M 786.891,1120.44C 788.454,1118.88 790.748,1118.64 792.017,1119.91L 802.781,1130.68C 804.049,1131.95 803.811,1134.24 802.249,1135.81L 785.121,1137.53L 786.891,1120.44 Z M 788.086,1134.28L 798.951,1132.66C 799.401,1132.59 799.777,1132.89 799.79,1133.34L 799.79,1133.34C 799.803,1133.79 799.449,1134.2 798.998,1134.27L 788.134,1135.9C 787.684,1135.96 787.308,1135.66 787.295,1135.21L 787.295,1135.21C 787.281,1134.77 787.636,1134.35 788.086,1134.28 Z "
                                          UseLayoutRounding="False" />
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0"
                                      FontSize="{TemplateBinding FontSize}"
                                      FontWeight="{TemplateBinding FontWeight}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Text="{TemplateBinding Content}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement"
                             IsHitTestVisible="false"
                             Opacity="0"
                             StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}" />
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="OKHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="OK"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="70" Height="82" Canvas.Left="25.667" Canvas.Top="19.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeLineJoin="Round" Stroke="#FFFEFEFE" Data="F1 M 706.298,1258.44L 723.292,1280.35L 755.615,1218.26" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="Cancel2HyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value=""/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>

                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>

                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border Height="25" Width="25" x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="71" Height="80" Canvas.Left="25.167" Canvas.Top="20.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 1116.97,1213.32L 1167.51,1272.86" UseLayoutRounding="False"/>
                                    <Path Width="71" Height="80" Canvas.Left="25.167" Canvas.Top="20.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 1167.51,1213.32L 1116.97,1272.86" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>


   <Style x:Key="CancelHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="Cancel"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="71" Height="80" Canvas.Left="25.167" Canvas.Top="20.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 1116.97,1213.32L 1167.51,1272.86" UseLayoutRounding="False"/>
                                    <Path Width="71" Height="80" Canvas.Left="25.167" Canvas.Top="20.667" Stretch="Fill" StrokeThickness="20.3333" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 1167.51,1213.32L 1116.97,1272.86" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="DeleteHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="Delete"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="43" Height="48" Canvas.Left="38.807" Canvas.Top="35.328" Stretch="Fill" StrokeThickness="16" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 591.714,1068.64L 618.901,1100.67" UseLayoutRounding="False"/>
                                    <Path Width="85" Height="85" Canvas.Left="17.729" Canvas.Top="17.338" Stretch="Fill" StrokeThickness="16" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 639.793,1085.16C 639.793,1104.25 624.319,1119.73 605.229,1119.73C 586.141,1119.73 570.666,1104.25 570.666,1085.16C 570.666,1066.08 586.141,1050.6 605.229,1050.6C 624.319,1050.6 639.793,1066.08 639.793,1085.16 Z " UseLayoutRounding="False"/>
                                    <Path Width="15" Height="14" Canvas.Left="41.611" Canvas.Top="29.405" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 597.819,1063.55C 595.431,1060.05 598.301,1059.1 600.392,1058.95C 605.535,1058.58 586.611,1054.73 586.611,1054.73L 589.365,1068.51L 597.819,1063.55 Z " UseLayoutRounding="False"/>
                                    <Path Width="13" Height="15" Canvas.Left="73.591" Canvas.Top="68.03" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 625.195,1095.65C 628.116,1098.71 629.644,1096.1 630.223,1094.08C 631.647,1089.13 631.503,1108.44 631.503,1108.44L 618.591,1102.89L 625.195,1095.65 Z " UseLayoutRounding="False"/>
                                    <Path Width="13" Height="15" Canvas.Left="33.48" Canvas.Top="35.824" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 585.402,1073.52C 582.313,1070.63 580.935,1073.32 580.474,1075.36C 579.331,1080.39 578.377,1061.1 578.377,1061.1L 591.583,1065.91L 585.402,1073.52 Z " UseLayoutRounding="False"/>
                                    <Path Width="15" Height="14" Canvas.Left="65.217" Canvas.Top="75.415" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 613.328,1106.28C 615.956,1109.6 613.158,1110.75 611.082,1111.05C 605.977,1111.77 625.128,1114.3 625.128,1114.3L 621.413,1100.74L 613.328,1106.28 Z " UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="DeleteHyperlinkButtonSmall" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="Delete"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="23,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="23,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" Height="18" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="43" Height="48" Canvas.Left="38.807" Canvas.Top="35.328" Stretch="Fill" StrokeThickness="16" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 591.714,1068.64L 618.901,1100.67" UseLayoutRounding="False"/>
                                    <Path Width="85" Height="85" Canvas.Left="17.729" Canvas.Top="17.338" Stretch="Fill" StrokeThickness="16" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 639.793,1085.16C 639.793,1104.25 624.319,1119.73 605.229,1119.73C 586.141,1119.73 570.666,1104.25 570.666,1085.16C 570.666,1066.08 586.141,1050.6 605.229,1050.6C 624.319,1050.6 639.793,1066.08 639.793,1085.16 Z " UseLayoutRounding="False"/>
                                    <Path Width="15" Height="14" Canvas.Left="41.611" Canvas.Top="29.405" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 597.819,1063.55C 595.431,1060.05 598.301,1059.1 600.392,1058.95C 605.535,1058.58 586.611,1054.73 586.611,1054.73L 589.365,1068.51L 597.819,1063.55 Z " UseLayoutRounding="False"/>
                                    <Path Width="13" Height="15" Canvas.Left="73.591" Canvas.Top="68.03" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 625.195,1095.65C 628.116,1098.71 629.644,1096.1 630.223,1094.08C 631.647,1089.13 631.503,1108.44 631.503,1108.44L 618.591,1102.89L 625.195,1095.65 Z " UseLayoutRounding="False"/>
                                    <Path Width="13" Height="15" Canvas.Left="33.48" Canvas.Top="35.824" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 585.402,1073.52C 582.313,1070.63 580.935,1073.32 580.474,1075.36C 579.331,1080.39 578.377,1061.1 578.377,1061.1L 591.583,1065.91L 585.402,1073.52 Z " UseLayoutRounding="False"/>
                                    <Path Width="15" Height="14" Canvas.Left="65.217" Canvas.Top="75.415" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 613.328,1106.28C 615.956,1109.6 613.158,1110.75 611.082,1111.05C 605.977,1111.77 625.128,1114.3 625.128,1114.3L 621.413,1100.74L 613.328,1106.28 Z " UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="RemoveHyperlinkButtonSmall" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="Remove"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="23,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="23,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" Height="18" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="43" Height="48" Canvas.Left="38.807" Canvas.Top="35.328" Stretch="Fill" StrokeThickness="16" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 591.714,1068.64L 618.901,1100.67" UseLayoutRounding="False"/>
                                    <Path Width="85" Height="85" Canvas.Left="17.729" Canvas.Top="17.338" Stretch="Fill" StrokeThickness="16" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeMiterLimit="2.75" Stroke="#FFFEFEFE" Data="F1 M 639.793,1085.16C 639.793,1104.25 624.319,1119.73 605.229,1119.73C 586.141,1119.73 570.666,1104.25 570.666,1085.16C 570.666,1066.08 586.141,1050.6 605.229,1050.6C 624.319,1050.6 639.793,1066.08 639.793,1085.16 Z " UseLayoutRounding="False"/>
                                    <Path Width="15" Height="14" Canvas.Left="41.611" Canvas.Top="29.405" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 597.819,1063.55C 595.431,1060.05 598.301,1059.1 600.392,1058.95C 605.535,1058.58 586.611,1054.73 586.611,1054.73L 589.365,1068.51L 597.819,1063.55 Z " UseLayoutRounding="False"/>
                                    <Path Width="13" Height="15" Canvas.Left="73.591" Canvas.Top="68.03" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 625.195,1095.65C 628.116,1098.71 629.644,1096.1 630.223,1094.08C 631.647,1089.13 631.503,1108.44 631.503,1108.44L 618.591,1102.89L 625.195,1095.65 Z " UseLayoutRounding="False"/>
                                    <Path Width="13" Height="15" Canvas.Left="33.48" Canvas.Top="35.824" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 585.402,1073.52C 582.313,1070.63 580.935,1073.32 580.474,1075.36C 579.331,1080.39 578.377,1061.1 578.377,1061.1L 591.583,1065.91L 585.402,1073.52 Z " UseLayoutRounding="False"/>
                                    <Path Width="15" Height="14" Canvas.Left="65.217" Canvas.Top="75.415" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 613.328,1106.28C 615.956,1109.6 613.158,1110.75 611.082,1111.05C 605.977,1111.77 625.128,1114.3 625.128,1114.3L 621.413,1100.74L 613.328,1106.28 Z " UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="FaxHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="Print"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Path Data="M23.896999,21.558014C23.681999,21.558014,23.503997,21.731994,23.503997,21.947998L23.503997,22.895996C23.503997,23.110992,23.681999,23.283996,23.896999,23.283996L24.840999,23.283996C25.061,23.283996,25.233997,23.110992,25.233997,22.895996L25.233997,21.947998C25.233997,21.731994,25.061,21.558014,24.840999,21.558014z M20.67,21.558014C20.455,21.558014,20.281999,21.731994,20.281999,21.947998L20.281999,22.895996C20.281999,23.110992,20.455,23.283996,20.67,23.283996L21.619001,23.283996C21.834001,23.283996,22.007002,23.110992,22.007002,22.895996L22.007002,21.947998C22.007002,21.731994,21.834001,21.558014,21.619001,21.558014z M17.448,21.558014C17.232999,21.558014,17.059999,21.731994,17.059999,21.947998L17.059999,22.895996C17.059999,23.110992,17.232999,23.283996,17.448,23.283996L18.398,23.283996C18.612001,23.283996,18.786001,23.110992,18.786001,22.895996L18.786001,21.947998C18.786001,21.731994,18.612001,21.558014,18.398,21.558014z M23.896999,18.795013C23.681999,18.795013,23.503997,18.968994,23.503997,19.184997L23.503997,20.131988C23.503997,20.347992,23.681999,20.520996,23.896999,20.520996L24.840999,20.520996C25.061,20.520996,25.233997,20.347992,25.233997,20.131988L25.233997,19.184997C25.233997,18.968994,25.061,18.795013,24.840999,18.795013z M20.67,18.795013C20.455,18.795013,20.281999,18.968994,20.281999,19.184997L20.281999,20.131988C20.281999,20.347992,20.455,20.520996,20.67,20.520996L21.619001,20.520996C21.834001,20.520996,22.007002,20.347992,22.007002,20.131988L22.007002,19.184997C22.007002,18.968994,21.834001,18.795013,21.619001,18.795013z M17.448,18.795013C17.232999,18.795013,17.059999,18.968994,17.059999,19.184997L17.059999,20.131988C17.059999,20.347992,17.232999,20.520996,17.448,20.520996L18.398,20.520996C18.612001,20.520996,18.786001,20.347992,18.786001,20.131988L18.786001,19.184997C18.786001,18.968994,18.612001,18.795013,18.398,18.795013z M23.896999,16.031006C23.681999,16.031006,23.503997,16.204986,23.503997,16.42099L23.503997,17.368988C23.503997,17.584991,23.681999,17.757995,23.896999,17.757995L24.840999,17.757995C25.061,17.757995,25.233997,17.584991,25.233997,17.368988L25.233997,16.42099C25.233997,16.204986,25.061,16.031006,24.840999,16.031006z M20.67,16.031006C20.455,16.031006,20.281999,16.204986,20.281999,16.42099L20.281999,17.368988C20.281999,17.584991,20.455,17.757995,20.67,17.757995L21.619001,17.757995C21.834001,17.757995,22.007002,17.584991,22.007002,17.368988L22.007002,16.42099C22.007002,16.204986,21.834001,16.031006,21.619001,16.031006z M17.448,16.031006C17.232999,16.031006,17.059999,16.204986,17.059999,16.42099L17.059999,17.368988C17.059999,17.584991,17.232999,17.757995,17.448,17.757995L18.398,17.757995C18.612001,17.757995,18.786001,17.584991,18.786001,17.368988L18.786001,16.42099C18.786001,16.204986,18.612001,16.031006,18.398,16.031006z M1.1640015,7.4580077L5.4700009,7.4580077C5.4700009,7.4580077,6.4610001,7.7319945,6.4610001,8.449005L6.4610001,12.039001C6.4610001,12.039001,6.4250008,13.200989,5.4030014,13.473999L5.4030014,20.312012C5.4030014,20.312012,6.4250008,20.584991,6.3579994,21.472992L6.3579994,25.028992C6.3579994,25.028992,6.4959999,26.226013,5.1629997,26.226013L1.4350014,26.226013C1.4350013,26.226013,0.087001798,26.292999,0.087001798,24.876007L0.065999983,21.747009C0.065999983,21.747009,-0.071998591,20.790985,1.026001,20.380005L0.88800049,13.337005C0.88800043,13.337005,0,12.927002,0,12.175995L0,8.619995C0,8.619995,0.27000046,7.6619872,1.1640015,7.4580077z M11.923002,7.1430052L12.648,7.1430052 12.648,11.429993C12.648,12.519012,13.537,13.407013,14.628998,13.407013L26.806999,13.407013C27.899997,13.407013,28.787998,12.519012,28.787998,11.429993L28.787998,7.1430052 29.441997,7.1430052C30.850998,7.1430052,32,8.2879942,32,9.699005L32,23.760986C32,25.174011,30.850998,26.319,29.441997,26.319L11.923002,26.319C10.509,26.319,9.3649994,25.174011,9.3649994,23.760986L9.3649994,9.699005C9.3649994,8.2879942,10.509,7.1430052,11.923002,7.1430052z M14.629998,0.66598508C14.543,0.66598496,14.472001,0.73800644,14.472001,0.82598874L14.472001,11.429993C14.472001,11.518005,14.543,11.588989,14.629998,11.588989L26.806999,11.588989C26.898998,11.588989,26.969997,11.518005,26.969997,11.429993L26.969997,3.2579955 26.775997,3.0669859 25.341999,3.0509947C24.886997,3.0509947,24.514999,2.6809996,24.514999,2.222992L24.524997,0.84201047 24.350998,0.66598508z M14.629998,4.2632564E-14L24.621997,4.2632564E-14 27.639,2.9790038 27.639,11.429993C27.639,11.885986,27.266998,12.256012,26.806999,12.256012L14.629998,12.256012C14.175999,12.256012,13.802999,11.885986,13.802999,11.429993L13.802999,0.82598874C13.802999,0.36999497,14.175999,-1.4792921E-07,14.629998,4.2632564E-14z"
                                          Stretch="Fill"
                                          Fill="#FFFEFEFE"
                                          Width="96.902" Height="96.902"
                                          Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" Canvas.Top="14.098" Canvas.Left="10">
                                       <Path.RenderTransform>
                                          <TransformGroup>
                                             <TransformGroup.Children>
                                                <RotateTransform Angle="0" />
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                             </TransformGroup.Children>
                                          </TransformGroup>
                                       </Path.RenderTransform>
                                    </Path>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="PrintHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Content" Value="Print"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="121.333" Height="121.333">
                                    <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Rectangle Width="51.0613" Height="16.3746" Canvas.Left="35" Canvas.Top="32" Stretch="Fill" Fill="#FFFEFEFE"/>
                                    <Path Width="35" Height="25" Canvas.Left="43.167" Canvas.Top="63.69" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 936.182,1269.38L 956.122,1269.38C 956.977,1269.38 957.669,1269.94 957.669,1270.62C 957.669,1271.31 956.977,1271.86 956.122,1271.86L 936.182,1271.86C 935.328,1271.86 934.637,1271.31 934.637,1270.62C 934.637,1269.94 935.328,1269.38 936.182,1269.38 Z M 936.182,1263.59L 956.122,1263.59C 956.977,1263.59 957.669,1264.14 957.669,1264.83C 957.669,1265.51 956.977,1266.07 956.122,1266.07L 936.182,1266.07C 935.328,1266.07 934.637,1265.51 934.637,1264.83C 934.637,1264.14 935.328,1263.59 936.182,1263.59 Z M 936.182,1258L 956.122,1258C 956.977,1258 957.669,1258.55 957.669,1259.24C 957.669,1259.93 956.977,1260.48 956.122,1260.48L 936.182,1260.48C 935.328,1260.48 934.637,1259.93 934.637,1259.24C 934.637,1258.55 935.328,1258 936.182,1258 Z M 963.513,1252.69L 928.79,1252.69L 928.79,1277.52L 963.513,1277.52" UseLayoutRounding="False"/>
                                    <Path Width="90" Height="43" Canvas.Left="15.667" Canvas.Top="32.09" Stretch="Fill" Fill="#FFFEFEFE" Data="F1 M 908.599,1264L 920.966,1264L 920.966,1247.63C 920.966,1245.34 925.942,1243.49 928.791,1243.49L 963.514,1243.49C 966.362,1243.49 971.336,1245.34 971.336,1247.63L 971.336,1264L 983.602,1264C 987.706,1264 991.028,1261.21 991.028,1257.78L 991.028,1227.32C 991.028,1223.88 987.706,1221.09 983.602,1221.09L 968.67,1221.09L 968.67,1231.44C 968.67,1233.73 966.362,1235.58 963.514,1235.58L 928.791,1235.58C 925.942,1235.58 923.632,1233.73 923.632,1231.44L 923.632,1221.09L 908.599,1221.09C 904.496,1221.09 901.172,1223.88 901.172,1227.32L 901.172,1257.78C 901.172,1261.21 904.496,1264 908.599,1264 Z " UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="PreviousHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Height" Value="30"/>
      <Setter Property="Width" Value="30"/>
      <Setter Property="Content" Value=""/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="100" Height="100">
                                    <Rectangle Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="None" Fill="#FFFEFEFE" Stroke="#FFFEFEFE" Data="M 85,15 L 85,85 L 15,50 L 85,15 Z" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="NextHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Height" Value="30"/>
      <Setter Property="Width" Value="30"/>
      <Setter Property="Content" Value=""/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="100" Height="100">
                                    <Rectangle Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="None" Fill="#FFFEFEFE" Stroke="#FFFEFEFE" Data="M 15,15 L 15,85 L 85,50 L 15,15 Z" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="LastHyperlinkButton" TargetType="HyperlinkButton" BasedOn="{StaticResource EditHyperlinkButton}">
      <Setter Property="Height" Value="30"/>
      <Setter Property="Width" Value="30"/>
      <Setter Property="Content" Value=""/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="HyperlinkButton">
               <Grid Background="{TemplateBinding Background}" Cursor="{TemplateBinding Cursor}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="DisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0"
                                                             Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="UnderlineTextBlock">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <TextBlock x:Name="UnderlineTextBlock" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0" Text="{TemplateBinding Content}" TextDecorations="Underline" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  <TextBlock x:Name="DisabledOverlay" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledForegroundBrush}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="35,3,0,0"  Text="{TemplateBinding Content}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1"/>
                  <ContentControl>
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <StackPanel Orientation="Horizontal">
                           <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                              <Viewbox>
                                 <Canvas Width="100" Height="100">
                                    <Rectangle Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                                    <Path Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="None" Fill="#FFFEFEFE" Stroke="#FFFEFEFE" Data="M 15,15 L 15,85 L 80,50 L 15,15 Z" UseLayoutRounding="False"/>
                                    <Path Width="100" Height="100" Canvas.Left="0" Canvas.Top="0" Stretch="None" Fill="#FFFEFEFE" Stroke="#FFFEFEFE" Data="M 80,15 L 80,85 L 90,85 L 90,15 L 80,15 Z" UseLayoutRounding="False"/>
                                 </Canvas>
                              </Viewbox>
                           </Border>
                           <TextBlock Margin="4,3,0,0" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>
                     </ContentPresenter>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Opacity="0" StrokeThickness="1">
                     <Rectangle.Stroke>
                        <SolidColorBrush Color="{StaticResource HighlightLightColor}"/>
                     </Rectangle.Stroke>
                  </Rectangle>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!-- Line Style -->
   <Style x:Name="CoreLineStyleLight" TargetType="Line">
      <Setter Property="X1" Value="1"/>
      <Setter Property="Stroke" Value="{StaticResource HighlightLightBrush}"/>
      <Setter Property="Stretch" Value="Fill" />
      <Setter Property="StrokeThickness" Value="5"/>
      <Setter Property="StrokeEndLineCap" Value="Round"/>
      <Setter Property="StrokeStartLineCap" Value="Round"/>
   </Style>

   <!--TextBlock Style-->
   <!--TextBlock Style-->
   <Style x:Name="CoreTextBlockStyle" TargetType="TextBlock">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Margin" Value="4,4,4,2" />
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
   </Style>
   <Style TargetType="TextBlock" BasedOn="{StaticResource CoreTextBlockStyle}" />

   <!--RichTextBox Style-->
   <Style x:Name="CoreRichTextBoxStyle" TargetType="RichTextBox">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Margin" Value="0,0,0,0" />
   </Style>
   <Style TargetType="RichTextBox" BasedOn="{StaticResource CoreRichTextBoxStyle}" />

   <!--RichTextBlock Style-->
   <Style x:Name="CoreRichTextBlockStyle" TargetType="RichTextBlock">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Margin" Value="0,0,0,0" />
   </Style>
   <Style TargetType="RichTextBlock" BasedOn="{StaticResource CoreRichTextBlockStyle}" />

   <!-- Default style for System.Windows.Controls.RichTextBox -->
   <Style x:Name="CoreRichTextAreaStyle" TargetType="RichTextBox">
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Margin" Value="0,0,0,0" />
      <Setter Property="Padding" Value="2" />
      <Setter Property="BorderBrush">
         <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
               <GradientStop Color="#FFA3AEB9" Offset="0"/>
               <GradientStop Color="#FF8399A9" Offset="0.375"/>
               <GradientStop Color="#FF718597" Offset="0.375"/>
               <GradientStop Color="#FF617584" Offset="1"/>
            </LinearGradientBrush>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="RichTextBox">
               <Grid x:Name="RootElement">
                  <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Opacity="1" Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}">
                     <Border x:Name="MouseOverBorder" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                        <ScrollViewer x:Name="ContentElement" Padding="{TemplateBinding Padding}" BorderThickness="0" IsTabStop="False"  Background="Transparent"/>
                     </Border>
                  </Border>
                  <Border x:Name="DisabledVisualElement" Background="Transparent" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" IsHitTestVisible="False"/>
                  <Border x:Name="FocusVisualElement" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}" Margin="1" Opacity="0" IsHitTestVisible="False"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--ComboBoxItem Style-->
   <Style TargetType="ComboBoxItem">
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Background" Value="{StaticResource TransparentWhiteBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
               <Grid Background="{TemplateBinding Background}" Margin="0,0.5">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value=".65"/>
                              </DoubleAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                                    <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HoverForegroundColor}"/>
                                                </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".55"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected"/>
                        <VisualState x:Name="Selected">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectedRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource HoverForegroundColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="SelectedRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource AccentColorBrush}"/>
                  <Rectangle x:Name="MouseOverRectangle" IsHitTestVisible="False" Opacity="0" Fill="{StaticResource AccentColorBrush}"/>
                  <ContentControl >
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource NormalForegroundColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       Content="{TemplateBinding Content}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       Margin="{TemplateBinding Padding}" />
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource AccentColorBrush}" StrokeThickness="2" Visibility="Collapsed"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--ComboBox Style-->
   <Style x:Key="CoreComboBoxStyle"  TargetType="ComboBox" >
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.75"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock Text=" "/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border Effect="{StaticResource DropShadowBrush}"
                             x:Name="PopupBorder"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             HorizontalAlignment="Stretch"
                             Height="Auto"
                             Width="{TemplateBinding ActualWidth}"
                             BorderBrush="{StaticResource ComboBoxPopupBrush}"
                             Background="{StaticResource WhiteBrush}">

                                <ScrollViewer x:Name="ScrollViewer" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      BorderThickness="0"
                                      Padding="1"
                                      VerticalScrollBarVisibility="Auto"
                                      HorizontalScrollBarVisibility="Disabled">
                           <ItemsPresenter/>
                        </ScrollViewer>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}" />

   <!--PassWordBox Style-->
   <Style TargetType="PasswordBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="MinHeight" Value="26"/>
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="Foreground">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource TextBoxText}" />
         </Setter.Value>
      </Setter>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="PasswordBox">
               <Grid x:Name="RootElement">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="0.8" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder" d:IsOptimized="True"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To=".5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisualElement"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Opacity="1">
                     <Border x:Name="ContentElement" Margin="{TemplateBinding Padding}" Padding="4,0,3,2" VerticalAlignment="Center"/>
                  </Border>
                  <Border x:Name="DisabledVisualElement" BorderBrush="{StaticResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
                  <Border x:Name="MouseOverBorder" BorderBrush="{StaticResource TextBoxMouseOverBorderBrush}" BorderThickness="1" Opacity="0"/>
                  <Border x:Name="FocusVisualElement" BorderBrush="{StaticResource TextBoxMouseOverBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Opacity="0">
                     <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                  </Border>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--TextBox Style-->
   <Style x:Name="CoreTextBoxStyle" TargetType="TextBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
      <Setter Property="Margin" Value="0,4"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="MinHeight" Value="26"/>
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="TextBox">
               <Grid x:Name="RootElement">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="ReadOnly">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused">
                           <Storyboard/>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="Base" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="1" Fill="{StaticResource ControlBackgroundBrush}" />
                  <Rectangle x:Name="FocusRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                  <Grid Margin="0,1,0,0">
                     <Border x:Name="ReadOnlyVisualElement" Background="{StaticResource ReadOnlyBrush}" Opacity="0"/>
                     <Grid >
                        <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Margin="4,0,2,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{x:Null}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalScrollBarVisibility="Auto" />
                     </Grid>
                  </Grid>
                  <Rectangle x:Name="DisabledVisualElement" Stroke="{StaticResource ControlsDisabledBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Name="CoreTextBoxStyleNotes" TargetType="TextBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="TextWrapping" Value="Wrap"/>
      <Setter Property="Margin" Value="0,4"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="MinHeight" Value="26"/>
      <Setter Property="Background" Value="#FFFEDF00" />
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="TextBox">
               <Grid x:Name="RootElement">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="ReadOnly">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused">
                           <Storyboard/>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="Base" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="1" Fill="#FFFEDF00"  />
                  <Rectangle x:Name="FocusRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                  <Grid Margin="0,1,0,0">
                     <Border x:Name="ReadOnlyVisualElement" Background="{StaticResource ReadOnlyBrush}" Opacity="0"/>
                     <Grid >
                        <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Margin="4,0,2,2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="{x:Null}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                     </Grid>
                  </Grid>
                  <Rectangle x:Name="DisabledVisualElement" Stroke="{StaticResource ControlsDisabledBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="TextBox" BasedOn="{StaticResource CoreTextBoxStyle}" />

   <!--ScrollBar Style-->
   <Style TargetType="ScrollBar">
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="MinWidth" Value="20"/>
      <Setter Property="MinHeight" Value="20"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ScrollBar">
               <Grid x:Name="Root">
                  <Grid.Resources>
                     <ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
                        <Grid x:Name="Root" Background="Transparent">
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                        </Grid>
                     </ControlTemplate>
                     <ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
                        <Grid x:Name="Root">
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                                 <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverPath">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Blur">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Pressed">
                                    <Storyboard/>
                                 </VisualState>
                                 <VisualState x:Name="Disabled">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                           <Path Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Height="6" Stretch="Uniform" Width="4">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource Gray2}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="HoverPath" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Height="6" Stretch="Uniform" Width="4" UseLayoutRounding="False" Opacity="0" Margin="1,1,0,0">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="Blur" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z " Height="6" Stretch="Uniform" Width="4" UseLayoutRounding="False" Opacity="0" Margin="1,1,0,0">
                              <Path.Effect>
                                 <BlurEffect/>
                              </Path.Effect>
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                           <Rectangle x:Name="DisabledElement" Fill="{StaticResource WhiteColorBrush}" Opacity="0" RadiusY="2" RadiusX="2"/>
                        </Grid>
                     </ControlTemplate>
                     <ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
                        <Grid x:Name="Root">
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                                 <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverPath">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Blur">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Pressed">
                                    <Storyboard/>
                                 </VisualState>
                                 <VisualState x:Name="Disabled">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                           <Path Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " Height="6" Stretch="Uniform" Width="4">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource Gray2}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="HoverPath" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " Height="6" Stretch="Uniform" Width="4" UseLayoutRounding="False" Opacity="0" Margin="0,1,0,0">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="Blur" Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z " Height="6" Stretch="Uniform" Width="4" UseLayoutRounding="False" Opacity="0" Margin="0,1,0,0">
                              <Path.Effect>
                                 <BlurEffect/>
                              </Path.Effect>
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                        </Grid>
                     </ControlTemplate>
                     <ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
                        <Grid x:Name="Root">
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                                 <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverPath">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Blur">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Pressed">
                                    <Storyboard/>
                                 </VisualState>
                                 <VisualState x:Name="Disabled">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                           <Path Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " Height="4" Stretch="Uniform" Width="6">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="ButtonColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="HoverPath" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " Height="4" Stretch="Uniform" Width="6" UseLayoutRounding="False" Opacity="0" Margin="1,0,0,0">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="Blur" Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z " Height="4" Stretch="Uniform" Width="6" UseLayoutRounding="False" Opacity="0" Margin="1,0,0,0">
                              <Path.Effect>
                                 <BlurEffect/>
                              </Path.Effect>
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                           <Rectangle x:Name="DisabledElement" Fill="{StaticResource WhiteColorBrush}" Opacity="0" RadiusY="2" RadiusX="2"/>
                        </Grid>
                     </ControlTemplate>
                     <ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
                        <Grid x:Name="Root">
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                                 <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverPath">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Blur">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Pressed">
                                    <Storyboard/>
                                 </VisualState>
                                 <VisualState x:Name="Disabled">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.5"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                           <Rectangle x:Name="Background" Fill="{StaticResource ControlBackgroundBrush}" Opacity="0" RadiusY="2" RadiusX="2" StrokeThickness="1"/>
                           <Rectangle x:Name="BackgroundMouseOver" Fill="{StaticResource HighlightBrush}" Opacity="0" RadiusY="2" RadiusX="2" />
                           <Rectangle x:Name="BackgroundPressed" Fill="{StaticResource HighlightBrush}" Opacity="0" RadiusY="2" RadiusX="2" />
                           <Rectangle x:Name="BackgroundGradient" Fill="{StaticResource TransparentWhiteBrush}" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource ControlBackgroundBrush}" StrokeThickness="1"/>
                           <Rectangle x:Name="Highlight" IsHitTestVisible="false" Margin="1" Opacity="0" RadiusY="1" RadiusX="1" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1"/>
                           <Path Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="4" Stretch="Uniform" Width="6">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource Gray2}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="HoverPath" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="4" Stretch="Uniform" Width="6" UseLayoutRounding="False" Opacity="0" Margin="1,0,0,0">
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                           <Path x:Name="Blur" Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z " Height="4" Stretch="Uniform" Width="6" UseLayoutRounding="False" Opacity="0" Margin="1,0,0,0">
                              <Path.Effect>
                                 <BlurEffect/>
                              </Path.Effect>
                              <Path.Fill>
                                 <SolidColorBrush Color="{StaticResource BlackColor}"/>
                              </Path.Fill>
                           </Path>
                        </Grid>
                     </ControlTemplate>
                     <ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
                        <Grid>
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                                 <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Pressed">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Disabled">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual">
                                          <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                           <Grid x:Name="ThumbVisual" Margin="1,0,1,0">
                              <Rectangle x:Name="Background" StrokeThickness="1" Fill="{StaticResource ThumbBrush}" />
                              <Rectangle x:Name="MouseOverRectangle" StrokeThickness="1" Opacity="0" Fill="{StaticResource BlackBrush}" />
                              <Rectangle x:Name="PressedRectangle" StrokeThickness="1" Opacity="0" Fill="{StaticResource BlackBrush}" />
                           </Grid>
                        </Grid>
                     </ControlTemplate>
                     <ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
                        <Grid>
                           <VisualStateManager.VisualStateGroups>
                              <VisualStateGroup x:Name="CommonStates">
                                 <VisualState x:Name="Normal"/>
                                 <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Pressed">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
                                          <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                                 <VisualState x:Name="Disabled">
                                    <Storyboard>
                                       <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ThumbVisual">
                                          <SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                       </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </VisualState>
                              </VisualStateGroup>
                           </VisualStateManager.VisualStateGroups>
                           <Grid x:Name="ThumbVisual" Margin="0,1,0,1">
                              <Rectangle x:Name="Background" StrokeThickness="1" Fill="{StaticResource ThumbBrush}" />
                              <Rectangle x:Name="MouseOverRectangle" StrokeThickness="1" Opacity="0" Fill="{StaticResource BlackBrush}" />
                              <Rectangle x:Name="PressedRectangle" StrokeThickness="1" Opacity="0" Fill="{StaticResource BlackBrush}" />
                           </Grid>
                        </Grid>
                     </ControlTemplate>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid x:Name="HorizontalRoot" Height="11">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                     </Grid.ColumnDefinitions>
                     <Border BorderThickness="0,0,0,1" Grid.RowSpan="1" Margin="0,0,0,-1" Grid.ColumnSpan="5" Visibility="Collapsed" >
                        <Border.BorderBrush>
                           <SolidColorBrush Color="{StaticResource Gray4}"/>
                        </Border.BorderBrush>
                     </Border>
                     <RepeatButton x:Name="HorizontalSmallDecrease" Grid.Column="0" IsTabStop="False" Interval="50" Margin="1" Template="{StaticResource HorizontalDecrementTemplate}" Width="16"/>
                     <RepeatButton x:Name="HorizontalLargeDecrease" Grid.Column="1" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}" Width="0"/>
                     <Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Grid.Column="2" MinWidth="18" Template="{StaticResource HorizontalThumbTemplate}" Width="18"/>
                     <RepeatButton x:Name="HorizontalLargeIncrease" Grid.Column="3" IsTabStop="False" Interval="50" Template="{StaticResource RepeatButtonTemplate}"/>
                     <RepeatButton x:Name="HorizontalSmallIncrease" Grid.Column="4" IsTabStop="False" Interval="50" Margin="1" Template="{StaticResource HorizontalIncrementTemplate}" Width="16"/>
                  </Grid>
                  <Grid x:Name="VerticalRoot" Visibility="Collapsed" Width="11">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                     </Grid.RowDefinitions>
                     <Border BorderThickness="0,0,1,0" Margin="0,0,-1,0" Grid.RowSpan="5" Visibility="Collapsed" >
                        <Border.BorderBrush>
                           <SolidColorBrush Color="{StaticResource Gray4}"/>
                        </Border.BorderBrush>
                     </Border>
                     <RepeatButton x:Name="VerticalSmallDecrease" Height="16" IsTabStop="False" Interval="50" Margin="1" Grid.Row="0" Template="{StaticResource VerticalDecrementTemplate}"/>
                     <RepeatButton x:Name="VerticalLargeDecrease" Height="0" IsTabStop="False" Interval="50" Grid.Row="1" Template="{StaticResource RepeatButtonTemplate}"/>
                     <Thumb x:Name="VerticalThumb" Height="18" MinHeight="18" Grid.Row="2" Template="{StaticResource VerticalThumbTemplate}"/>
                     <RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Interval="50" Grid.Row="3" Template="{StaticResource RepeatButtonTemplate}"/>
                     <RepeatButton x:Name="VerticalSmallIncrease" Height="16" IsTabStop="False" Interval="50" Margin="1" Grid.Row="4" Template="{StaticResource VerticalIncrementTemplate}"/>
                  </Grid>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--ScrollViewer Style-->
   <Style TargetType="ScrollViewer">
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
      <Setter Property="Padding" Value="4"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray4}"/>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ScrollViewer">
               <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                  <Grid Background="{TemplateBinding Background}">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                     </Grid.ColumnDefinitions>
                     <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                     </Grid.RowDefinitions>
                     <ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Margin="{TemplateBinding Padding}"/>
                     <Rectangle Grid.Column="1" Grid.Row="1" Visibility="Collapsed"/>
                     <ScrollBar x:Name="VerticalScrollBar" Grid.Column="1" IsTabStop="False" Maximum="{TemplateBinding ScrollableHeight}" Margin="0,-1,-3,-1" Minimum="0" Orientation="Vertical" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" ViewportSize="{TemplateBinding ViewportHeight}" Width="22"/>
                     <ScrollBar x:Name="HorizontalScrollBar" Grid.Column="0" Height="22" IsTabStop="False" Maximum="{TemplateBinding ScrollableWidth}" Margin="-1,0,-1,-3" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                  </Grid>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--ToggleButton Style-->
   <Style x:Name="CoreToggleButtonStyle" TargetType="ToggleButton">
      <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="Padding" Value="5,6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteColorBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                  <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Border x:Name="PressedBorder"  Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Border x:Name="CheckedBorder"  Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="CheckedRectangle" Stroke="{StaticResource GrayBrush1}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="CheckedInnerRectangle" Fill="{StaticResource GrayBrush2}" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource GrayBrush2}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="ToggleButton">
      <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="Padding" Value="5,6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ToggleButton">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed"/>
                        <VisualState x:Name="Disabled"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked"/>
                        <VisualState x:Name="Unchecked"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                  <ContentPresenter x:Name="contentPresenter" Margin="1" d:LayoutOverrides="Width, Height">
                     <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource HighlightBrush}" Background="{StaticResource HighlightBrush}">
                        <Viewbox>
                           <Canvas Width="121.333" Height="121.333">
                              <Rectangle Width="121.333" Height="121.333" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" Fill="{StaticResource HighlightBrush}"/>
                              <Path Width="55" Height="55" Canvas.Left="29.638" Canvas.Top="34.061" Stretch="Fill" Fill="#FFFFFFFF" Data="M 794.759,1112.58L 832.161,1075.18C 833.723,1073.62 836.111,1073.48 837.495,1074.86L 847.842,1085.21C 849.226,1086.59 849.081,1088.98 847.518,1090.54L 810.116,1127.94C 808.554,1129.5 806.166,1129.64 804.783,1128.26L 794.435,1117.91C 793.052,1116.53 793.197,1114.14 794.759,1112.58 Z M 807.243,1123.02L 842.596,1087.67C 843.227,1087.04 844.191,1086.98 844.749,1087.54L 844.749,1087.54C 845.308,1088.1 845.249,1089.06 844.618,1089.69L 809.266,1125.04C 808.635,1125.67 807.671,1125.73 807.113,1125.17L 807.113,1125.17C 806.554,1124.61 806.613,1123.65 807.243,1123.02 Z " UseLayoutRounding="False"/>
                              <Path Width="22" Height="22" Canvas.Left="74.126" Canvas.Top="22.575" Stretch="Fill" Fill="#FFFFFFFF" Data="M 839.386,1067.95L 843.509,1063.83C 845.071,1062.27 847.459,1062.12 848.842,1063.51L 859.19,1073.86C 860.574,1075.24 860.429,1077.63 858.866,1079.19L 854.743,1083.31C 853.181,1084.87 850.793,1085.02 849.41,1083.63L 839.062,1073.28C 837.679,1071.9 837.824,1069.51 839.386,1067.95 Z M 841.51,1068.12L 841.51,1068.12C 841.667,1067.97 841.908,1067.95 842.047,1068.09L 854.326,1080.37C 854.465,1080.51 854.45,1080.75 854.293,1080.91L 854.293,1080.91C 854.136,1081.07 853.895,1081.08 853.756,1080.94L 841.478,1068.66C 841.338,1068.52 841.353,1068.28 841.51,1068.12 Z M 840.561,1069.07L 840.561,1069.07C 840.719,1068.91 840.959,1068.9 841.098,1069.04L 853.377,1081.32C 853.516,1081.46 853.501,1081.7 853.344,1081.86L 853.344,1081.86C 853.187,1082.02 852.947,1082.03 852.807,1081.89L 840.529,1069.61C 840.39,1069.47 840.404,1069.23 840.561,1069.07 Z M 839.613,1070.02L 839.613,1070.02C 839.77,1069.86 840.01,1069.85 840.149,1069.99L 852.428,1082.27C 852.567,1082.41 852.553,1082.65 852.395,1082.81L 852.395,1082.81C 852.238,1082.96 851.998,1082.98 851.859,1082.84L 839.58,1070.56C 839.441,1070.42 839.455,1070.18 839.613,1070.02 Z " UseLayoutRounding="False"/>
                              <Path Width="18" Height="18" Canvas.Left="21.359" Canvas.Top="79.317" Stretch="Fill" Fill="#FFFFFFFF" Data="M 786.891,1120.44C 788.454,1118.88 790.748,1118.64 792.017,1119.91L 802.781,1130.68C 804.049,1131.95 803.811,1134.24 802.249,1135.81L 785.121,1137.53L 786.891,1120.44 Z M 788.086,1134.28L 798.951,1132.66C 799.401,1132.59 799.777,1132.89 799.79,1133.34L 799.79,1133.34C 799.803,1133.79 799.449,1134.2 798.998,1134.27L 788.134,1135.9C 787.684,1135.96 787.308,1135.66 787.295,1135.21L 787.295,1135.21C 787.281,1134.77 787.636,1134.35 788.086,1134.28 Z " UseLayoutRounding="False"/>
                           </Canvas>
                        </Viewbox>
                     </Border>
                  </ContentPresenter>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--Tooltip Style-->
   <Style x:Name="CoreToolTipStyle" TargetType="ToolTip">
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource WhiteBrush}"/>
      <Setter Property="Padding" Value="3,0,3,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource ItemSelectedBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ToolTip">
               <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource HighlightLightBrush}" Effect="{StaticResource DropShadowBrush}" Opacity="0">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="OpenStates">
                        <VisualStateGroup.Transitions>
                           <VisualTransition From="Open" GeneratedDuration="0:0:0.3" To="Closed"/>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Closed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Open">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border Padding="{TemplateBinding Padding}">
                     <Border.Resources>
                        <Storyboard x:Key="Visible State"/>
                        <Storyboard x:Key="Normal State"/>
                     </Border.Resources>
                     <Border.Background>
                        <StaticResource ResourceKey="HighlightLightBrush"/>
                     </Border.Background>
                     <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
                  </Border>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="ToolTip" BasedOn="{StaticResource CoreToolTipStyle}" />

   <!--RepeatButton Style-->
   <Style TargetType="RepeatButton">
      <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="Padding" Value="5,6"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="RepeatButton">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                  <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Border x:Name="PressedBorder"  Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--RadioButton Style-->
   <Style x:Name="CoreRadioButtonStyle" TargetType="RadioButton">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="RadioButton">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverEllipse">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Gray2}"/>
                              </ColorAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard/>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusElipse" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusInnerElipse" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="16"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,4,0,0">
                     <Grid x:Name="grid" Height="15" Width="15" Opacity="0.7">
                        <Ellipse x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Margin="1" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Ellipse x:Name="MouseOverEllipse" Stroke="{StaticResource CheckBoxMouseOverBrush}" Margin="1" Opacity="0" />
                        <Ellipse x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Ellipse x:Name="FocusElipse"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Ellipse x:Name="FocusInnerElipse"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                        <Ellipse x:Name="PressedEllipse" Stroke="{StaticResource BlackBrush}" Margin="1" Opacity="0" />
                        <Ellipse x:Name="CheckIcon" Fill="{StaticResource BlackBrush}" Height="7" Opacity="0" Width="7"/>
                        <Ellipse x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}"  Opacity="0" />
                        <Grid x:Name="ValidationErrorElement" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                           <ToolTipService.ToolTip>
                              <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                                 <ToolTip.Triggers>
                                    <EventTrigger RoutedEvent="Canvas.Loaded">
                                       <BeginStoryboard>
                                          <Storyboard>
                                             <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                   <DiscreteObjectKeyFrame.Value>
                                                      <sys:Boolean>true</sys:Boolean>
                                                   </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                             </ObjectAnimationUsingKeyFrames>
                                          </Storyboard>
                                       </BeginStoryboard>
                                    </EventTrigger>
                                 </ToolTip.Triggers>
                              </ToolTip>
                           </ToolTipService.ToolTip>
                           <Ellipse Height="14" Stroke="{StaticResource ControlsValidationBrush}" StrokeThickness="1" Width="14"/>
                           <Ellipse Fill="{StaticResource ControlsValidationBrush}" HorizontalAlignment="Right" Height="4" Margin="0,-2,-1,0" VerticalAlignment="Top" Width="4"/>
                           <Ellipse Fill="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-5,-4,0" VerticalAlignment="Top" Width="10"/>
                        </Grid>
                     </Grid>
                  </Grid>
                  <ContentControl Grid.Column="1">
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="RadioButton" BasedOn="{StaticResource CoreRadioButtonStyle}" />

   <!--ProgressBar Style-->
   <Style TargetType="ProgressBar">
      <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
      <Setter Property="Background" Value="{StaticResource GrayBrush4}"/>
      <Setter Property="Maximum" Value="100"/>
      <Setter Property="Height" Value="10"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ProgressBar">
               <Grid x:Name="Root">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Determinate"/>
                        <VisualState x:Name="Indeterminate">
                           <Storyboard RepeatBehavior="Forever">
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="IndeterminateRoot">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DeterminateRoot">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X" Storyboard.TargetName="IndeterminateGradientFill">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                                 <SplineDoubleKeyFrame KeyTime="00:00:.35" Value="20"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ProgressBarTrack" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"/>
                  <Grid x:Name="ProgressBarRootGrid">
                     <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                        <Rectangle x:Name="IndeterminateSolidFill" Margin="{TemplateBinding BorderThickness}" Opacity="1" RenderTransformOrigin="0.5,0.5" StrokeThickness="0" Fill="{StaticResource BrandingBrush}"/>
                        <Rectangle x:Name="IndeterminateGradientFill" Margin="{TemplateBinding BorderThickness}" Opacity="0.7" StrokeThickness="1">
                           <Rectangle.Fill>
                              <LinearGradientBrush EndPoint="0,1" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1">
                                 <LinearGradientBrush.Transform>
                                    <TransformGroup>
                                       <TranslateTransform X="0"/>
                                       <SkewTransform AngleX="-30"/>
                                    </TransformGroup>
                                 </LinearGradientBrush.Transform>
                                 <GradientStop Color="{StaticResource ProgressIndeterminateColor1}" Offset="0"/>
                                 <GradientStop Color="{StaticResource ProgressIndeterminateColor2}" Offset="0.651"/>
                                 <GradientStop Color="{StaticResource ProgressIndeterminateColor3}" Offset="0.093"/>
                                 <GradientStop Color="{StaticResource ProgressIndeterminateColor4}" Offset="0.548"/>
                              </LinearGradientBrush>
                           </Rectangle.Fill>
                        </Rectangle>
                     </Grid>
                     <Grid x:Name="DeterminateRoot" Margin="1">
                        <Border x:Name="ProgressBarIndicator" Background="{StaticResource BrandingBrush}" HorizontalAlignment="Left" Margin="-1">
                           <Rectangle x:Name="GradientFill" Opacity="0.7" Visibility="Collapsed">
                              <Rectangle.Fill>
                                 <LinearGradientBrush EndPoint="0,1" MappingMode="Absolute" SpreadMethod="Repeat" StartPoint="20,1">
                                    <LinearGradientBrush.Transform>
                                       <TransformGroup>
                                          <TranslateTransform X="0"/>
                                          <SkewTransform AngleX="-30"/>
                                       </TransformGroup>
                                    </LinearGradientBrush.Transform>
                                    <GradientStop Color="{StaticResource ProgressIndeterminateColor1}" Offset="0"/>
                                    <GradientStop Color="{StaticResource ProgressIndeterminateColor2}" Offset="0.651"/>
                                    <GradientStop Color="{StaticResource ProgressIndeterminateColor3}" Offset="0.093"/>
                                    <GradientStop Color="{StaticResource ProgressIndeterminateColor4}" Offset="0.548"/>
                                 </LinearGradientBrush>
                              </Rectangle.Fill>
                           </Rectangle>
                        </Border>
                     </Grid>
                  </Grid>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="BorderThickness" Value="1"/>
   </Style>

   <!--CheckBox Style-->
   <Style x:Name="CoreCheckBoxStyle" TargetType="CheckBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
      <Setter Property="MinWidth" Value="100"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
               <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Gray2}"/>
                              </ColorAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusInnerRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="16"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid VerticalAlignment="Top">
                     <Grid x:Name="grid" Height="14" Width="14" Opacity="0.7" Margin="0,4,0,0">
                        <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="MouseOverRectangle" Stroke="{StaticResource CheckBoxMouseOverBrush}" Opacity="0" />
                        <Rectangle x:Name="PressedRectangle" Stroke="{StaticResource BlackBrush}" Opacity="0" />
                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />

                        <Path Opacity="0" x:Name="CheckIcon" Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883" HorizontalAlignment="Center" Height="7.6" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Center" Width="8.9" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2"/>
                        <Rectangle x:Name="IndeterminateIcon" Height="8" Width="8" Opacity="0">
                           <Rectangle.Fill>
                              <SolidColorBrush Color="{StaticResource Gray3}"/>
                           </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0" RadiusY="1" RadiusX="1" />
                     </Grid>
                     <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                        <ToolTipService.ToolTip>
                           <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                              <ToolTip.Triggers>
                                 <EventTrigger RoutedEvent="Canvas.Loaded">
                                    <BeginStoryboard>
                                       <Storyboard>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                             <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                   <sys:Boolean>true</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                             </DiscreteObjectKeyFrame>
                                          </ObjectAnimationUsingKeyFrames>
                                       </Storyboard>
                                    </BeginStoryboard>
                                 </EventTrigger>
                              </ToolTip.Triggers>
                           </ToolTip>
                        </ToolTipService.ToolTip>
                        <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                           <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush5}" Margin="0,3,0,0"/>
                           <Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="{StaticResource WhiteColorBrush}" Margin="0,3,0,0"/>
                        </Grid>
                     </Border>
                  </Grid>
                  <ContentControl Grid.Column="1">
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Name="CoreCheckBoxStyleGreen" TargetType="CheckBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
      <Setter Property="MinWidth" Value="100"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
               <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource Gray2}"/>
                              </ColorAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusInnerRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="16"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid VerticalAlignment="Top">
                     <Grid x:Name="grid" Height="14" Width="14" Opacity="0.7" Margin="0,4,0,0">
                        <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="MouseOverRectangle" Stroke="{StaticResource CheckBoxMouseOverBrush}" Opacity="0" />
                        <Rectangle x:Name="PressedRectangle" Stroke="{StaticResource BlackBrush}" Opacity="0" />
                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />

                        <Path Opacity="0" x:Name="CheckIcon" Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883" HorizontalAlignment="Center" Height="7.6" Stretch="Fill" Stroke="{StaticResource OasisMoneyColorBrush}" UseLayoutRounding="False" VerticalAlignment="Center" Width="8.9" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2"/>
                        <Rectangle x:Name="IndeterminateIcon" Height="8" Width="8" Opacity="0">
                           <Rectangle.Fill>
                              <SolidColorBrush Color="{StaticResource Gray3}"/>
                           </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0" RadiusY="1" RadiusX="1" />
                     </Grid>
                     <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                        <ToolTipService.ToolTip>
                           <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                              <ToolTip.Triggers>
                                 <EventTrigger RoutedEvent="Canvas.Loaded">
                                    <BeginStoryboard>
                                       <Storyboard>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                             <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                   <sys:Boolean>true</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                             </DiscreteObjectKeyFrame>
                                          </ObjectAnimationUsingKeyFrames>
                                       </Storyboard>
                                    </BeginStoryboard>
                                 </EventTrigger>
                              </ToolTip.Triggers>
                           </ToolTip>
                        </ToolTipService.ToolTip>
                        <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                           <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush5}" Margin="0,3,0,0"/>
                           <Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="{StaticResource WhiteColorBrush}" Margin="0,3,0,0"/>
                        </Grid>
                     </Border>
                  </Grid>
                  <ContentControl Grid.Column="1">
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Name="CoreRehabCheckBoxStyle" TargetType="CheckBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
      <Setter Property="MinWidth" Value="100"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
               <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="FontWeight" Storyboard.TargetName="contentControlPresenter">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <FontWeight>Bold</FontWeight>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <!--<ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor" Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource WhiteColor}"/>
                                        </ColorAnimationUsingKeyFrames>-->
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusInnerRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="16"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid VerticalAlignment="Top">
                     <Grid x:Name="grid" Height="14" Width="14" Opacity="0.7" Margin="0,4,0,0">
                        <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="MouseOverRectangle" Stroke="{StaticResource CheckBoxMouseOverBrush}" Opacity="0" />
                        <Rectangle x:Name="PressedRectangle" Stroke="{StaticResource BlackBrush}" Opacity="0" />
                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />

                        <Path Opacity="0" x:Name="CheckIcon" Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883" HorizontalAlignment="Center" Height="7.6" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Center" Width="8.9" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2"/>
                        <Rectangle x:Name="IndeterminateIcon" Height="8" Width="8" Opacity="0">
                           <Rectangle.Fill>
                              <SolidColorBrush Color="{StaticResource Gray3}"/>
                           </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0" RadiusY="1" RadiusX="1" />
                     </Grid>
                     <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                        <ToolTipService.ToolTip>
                           <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                              <ToolTip.Triggers>
                                 <EventTrigger RoutedEvent="Canvas.Loaded">
                                    <BeginStoryboard>
                                       <Storyboard>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                             <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                   <sys:Boolean>true</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                             </DiscreteObjectKeyFrame>
                                          </ObjectAnimationUsingKeyFrames>
                                       </Storyboard>
                                    </BeginStoryboard>
                                 </EventTrigger>
                              </ToolTip.Triggers>
                           </ToolTip>
                        </ToolTipService.ToolTip>
                        <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                           <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush5}" Margin="0,3,0,0"/>
                           <Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="{StaticResource WhiteColorBrush}" Margin="0,3,0,0"/>
                        </Grid>
                     </Border>
                  </Grid>
                  <ContentControl Grid.Column="1"  x:Name="contentControlPresenter" >
                     <ContentControl.Foreground>
                        <SolidColorBrush x:Name="ContentPresenterWrapperColor" Color="{StaticResource HighlightDarkColor}" />
                     </ContentControl.Foreground>
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="CheckBox" BasedOn="{StaticResource CoreCheckBoxStyle}" />
   <Style x:Name="CoreOasisCheckBoxStyle" TargetType="CheckBox" BasedOn="{StaticResource CoreCheckBoxStyle}" >
      <Setter Property="Margin" Value="0,8"/>
   </Style>
   <Style x:Name="CoreCheckBoxStyleNotes" TargetType="CheckBox" BasedOn="{StaticResource CoreCheckBoxStyle}" >
      <Setter Property="Background" Value="#FFFEDF00" />
   </Style>

   <!-- Checkbox with Content color = foreground color -->
   <Style x:Name="CoreCheckBoxForegroundStyle" TargetType="CheckBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="Background" Value="{StaticResource CheckBoxBackgroundBrush}"/>
      <Setter Property="MinWidth" Value="100"/>
      <Setter Property="Foreground" Value="Red"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Padding" Value="4,1,0,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush" Value="{StaticResource CheckBoxBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="CheckBox">
               <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="grid">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateIcon">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="FocusInnerRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid.ColumnDefinitions>
                     <ColumnDefinition Width="16"/>
                     <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid VerticalAlignment="Top">
                     <Grid x:Name="grid" Height="14" Width="14" Opacity="0.7" Margin="0,4,0,0">
                        <Rectangle x:Name="Background" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="MouseOverRectangle" Stroke="{StaticResource CheckBoxMouseOverBrush}" Opacity="0" />
                        <Rectangle x:Name="PressedRectangle" Stroke="{StaticResource BlackBrush}" Opacity="0" />
                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />

                        <Path Opacity="0" x:Name="CheckIcon" Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883" HorizontalAlignment="Center" Height="7.6" Stretch="Fill" Stroke="Black" UseLayoutRounding="False" VerticalAlignment="Center" Width="8.9" StrokeStartLineCap="Triangle" StrokeEndLineCap="Triangle" StrokeThickness="2"/>
                        <Rectangle x:Name="IndeterminateIcon" Height="8" Width="8" Opacity="0">
                           <Rectangle.Fill>
                              <SolidColorBrush Color="{StaticResource Gray3}"/>
                           </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0" RadiusY="1" RadiusX="1" />
                     </Grid>
                     <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="1" Margin="1" ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed">
                        <ToolTipService.ToolTip>
                           <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                              <ToolTip.Triggers>
                                 <EventTrigger RoutedEvent="Canvas.Loaded">
                                    <BeginStoryboard>
                                       <Storyboard>
                                          <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                             <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                   <sys:Boolean>true</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                             </DiscreteObjectKeyFrame>
                                          </ObjectAnimationUsingKeyFrames>
                                       </Storyboard>
                                    </BeginStoryboard>
                                 </EventTrigger>
                              </ToolTip.Triggers>
                           </ToolTip>
                        </ToolTipService.ToolTip>
                        <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                           <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z" Fill="{StaticResource ValidationBrush5}" Margin="0,3,0,0"/>
                           <Path Data="M 0,0 L2,0 L 7,5 L7,7" Fill="{StaticResource WhiteColorBrush}" Margin="0,3,0,0"/>
                        </Grid>
                     </Border>
                  </Grid>
                  <ContentControl Grid.Column="1" Foreground="{TemplateBinding Foreground}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                  </ContentControl>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--ListBoxItem Style-->
   <Style x:Name="CoreListBoxItemStyle" TargetType="ListBoxItem">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="10"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
               <Grid Background="{TemplateBinding Background}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected"/>
                        <VisualState x:Name="Selected">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="SelectedUnfocused">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor3"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor4" />
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" />-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="fillColor" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor2" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor3" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor4" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="7"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Name="CoreListBoxItemStyleRehab" TargetType="ListBoxItem">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
               <Grid Background="{TemplateBinding Background}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected"/>
                        <VisualState x:Name="Selected">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="SelectedUnfocused">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor3"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor4" />
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" />-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="fillColor" Fill="{StaticResource AccentColorBrushRehab}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor2" Fill="{StaticResource AccentColorBrushRehab}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor3" Fill="{StaticResource AccentColorBrushRehab}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor4" Fill="{StaticResource AccentColorBrushRehab}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <ContentControl x:Name="contentControl"  Padding="0" Margin="0,0,0,0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource GoalHighlightBrush}" StrokeThickness="0" Visibility="Collapsed"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Name="CoreListBoxItemStyleShort" TargetType="ListBoxItem">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="2"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
               <Grid Background="{TemplateBinding Background}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected"/>
                        <VisualState x:Name="Selected">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="SelectedUnfocused">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor3"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor4" />
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" />-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="fillColor" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor2" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor3" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor4" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style TargetType="ListBoxItem" BasedOn="{StaticResource CoreListBoxItemStyle}" />
   <Style x:Name="CoreMultiListBoxItemStyle" TargetType="ListBoxItem">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="10"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
               <Grid Background="{TemplateBinding Background}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                              <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected"/>
                        <VisualState x:Name="Selected">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="SelectedUnfocused">
                           <Storyboard>
                              <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="fillColorU" Fill="White"   IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor2" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor3" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor4" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="7"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Name="NoSelectListBoxItemStyle" TargetType="ListBoxItem">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Padding" Value="10"/>
      <Setter Property="Margin" Value="0"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Local"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBoxItem">
               <Grid Background="{TemplateBinding Background}">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <!--<Storyboard>
                                        <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                                    </Storyboard>-->
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected"/>
                        <VisualState x:Name="Selected">
                           <!--<Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                                    </Storyboard>-->
                        </VisualState>
                        <VisualState x:Name="SelectedUnfocused">
                           <!--<Storyboard>
                                        <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor3"/>
                                    </Storyboard>-->
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <!--<Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor4" />
                                    </Storyboard>-->
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="fillColor" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor2" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor3" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <Rectangle x:Name="fillColor4" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
                  <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
                     <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Margin}"/>
                  </ContentControl>
                  <Rectangle x:Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!--ListBox Style -->
   <Style TargetType="ListBox">
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource ThumbBrush}"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBox">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                     <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}">
                        <ItemsPresenter/>
                     </ScrollViewer>
                  </Border>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="-1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="-1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="BorderThickness" Value="0"/>
   </Style>

   <ControlTemplate x:Key="ListBoxItemTemplateSectionNavigation" TargetType="ListBoxItem">
      <Grid Background="{TemplateBinding Background}">
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
               <VisualState x:Name="Normal"/>
               <VisualState x:Name="MouseOver">
                  <Storyboard>
                     <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                     <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Disabled">
                  <Storyboard>
                     <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="SelectionStates">
               <VisualState x:Name="Unselected"/>
               <VisualState x:Name="Selected">
                  <Storyboard>
                     <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                     <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                     <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                     <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor3"/>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FocusStates">
               <VisualState x:Name="Focused">
                  <Storyboard>
                     <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                           <DiscreteObjectKeyFrame.Value>
                              <Visibility>Visible</Visibility>
                           </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                     </ObjectAnimationUsingKeyFrames>
                     <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor4" />
                     <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" />-->
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Unfocused"/>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
         <Path x:Name="fillColor" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <Path x:Name="fillColor2" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <Path x:Name="fillColor3" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <Path x:Name="fillColor4" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <!--<Rectangle x:Name="fillColor" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
            <Rectangle x:Name="fillColor2" Fill="{StaticResource ControlBackgroundBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
            <Rectangle x:Name="fillColor3" Fill="{StaticResource ControlBackgroundBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>
            <Rectangle x:Name="fillColor4" Fill="{StaticResource ControlBackgroundBrush}" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1"/>-->
         <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" BorderThickness="5">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="7"/>
         </ContentControl>
         <Path x:Name="FocusVisualElement" Stretch="Fill" Fill="{StaticResource ControlBackgroundBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" Visibility="Collapsed" />
         <!--<Rectangle x:Name="FocusVisualElement" Stroke="{StaticResource ControlBackgroundBrush}" StrokeThickness="1" Visibility="Collapsed"/>-->
      </Grid>
   </ControlTemplate>

   <Style x:Key="ListBoxItemStyleSectionNavigation" TargetType="ListBoxItem">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Width" Value="Auto"/>
      <Setter Property="Template" Value="{StaticResource ListBoxItemTemplateSectionNavigation}" />
   </Style>

   <!--ListBox Style -->
   <Style x:Name="ListBoxSectionNavigation" TargetType="ListBox">
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background" Value="Transparent" />
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="Transparent"/>
      <Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItemStyleSectionNavigation}" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBox">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                     <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}">
                        <ItemsPresenter/>
                     </ScrollViewer>
                  </Border>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="-1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="-1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="BorderThickness" Value="0"/>
   </Style>

   <ControlTemplate x:Key="CoreRightArrowListBoxItemTemplateStyle" TargetType="ListBoxItem">
      <Grid Background="{TemplateBinding Background}">
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
               <VisualState x:Name="Normal"/>
               <VisualState x:Name="MouseOver">
                  <Storyboard>
                     <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor"/>
                     <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>-->
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Disabled">
                  <Storyboard>
                     <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter"/>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="SelectionStates">
               <VisualState x:Name="Unselected"/>
               <VisualState x:Name="Selected">
                  <Storyboard>
                     <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                     <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor2"/>
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="SelectedUnfocused">
                  <Storyboard>
                     <ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl"/>
                     <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor3"/>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="FocusStates">
               <VisualState x:Name="Focused">
                  <Storyboard>
                     <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
                        <DiscreteObjectKeyFrame KeyTime="0">
                           <DiscreteObjectKeyFrame.Value>
                              <Visibility>Visible</Visibility>
                           </DiscreteObjectKeyFrame.Value>
                        </DiscreteObjectKeyFrame>
                     </ObjectAnimationUsingKeyFrames>
                     <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="fillColor4" />
                     <!--<ColorAnimation Duration="0" To="{StaticResource HoverForegroundColor}" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentControl" />-->
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Unfocused"/>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
         <Path x:Name="fillColor" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <Path x:Name="fillColor2" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <Path x:Name="fillColor3" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <Path x:Name="fillColor4" Stretch="Fill" Fill="{StaticResource AccentColorBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" />
         <ContentControl x:Name="contentControl" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="2"/>
         </ContentControl>
         <Path x:Name="FocusVisualElement" Stretch="Fill" Fill="{StaticResource HighlightBrush}" IsHitTestVisible="False" Opacity="0" Data="M0,0 L60,0 L64,5 L60,10 L0,10 z" Visibility="Collapsed" />
      </Grid>
   </ControlTemplate>

   <Style x:Key="CoreRightArrowListBoxItemStyle" TargetType="ListBoxItem">
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="Width" Value="Auto"/>
      <Setter Property="Template" Value="{StaticResource CoreRightArrowListBoxItemTemplateStyle}" />
   </Style>

   <Style x:Name="CoreRightArrowListBox" TargetType="ListBox">
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource ThumbBrush}"/>
      <Setter Property="ItemContainerStyle" Value="{StaticResource CoreRightArrowListBoxItemStyle}" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBox">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                     <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}">
                        <ItemsPresenter/>
                     </ScrollViewer>
                  </Border>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="-1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="-1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="BorderThickness" Value="0"/>
   </Style>
   <!--Slider Style-->
   <Style x:Key="HorizontalSliderThumb" TargetType="Thumb">
      <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Thumb">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard/>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard/>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border Background="{StaticResource BlackBrush}" BorderThickness="0,0,1,0" BorderBrush="{StaticResource ControlBackgroundBrush}" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!--VerticalSliderThumb-->
   <Style x:Key="VerticalSliderThumb" TargetType="Thumb">
      <Setter Property="Background" Value="{StaticResource TransparentWhiteBrush}"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Thumb">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard/>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard/>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused"/>
                        <VisualState x:Name="Unfocused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border Background="{StaticResource BlackBrush}" BorderThickness="0,1,0,0" BorderBrush="{StaticResource ControlBackgroundBrush}" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" Opacity="0"/>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <!--RepeatButtonTemplate-->
   <ControlTemplate x:Key="RepeatButtonTemplate">
      <Grid x:Name="Root" Opacity="0"/>
   </ControlTemplate>
   <!--HorizontalTrackLargeDecrease-->
   <ControlTemplate x:Key="HorizontalTrackLargeDecrease" TargetType="RepeatButton">
      <Grid x:Name="Root" Margin="0,-1,0,0">
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
               <VisualState x:Name="Normal"/>
               <VisualState x:Name="MouseOver"/>
               <VisualState x:Name="Pressed"/>
               <VisualState x:Name="Disabled"/>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
         <Rectangle Height="3" Margin="0,1,0,0">
            <Rectangle.Fill>
               <SolidColorBrush Color="{StaticResource BlackColor}"/>
            </Rectangle.Fill>
         </Rectangle>
      </Grid>
   </ControlTemplate>
   <!--VerticalTrackLargeDecrease-->
   <ControlTemplate x:Key="VerticalTrackLargeDecrease" TargetType="RepeatButton">
      <Grid x:Name="Root" Margin="0,0,0,0" >
         <Rectangle Width="3">
            <Rectangle.Fill>
               <SolidColorBrush Color="{StaticResource BlackColor}"/>
            </Rectangle.Fill>
         </Rectangle>
      </Grid>
   </ControlTemplate>

   <!--Slider Style-->
   <Style TargetType="Slider">
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Maximum" Value="10"/>
      <Setter Property="Minimum" Value="0"/>
      <Setter Property="Value" Value="0"/>
      <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Slider">
               <Grid x:Name="Root">
                  <Grid.Resources>
                     <ControlTemplate x:Key="RepeatButtonTemplate">
                        <Grid x:Name="Root" Opacity="0"/>
                     </ControlTemplate>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ThumbDisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ThumbDisabledOverlayVertical">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay_Copy">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay_Copy">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="Focused"/>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid x:Name="HorizontalTemplate" Background="{TemplateBinding Background}">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                     </Grid.ColumnDefinitions>
                     <Rectangle x:Name="TrackRectangle" Grid.ColumnSpan="3" Grid.Column="0" Height="3" Margin="5,0" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource SliderTrackBrush}"/>
                     <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay" Grid.ColumnSpan="3" Grid.Column="0" Fill="{StaticResource ControlsDisabledBrush}" Height="3" Margin="5,0,5,0" Opacity=".55" Visibility="Collapsed"/>
                     <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton" Grid.Column="0" Height="18" IsTabStop="False" Template="{StaticResource HorizontalTrackLargeDecrease}"/>
                     <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay_Copy" Grid.ColumnSpan="1" Fill="{StaticResource ControlsDisabledBrush}" Height="4" Opacity="0.7" Visibility="Collapsed" />
                     <Thumb x:Name="HorizontalThumb" Grid.Column="1" Height="10" IsTabStop="True" Width="4" Style="{StaticResource HorizontalSliderThumb}"/>
                     <Rectangle x:Name="ThumbDisabledOverlay" Grid.Column="1" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0.25" Visibility="Collapsed" Width="4" Height="10"/>
                     <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton" Grid.Column="2" Height="18" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}"/>
                  </Grid>
                  <Grid x:Name="VerticalTemplate" Background="{TemplateBinding Background}">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                     </Grid.RowDefinitions>
                     <Rectangle x:Name="TrackRectangle_Vertical" Grid.ColumnSpan="1" Margin="0,5" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource SliderTrackBrush}" Grid.RowSpan="3" Grid.Row="0" Width="3"/>
                     <Rectangle x:Name="VerticalTrackRectangleDisabledOverlay" Fill="{StaticResource ControlsDisabledBrush}" Margin="0,5,0,5" Opacity=".55" Grid.Row="0" Grid.RowSpan="3" Width="3" Visibility="Collapsed"/>
                     <RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Grid.Row="2" Width="17"  Template="{StaticResource VerticalTrackLargeDecrease}"/>
                     <Rectangle x:Name="VerticalTrackRectangleDisabledOverlay_Copy" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0.7" Grid.Row="2" Grid.RowSpan="1" Width="5" Visibility="Collapsed"/>
                     <Thumb x:Name="VerticalThumb" Height="4" IsTabStop="True" Grid.Row="1" Width="10" Style="{StaticResource VerticalSliderThumb}"/>
                     <RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Grid.Row="0" Template="{StaticResource RepeatButtonTemplate}" Width="17"/>
                     <Rectangle x:Name="ThumbDisabledOverlayVertical" Fill="{StaticResource ControlsDisabledBrush}" Opacity="0.25" Width="10" Height="4" Grid.Row="1" Visibility="Collapsed"/>
                  </Grid>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CoreBusyIndicatorStyleDefault" TargetType="toolkit:BusyIndicator">
      <Setter Property="BusyContent" Value="Please wait..."/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="OverlayStyle">
         <Setter.Value>
            <Style TargetType="Rectangle">
               <Setter Property="Fill" Value="White"/>
               <Setter Property="Opacity" Value="0"/>
            </Style>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="toolkit:BusyIndicator">
               <Grid>
                  <Grid.Resources>
                     <Storyboard x:Name="BusyAnimation" RepeatBehavior="Forever">
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Note1" Storyboard.TargetProperty="(UIElement.Opacity)">
                           <EasingDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.2000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.4000000" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Note2" Storyboard.TargetProperty="(UIElement.Opacity)">
                           <EasingDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.4000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.6000000" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Note3" Storyboard.TargetProperty="(UIElement.Opacity)">
                           <EasingDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:00.9000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.6000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.8000000" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Note4" Storyboard.TargetProperty="(UIElement.Opacity)">
                           <EasingDoubleKeyFrame KeyTime="00:00:00.6000000" Value="0"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.2000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:01.8000000" Value="1"/>
                           <EasingDoubleKeyFrame KeyTime="00:00:02" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                     </Storyboard>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="VisibilityStates">
                        <VisualState x:Name="Hidden">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="busycontent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Visible">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="busycontent" Storyboard.TargetProperty="(UIElement.Visibility)">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="overlay" Storyboard.TargetProperty="(UIElement.Visibility)">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="BusyStatusStates">
                        <VisualState x:Name="Idle">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="content" Storyboard.TargetProperty="(Control.IsEnabled)">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Busy">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.001" Storyboard.TargetName="content" Storyboard.TargetProperty="(Control.IsEnabled)">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <System:Boolean>False</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <ContentControl x:Name="content" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                  <Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}"/>
                  <ContentPresenter x:Name="busycontent">
                     <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <i:Interaction.Triggers>
                           <i:EventTrigger EventName="Loaded">
                              <ei:ControlStoryboardAction Storyboard="{StaticResource BusyAnimation}"/>
                           </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Border Background="#FF50004E" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Center">
                           <Border.BorderBrush>
                              <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                 <GradientStop Color="#FFA3AEB9" Offset="0"/>
                                 <GradientStop Color="#FF8399A9" Offset="0.375"/>
                                 <GradientStop Color="#FF718597" Offset="0.375"/>
                                 <GradientStop Color="#FF617584" Offset="1"/>
                              </LinearGradientBrush>
                           </Border.BorderBrush>
                           <Border Margin="1" CornerRadius="1.5" Background="#BFFFFFFF">
                              <Grid MinWidth="150">
                                 <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                 </Grid.RowDefinitions>
                                 <ContentPresenter Margin="8" Content="{TemplateBinding BusyContent}" ContentTemplate="{TemplateBinding BusyContentTemplate}"/>
                                 <Canvas Margin="3,0,3,3" Grid.Row="1" Height="50">
                                    <Rectangle Fill="#FF50004E" StrokeThickness="0" Height="1" Width="133" Canvas.Left="5" Canvas.Top="6" d:IsLocked="True"/>
                                    <Rectangle Fill="#FF50004E" StrokeThickness="0" Height="1" Width="133" Canvas.Left="5" Canvas.Top="15" d:IsLocked="True"/>
                                    <Rectangle Fill="#FF50004E" StrokeThickness="0" Height="1" Width="133" Canvas.Left="5" Canvas.Top="24" d:IsLocked="True"/>
                                    <Rectangle Fill="#FF50004E" StrokeThickness="0" Height="1" Width="133" Canvas.Left="5" Canvas.Top="33" d:IsLocked="True"/>
                                    <Rectangle Fill="#FF50004E" StrokeThickness="0" Height="1" Width="133" Canvas.Left="5" Canvas.Top="42" d:IsLocked="True"/>
                                    <Path x:Name="Note1" Fill="#FF50004E" Stretch="Fill" StrokeThickness="0" Height="34.5" Width="16.07" Opacity="0" UseLayoutRounding="False" Canvas.Left="12" Canvas.Top="12.5" Data="M36.257999,12 L36.25779,39 C36.25779,39 31.848457,36.082722 27.25761,36.5 C21.756657,37 22.757883,42 22.758125,42 C22.758139,42 23.757496,46.5 29.757694,46.5 C38.757992,46.5 38.757992,42 38.757996,42 C38.757996,42 38.757996,12 38.757996,12 z"/>
                                    <Path x:Name="Note2" Fill="#FF50004E" Stretch="Fill" StrokeThickness="0" Height="34.5" Width="16.07" UseLayoutRounding="False" Canvas.Left="45.4" Canvas.Top="3.5" Data="M36.257999,12 L36.25779,39 C36.25779,39 31.848457,36.082722 27.25761,36.5 C21.756657,37 22.757883,42 22.758125,42 C22.758139,42 23.757496,46.5 29.757694,46.5 C38.757992,46.5 38.757992,42 38.757996,42 C38.757996,42 38.757996,12 38.757996,12 z" Opacity="0"/>
                                    <Path x:Name="Note3" Fill="#FF50004E" Stretch="Fill" StrokeThickness="0" Height="34.5" Width="16.07" UseLayoutRounding="False" Canvas.Left="79.4" Canvas.Top="8.5" Data="M36.257999,12 L36.25779,39 C36.25779,39 31.848457,36.082722 27.25761,36.5 C21.756657,37 22.757883,42 22.758125,42 C22.758139,42 23.757496,46.5 29.757694,46.5 C38.757992,46.5 38.757992,42 38.757996,42 C38.757996,42 38.757996,12 38.757996,12 z" Opacity="0"/>
                                    <Path x:Name="Note4" Fill="#FF50004E" Stretch="Fill" StrokeThickness="0" Height="34.5" Width="16.07" UseLayoutRounding="False" Canvas.Left="113.4" Canvas.Top="-0.5" Data="M36.257999,12 L36.25779,39 C36.25779,39 31.848457,36.082722 27.25761,36.5 C21.756657,37 22.757883,42 22.758125,42 C22.758139,42 23.757496,46.5 29.757694,46.5 C38.757992,46.5 38.757992,42 38.757996,42 C38.757996,42 38.757996,12 38.757996,12 z" Opacity="0"/>
                                 </Canvas>
                              </Grid>
                           </Border>
                        </Border>
                     </Grid>
                  </ContentPresenter>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="XCloseButtonStyle" TargetType="Button">
      <Setter Property="Background" Value="#FF1F3B53"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="Padding" Value="3"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="BorderBrush">
         <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
               <GradientStop Color="#FFA3AEB9" Offset="0"/>
               <GradientStop Color="#FF8399A9" Offset="0.375"/>
               <GradientStop Color="#FF718597" Offset="0.375"/>
               <GradientStop Color="#FF617584" Offset="1"/>
            </LinearGradientBrush>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid x:Name="grid" Height="14" HorizontalAlignment="Center" VerticalAlignment="Center" Width="15" Background="#02FFFFFF">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz2" Storyboard.TargetProperty="Visibility">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz1" Storyboard.TargetProperty="Visibility">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz0" Storyboard.TargetProperty="Visibility">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                              </ObjectAnimationUsingKeyFrames>
                              <DoubleAnimation Duration="0" Storyboard.TargetName="X" Storyboard.TargetProperty="Opacity" To="0.95"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimation Duration="0" Storyboard.TargetName="X" Storyboard.TargetProperty="Opacity" To="0.85"/>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz2" Storyboard.TargetProperty="Visibility">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz1" Storyboard.TargetProperty="Visibility">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="X_Fuzz0" Storyboard.TargetProperty="Visibility">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0" Storyboard.TargetName="X" Storyboard.TargetProperty="Opacity" To="0.5"/>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Path x:Name="X_Fuzz2" Fill="#AF50004E" Stretch="Fill" Stroke="#AF50004E" Height="8" HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" Width="9" Opacity="1" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z">
                     <Path.RenderTransform>
                        <TransformGroup>
                           <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                        </TransformGroup>
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="X_Fuzz1" Fill="#C750004E" Stretch="Fill" Stroke="#C750004E" Height="8" HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" Width="9" Opacity="1" RenderTransformOrigin="0.5,0.5" Visibility="Collapsed" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z">
                     <Path.RenderTransform>
                        <TransformGroup>
                           <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                        </TransformGroup>
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="X_Fuzz0" Fill="#FF50004E" Stretch="Fill" Stroke="#FF50004E" Height="8" HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" Width="9" Opacity="1" Visibility="Collapsed" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z"/>
                  <Path x:Name="X" Fill="#FFFFFFFF" Stretch="Fill" Height="8" HorizontalAlignment="Center" Margin="0,-1,0,0" VerticalAlignment="Center" Width="9" Opacity="0.7" Data="F1 M 6.742676,3.852539 L 9.110840,1.559570 L 8.910645,0.500000 L 6.838379,0.500000 L 4.902832,2.435547 L 2.967285,0.500000 L 0.895020,0.500000 L 0.694824,1.559570 L 3.062988,3.852539 L 0.527832,6.351563 L 0.689941,7.600586 L 2.967285,7.600586 L 4.897949,5.575195 L 6.854004,7.600586 L 9.115723,7.600586 L 9.277832,6.351563 L 6.742676,3.852539 Z">
                     <Path.Stroke>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                           <GradientStop Color="#FF313131" Offset="1"/>
                           <GradientStop Color="#FF8E9092" Offset="0"/>
                        </LinearGradientBrush>
                     </Path.Stroke>
                  </Path>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="ShowPanelButtonStyle"
          TargetType="Button">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                           <VisualTransition GeneratedDuration="0:0:0.25" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1.1"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1.1"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_disabled"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_disabled"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                        </VisualState>
                        <VisualState x:Name="Unfocused" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Path x:Name="chevron_disabled"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.268915559572499,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Stroke="{StaticResource GrayBrush10}"
                        Fill="{StaticResource GrayBrush2}"
                        Opacity="0">
                     <Path.RenderTransform>
                        <TransformGroup>
                           <ScaleTransform />
                           <SkewTransform />
                           <RotateTransform />
                           <TranslateTransform />
                        </TransformGroup>
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="chevron_0"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.268915559572499,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Fill="White"
                        Stroke="{StaticResource AccentColor1Brush}"
                        Opacity="0">
                     <Path.RenderTransform>
                        <CompositeTransform />
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="chevron"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.268915559572499,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Fill="White"
                        Stroke="{StaticResource AccentColorBrush}">
                     <Path.RenderTransform>
                        <TransformGroup>
                           <ScaleTransform />
                           <SkewTransform />
                           <RotateTransform />
                           <TranslateTransform />
                        </TransformGroup>
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="chevron_focused"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.268915559572499,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Stroke="{StaticResource AccentColorBrush}"
                        StrokeThickness="0"
                        Opacity="0">
                     <Path.RenderTransform>
                        <TransformGroup>
                           <ScaleTransform />
                           <SkewTransform />
                           <RotateTransform />
                           <TranslateTransform />
                        </TransformGroup>
                     </Path.RenderTransform>
                  </Path>
                  <Rectangle Fill="{StaticResource GrayBrush2}"
                             Margin="0"
                             Stroke="{StaticResource GrayBrush10}"
                             Opacity="0" />
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="HidePanelButtonStyle"
          TargetType="Button">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                           <VisualTransition GeneratedDuration="0:0:1" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1.1"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1.1"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_disabled"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimation Duration="0"
                                               To="0"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron"
                                               d:IsOptimized="True" />
                              <DoubleAnimation Duration="0"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_disabled"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                        </VisualState>
                        <VisualState x:Name="Unfocused" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Path x:Name="chevron_disabled"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.5,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Stroke="{StaticResource GrayBrush10}"
                        Fill="{StaticResource GrayBrush2}"
                        Opacity="0">
                     <Path.RenderTransform>
                        <CompositeTransform ScaleX="-1" />
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="chevron_0"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.5,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Fill="White"
                        Stroke="{StaticResource AccentColor1Brush}"
                        Opacity="0"
                        d:IsHidden="True">
                     <Path.RenderTransform>
                        <CompositeTransform ScaleX="-1" />
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="chevron"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.5,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Fill="White"
                        Stroke="{StaticResource AccentColorBrush}"
                        d:IsHidden="True">
                     <Path.RenderTransform>
                        <CompositeTransform ScaleX="-1" />
                     </Path.RenderTransform>
                  </Path>
                  <Path x:Name="chevron_focused"
                        Data="M13.534012,1 L31.53401,12.393628 L31.53401,13.788283 L13.534012,24 L13.534012,20.477903 L27.013077,13.102775 L27.013077,12.960945 L13.534012,4.5457349 z M1,1 L19,12.393628 L19,13.788283 L1,24 L1,20.477903 L14.479069,13.102775 L14.479069,12.960945 L1,4.5457354 z"
                        RenderTransformOrigin="0.5,0.499999938011169"
                        Stretch="Fill"
                        UseLayoutRounding="False"
                        Stroke="{StaticResource AccentColorBrush}"
                        StrokeThickness="0"
                        Opacity="0"
                        Margin="0"
                        d:IsHidden="True">
                     <Path.RenderTransform>
                        <CompositeTransform Rotation="-180"
                                            ScaleY="-1" />
                     </Path.RenderTransform>
                  </Path>
                  <Rectangle Fill="{StaticResource GrayBrush2}"
                             Margin="0"
                             Stroke="{StaticResource GrayBrush10}"
                             Opacity="0" />
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="HIPPSDecompositionButtonStyle"
          TargetType="Button">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="Button">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualStateGroup.Transitions>
                           <VisualTransition GeneratedDuration="0:0:.1" />
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Normal">
                           <Storyboard>
                              <DoubleAnimation Duration="0:0:2"
                                               From="1"
                                               To=".1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_0"
                                               d:IsOptimized="True"
                                               AutoReverse="True"
                                               RepeatBehavior="Forever">
                              </DoubleAnimation>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0:0:2"
                                               To="1"
                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                               Storyboard.TargetName="chevron_0"
                                               AutoReverse="False"
                                               RepeatBehavior="1x"
                                               d:IsOptimized="True" />
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Viewbox>
                     <Image Source="/Virtuoso;component/Assets/images/HIPPSDecomposition.png"
                            Stretch="Fill"
                            x:Name="chevron_0" />
                  </Viewbox>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CoreCodeLookupMultiStyle"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="MinHeight" Value="28"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ControlTextBlock" Text=" " TextWrapping="Wrap"/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border Effect="{StaticResource DropShadowBrush}" x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                           <Button x:Name="ControlCloseButton" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           <ScrollViewer x:Name="ScrollViewer"  MaxHeight="248" BorderThickness="0" Padding="1" ScrollViewer.HorizontalScrollBarVisibility="Disabled" >
                              <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}">
                                 <ListBox x:Name="ControlListBox"  SelectionMode="Multiple" ItemsSource="{TemplateBinding ItemsSource}" DisplayMemberPath="Description" />
                                 <StackPanel x:Name="ControlOtherStackPanel" MinHeight="30" Margin="1,-2,1,2" Width="{TemplateBinding Width}" Background="#FFEBE2EB" >
                                    <Grid>
                                       <Grid.ColumnDefinitions>
                                          <ColumnDefinition Width="*"/>
                                       </Grid.ColumnDefinitions>
                                       <Grid.RowDefinitions>
                                          <RowDefinition Height="Auto" MinHeight="30"/>
                                       </Grid.RowDefinitions>
                                       <TextBox x:Name="ControlOtherTextBox" HorizontalAlignment="Left" Grid.Row="0" Grid.Column="0" Margin="12,4,8,4" MaxLength="200" Height="Auto" MinHeight="25" TextWrapping="Wrap"/>
                                       <StackPanel x:Name="BottomStackPanel" Height="1" />
                                       <!--BottomStackPanel needed for ScrollViewer.ScrollToBottom() to work properly -->
                                    </Grid>
                                 </StackPanel>
                                 <StackPanel x:Name="ControlOtherStackPanel2" MinHeight="30" Margin="1,-2,1,2" Width="{TemplateBinding Width}" />
                              </StackPanel>
                           </ScrollViewer>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreFunctionalDeficitMultiStyle"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="MinHeight" Value="28"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ControlTextBlock" Text=" " TextWrapping="Wrap"/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border Effect="{StaticResource DropShadowBrush}" x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                           <Button x:Name="ControlCloseButton" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           <ScrollViewer x:Name="ScrollViewer"  MaxHeight="248" BorderThickness="0" Padding="1">
                              <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}">
                                 <ListBox x:Name="ControlListBox"  SelectionMode="Multiple" ItemsSource="{TemplateBinding ItemsSource}"/>
                                 <StackPanel x:Name="ControlOtherStackPanel" MinHeight="30" Margin="1,-2,1,2" Width="{TemplateBinding Width}" Background="#FFEBE2EB" >
                                    <Grid>
                                       <Grid.ColumnDefinitions>
                                          <ColumnDefinition Width="*"/>
                                       </Grid.ColumnDefinitions>
                                       <Grid.RowDefinitions>
                                          <RowDefinition Height="Auto" MinHeight="30"/>
                                       </Grid.RowDefinitions>
                                       <TextBox x:Name="ControlOtherTextBox" Grid.Row="0" Grid.Column="0" Margin="20,4,8,4" MaxLength="200" Height="Auto" MinHeight="25" TextWrapping="Wrap"/>
                                       <StackPanel x:Name="BottomStackPanel" Height="1" />
                                       <!--BottomStackPanel needed for ScrollViewer.ScrollToBottom() to work properly -->
                                    </Grid>
                                 </StackPanel>
                                 <StackPanel x:Name="ControlOtherStackPanel2" MinHeight="30" Margin="1,-2,1,2" Width="{TemplateBinding Width}" />
                              </StackPanel>
                           </ScrollViewer>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreMultiSelectComboStyle"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="MinHeight" Value="28"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                          <ToggleButton x:Name="DropDownToggle" MinHeight="28" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ControlTextBlock" Text=" " TextWrapping="Wrap"/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border Effect="{StaticResource DropShadowBrush}" x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                           <Button x:Name="ControlCloseButton" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           <ScrollViewer x:Name="ScrollViewer"  MaxHeight="248" BorderThickness="0" Padding="1" ScrollViewer.VerticalScrollBarVisibility="Hidden">
                              <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}">
                                 <ListBox x:Name="ControlListBox"  SelectionMode="Multiple" ItemsSource="{TemplateBinding ItemsSource}" DisplayMemberPath="{TemplateBinding DisplayMemberPath}" SelectedValuePath="{TemplateBinding SelectedValuePath}"/>
                              </StackPanel>
                           </ScrollViewer>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CoreMultiSelectSearchStyle"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="MinHeight" Value="28"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ControlTextBlock" Text=" " TextWrapping="Wrap"/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border Effect="{StaticResource DropShadowBrush}" x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                           <Button x:Name="ControlCloseButton" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           <ScrollViewer x:Name="ScrollViewer"  MaxHeight="248" BorderThickness="0" Padding="1">
                              <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}">
                                 <ListBox x:Name="ControlListBox"  SelectionMode="Multiple" ItemsSource="{TemplateBinding ItemsSource}" DisplayMemberPath="{TemplateBinding DisplayMemberPath}" SelectedValuePath="{TemplateBinding SelectedValuePath}"/>
                              </StackPanel>
                           </ScrollViewer>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CorecodeLookupICDStyle"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Width" Value="100"/>
      <Setter Property="Height" Value="25"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid >
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="M 96.1886,86.695C 93.0447,90.9797 87.0007,91.8816 82.7184,88.7205L 57.6338,70.0727C 48.4282,76.8972 35.9954,78.9285 24.6288,74.3432C 7.23544,67.3335 -1.22157,47.4816 5.7934,30.0877C 9.18879,21.6567 15.6635,15.0577 24.0222,11.5009C 32.384,7.94692 41.6268,7.8605 50.046,11.2611C 58.4775,14.65 65.0706,21.1224 68.6305,29.4811C 72.0625,37.5565 72.2419,46.4496 69.1908,54.6439L 94.166,73.2136C 98.4478,76.3746 99.3555,82.4103 96.1886,86.695 Z M 57.0111,50.717C 59.1266,45.4685 59.0708,39.7053 56.8528,34.4916C 54.6304,29.2828 50.5165,25.2479 45.2589,23.1306C 40.0148,21.0152 34.2448,21.071 29.0425,23.2842C 23.8269,25.4998 19.7899,29.6162 17.6696,34.8714C 13.3018,45.7133 18.5665,58.0924 29.4175,62.4674C 40.2571,66.8351 52.6319,61.568 57.0111,50.717 Z " VerticalAlignment="Center" HorizontalAlignment="Right" Height="16" Margin="0,0,4,0" Stretch="Uniform"  Width="16">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ControlTextBlock" Text=" " Height="25" Width="70"/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup" >
                     <Border Height="325" Effect="{StaticResource DropShadowBrush}" x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Orientation="Vertical"  >
                           <Button x:Name="ControlCloseButton" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           <StackPanel Orientation="Vertical" >
                              <StackPanel Orientation="Horizontal" Margin="4,2,2,2" >
                                 <Path Opacity=".60" Data="M 96.1886,86.695C 93.0447,90.9797 87.0007,91.8816 82.7184,88.7205L 57.6338,70.0727C 48.4282,76.8972 35.9954,78.9285 24.6288,74.3432C 7.23544,67.3335 -1.22157,47.4816 5.7934,30.0877C 9.18879,21.6567 15.6635,15.0577 24.0222,11.5009C 32.384,7.94692 41.6268,7.8605 50.046,11.2611C 58.4775,14.65 65.0706,21.1224 68.6305,29.4811C 72.0625,37.5565 72.2419,46.4496 69.1908,54.6439L 94.166,73.2136C 98.4478,76.3746 99.3555,82.4103 96.1886,86.695 Z M 57.0111,50.717C 59.1266,45.4685 59.0708,39.7053 56.8528,34.4916C 54.6304,29.2828 50.5165,25.2479 45.2589,23.1306C 40.0148,21.0152 34.2448,21.071 29.0425,23.2842C 23.8269,25.4998 19.7899,29.6162 17.6696,34.8714C 13.3018,45.7133 18.5665,58.0924 29.4175,62.4674C 40.2571,66.8351 52.6319,61.568 57.0111,50.717 Z " Height="18" Stretch="Uniform"  Width="18">
                                    <Path.Fill>
                                       <SolidColorBrush  x:Name="SearchColor" Color="{StaticResource Gray3}"/>
                                    </Path.Fill>
                                 </Path>
                                 <TextBlock x:Name="ControlVersionTextBlock" Margin=" 2,0,0,0" VerticalAlignment="Center"
                                         Foreground="{StaticResource OasisColorBrush}" FontSize="9" FontWeight="Bold" />
                                 <TextBox x:Name="ControlSearchTextBox" Grid.Row="0" Grid.Column="0" Margin="4,0,4,0" Width="290" Height="30" Style="{StaticResource CoreTextBoxStyle}" />
                              </StackPanel>
                              <TextBlock x:Name="ControlWatermarkTextBlock" Grid.Row="1" Grid.Column="0" Margin="24,0,8,0" Width="260" Height="22" FontSize="10" FontWeight="Thin" Style="{StaticResource CoreTextBlockStyle}" />
                              <ListBox x:Name="ControlListBox" MaxHeight="255" SelectionMode="Single" ItemsSource="{TemplateBinding ItemsSource}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                                 <ListBox.ItemTemplate>
                                    <DataTemplate>
                                       <Grid Grid.Row="2" Grid.Column="0" >
                                          <Grid.ColumnDefinitions>
                                             <ColumnDefinition Width="70" />
                                             <ColumnDefinition Width="*" />
                                          </Grid.ColumnDefinitions>
                                          <Grid.RowDefinitions>
                                             <RowDefinition />
                                          </Grid.RowDefinitions>
                                          <TextBlock Padding="0,0,0,0" Grid.Column="0" Height="25" Text="{Binding Code}" HorizontalAlignment="Left" />
                                          <TextBlock Padding="0,0,0,0"  Grid.Column="1" MinHeight="25" LineHeight="25"  Text="{Binding Short}" HorizontalAlignment="Left" TextWrapping="Wrap" />
                                       </Grid>
                                    </DataTemplate>
                                 </ListBox.ItemTemplate>
                              </ListBox>
                           </StackPanel>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreAddressMapStyle" TargetType="ListBox">
      <Setter Property="Padding" Value="1"/>
      <Setter Property="Background" Value="#FFFFFFFF"/>
      <Setter Property="Foreground" Value="#FF000000"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="IsTabStop" Value="False"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush">
         <Setter.Value>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
               <GradientStop Color="#FFA3AEB9" Offset="0"/>
               <GradientStop Color="#FF8399A9" Offset="0.375"/>
               <GradientStop Color="#FF718597" Offset="0.375"/>
               <GradientStop Color="#FF617584" Offset="1"/>
            </LinearGradientBrush>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ListBox">
               <Grid>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <System:Boolean>True</System:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
                     <ScrollViewer x:Name="ScrollViewer" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}">
                        <ItemsPresenter/>
                     </ScrollViewer>
                  </Border>
                  <Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <System:Boolean>true</System:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="#FFDC000C" Margin="-1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0"/>
                     </Grid>
                  </Border>
                  <StackPanel>
                     <ComboBox x:Name="ControlComboBox" IsTabStop="True"
                               ItemsSource="{TemplateBinding ItemsSource}"
                               DisplayMemberPath="CountyCode"
                               SelectedValuePath="CountyCode">
                     </ComboBox>
                     <StackPanel Orientation="Horizontal" x:Name="CBSAContainer">
                        <TextBlock x:Name="HomeHealthTextBlock" Width="{TemplateBinding Width}" Text="{Binding CBSAHomeHealth}" Margin="20,0,0,0" Height="35" Padding="0,10,0,0" />
                        <TextBlock x:Name="HomeHealthLabelTextBlock" Visibility="{Binding CBSAHomeHealth, Converter={StaticResource StringVisibilityConverter}, Mode=TwoWay}" Text="(Home Health)" Height="35" Padding="0,10,0,0" />
                        <TextBlock x:Name="HospiceTextBlock" Width="{TemplateBinding Width}" Text="{Binding CBSAHospice}" Margin="10,0,0,0" Height="35" Padding="0,10,0,0" />
                        <TextBlock x:Name="HospiceLabelTextBlock" Visibility="{Binding CBSAHospice, Converter={StaticResource StringVisibilityConverter}, Mode=TwoWay}" Text="(Hospice)" Height="35" Padding="0,10,0,0" />
                     </StackPanel>
                  </StackPanel>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="CoreComboBoxPolicyHolder"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="MinHeight" Value="28"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ContactTextBlock" Text=" " />
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border x:Name="PopupBorder" Effect="{StaticResource DropShadowBrush}"  BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Margin="0,0" Orientation="Vertical" Width="{TemplateBinding Width}" >
                           <toolkit:DockPanel Margin="0,-20" HorizontalAlignment="Stretch">
                              <StackPanel Orientation="Horizontal" Margin="0,10" toolkit:DockPanel.Dock="Left" >
                                 <RadioButton x:Name="ContactRadioSelf" VerticalAlignment="Center" Margin="4" Content="Self"/>
                                 <RadioButton x:Name="ContactRadioContact" VerticalAlignment="Center" Margin="16" Content="Contact"/>
                                 <RadioButton x:Name="ContactRadioOther" VerticalAlignment="Center" Margin="16" Content="Other"/>
                              </StackPanel>
                              <Button x:Name="ContactCloseButton" toolkit:DockPanel.Dock="Right" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           </toolkit:DockPanel>
                           <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                              <ScrollViewer x:Name="ScrollViewer" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto"  BorderThickness="0" Padding="1" >
                                 <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                                    <ListBox x:Name="ContactListBox" Margin="0,2,0,0"  MaxHeight="140"
                                        SelectionMode="Single"  ItemsSource="{TemplateBinding ItemsSource}">
                                       <ListBox.ItemTemplate>
                                          <DataTemplate>
                                             <TextBlock Text="{Binding FullNameInformalWithRelationship}"/>
                                          </DataTemplate>
                                       </ListBox.ItemTemplate>
                                    </ListBox>
                                    <StackPanel x:Name="ContactOtherPanel" Margin="0,2,0,0" Orientation="Vertical" >
                                       <!--<StackPanel Orientation="Horizontal"  >
                                                        <TextBlock Margin="82,0,0,0" FontSize="9" Text="( " />
                                                        <TextBlock Margin="0,0,0,0" FontSize="11" Text="A first and last name are required" />
                                                        <TextBlock Margin="0,0,0,0" FontSize="9" Text=" )" />
                                                    </StackPanel>-->
                                       <!--<StackPanel Orientation="Horizontal" Margin="0,0,0,0" >
                                                    </StackPanel>
                                                    <StackPanel Orientation="Horizontal" Margin="0,8,0,8" >
                                                    </StackPanel>-->
                                       <Grid x:Name="ContactOtherGrid">
                                          <Grid.RowDefinitions>
                                             <RowDefinition/>
                                             <RowDefinition/>
                                             <RowDefinition/>
                                             <RowDefinition/>
                                          </Grid.RowDefinitions>
                                          <Grid.ColumnDefinitions>
                                             <ColumnDefinition Width="Auto"/>
                                             <ColumnDefinition Width="350"/>
                                          </Grid.ColumnDefinitions>
                                          <StackPanel Orientation="Horizontal" Grid.Column="1" >
                                             <TextBlock Margin="82,0,0,0" FontSize="9" Text="( " />
                                             <TextBlock Margin="0,0,0,0" FontSize="11" Text="A first and last name are required" />
                                             <TextBlock Margin="0,0,0,0" FontSize="9" Text=" )" />
                                          </StackPanel>

                                          <Grid Background="White"
                                                Grid.Row="1"
                                                Grid.Column="0">
                                             <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="15" />
                                                <ColumnDefinition Width="*" />
                                             </Grid.ColumnDefinitions>
                                             <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                             </Grid.RowDefinitions>
                                             <TextBlock x:Name="FirstNameRequired"
                                                        Grid.Row="0"
                                                        Grid.Column="0"
                                                        Text="*"
                                                        Style="{StaticResource CoreTextBlockStyle}"
                                                        VerticalAlignment="Center"/>
                                             <TextBlock Grid.Row="0"
                                                        Grid.Column="1"
                                                        Style="{StaticResource CoreTextBlockStyle}"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Text="First Name" />
                                          </Grid>

                                          <TextBox Grid.Row="1"
                                                   Grid.Column="1"
                                                   x:Name="ContactOtherFirstName"
                                                   MaxLength="40" />

                                          <Grid Background="White"
                                                Grid.Row="2"
                                                Grid.Column="0">
                                             <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="15" />
                                                <ColumnDefinition Width="*" />
                                             </Grid.ColumnDefinitions>
                                             <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                             </Grid.RowDefinitions>
                                             <TextBlock x:Name="LastNameRequired"
                                                        Grid.Row="0"
                                                        Grid.Column="0"
                                                        Text="*"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                        VerticalAlignment="Center" />
                                             <TextBlock Grid.Row="0"
                                                        Grid.Column="1"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                        HorizontalAlignment="Right"
                                                        Text="Last Name"
                                                        VerticalAlignment="Center" />
                                          </Grid>


                                          <TextBox Grid.Row="2" Grid.Column="1"
                                              x:Name="ContactOtherLastName" MaxLength="45"/>
                                          <Grid Grid.Row="3" Grid.Column="1" x:Name="AddressSameAsGrid">
                                             <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="25"/>
                                                <ColumnDefinition Width="Auto"/>
                                             </Grid.ColumnDefinitions>
                                             <CheckBox x:Name="SameAddress"
                                                       Grid.Column="0"/>
                                             <TextBlock x:Name="SameAddressLabel"
                                                        Grid.Column="1"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                    HorizontalAlignment="Left"
                                                        VerticalAlignment="Center"
                                                    Text="Address same as Patient"/>
                                          </Grid>

                                       </Grid>
                                       <Grid x:Name="AdvancedPanel"
                                             Margin="6,0">
                                          <Grid.ColumnDefinitions>
                                             <ColumnDefinition Width="Auto"/>
                                             <ColumnDefinition Width="Auto"/>
                                          </Grid.ColumnDefinitions>
                                          <Grid x:Name="AdvAddressPanel" Grid.Column="0">
                                             <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                             </Grid.RowDefinitions>
                                             <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="350"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="Auto"/>
                                             </Grid.ColumnDefinitions>

                                             <TextBlock Grid.Row="0" Grid.Column="0"
                                                    HorizontalAlignment="Right"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                    Text="Address"/>
                                             <TextBlock Grid.Row="2" Grid.Column="0"
                                                    HorizontalAlignment="Right"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                    Text="City"/>
                                             <TextBlock Grid.Row="3" Grid.Column="0"
                                                    HorizontalAlignment="Right"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                    Text="State"/>
                                             <TextBlock Grid.Row="4" Grid.Column="0"
                                                    HorizontalAlignment="Right"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                    Text="ZIP Code"/>
                                             <TextBox MaxLength="40" Grid.Row="0" Grid.Column="1"
                                                  x:Name="ContactAddress1"/>
                                             <TextBox MaxLength="40" Grid.Row="1" Grid.Column="1"
                                                  x:Name="ContactAddress2"/>
                                             <TextBox MaxLength="40" Grid.Row="2" Grid.Column="1"
                                                  x:Name="ContactCity"/>

                                             <VirtuosoCoreControls:autoCompleteCombo Grid.Column="1"
                                                 x:Name="ContactState"
                                                 Grid.Row="3"
                                                 VerticalAlignment="Center" HorizontalAlignment="Stretch"
                                                 ItemsSource="{Binding Source=STATE, Converter={StaticResource CodeLookupItemSourceConverter}}"
                                                                
                                                 SelectedValuePath="CodeLookupKey"
                                                 ValueMemberPath="CodeDescription">
                                                <VirtuosoCoreControls:autoCompleteCombo.ItemTemplate>
                                                   <DataTemplate>
                                                      <TextBlock Text="{Binding CodeDescription}"/>
                                                   </DataTemplate>
                                                </VirtuosoCoreControls:autoCompleteCombo.ItemTemplate>
                                             </VirtuosoCoreControls:autoCompleteCombo>

                                             <TextBox Grid.Row="4" Grid.Column="1"
                                                  VirtuosoCoreBehaviors:TextBoxFilters.NumericFormat="zip"
                                                  x:Name="ContactZipCode"/>
                                          </Grid>
                                          <Grid x:Name="AdvOtherPanel" Grid.Column="1">
                                             <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                             </Grid.RowDefinitions>
                                             <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                             </Grid.ColumnDefinitions>
                                             <TextBlock Grid.Row="0" Grid.Column="0"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                                 HorizontalAlignment="Right" Text="Birth Date" />
                                             <VirtuosoCoreControls:vDatePicker Grid.Row="0"  Grid.Column="1"
                                                   x:Name="ContactBirthDate"
                                                   SelectedDateFormat="Short"
                                                   Width="130"
                                                   HorizontalAlignment="Left" />
                                             <TextBlock Grid.Row="1" Grid.Column="0"
                                                    Style="{StaticResource CoreTextBlockStyle}"
                                             HorizontalAlignment="Right" Text="Gender" />
                                             <!--<VirtuosoCoreControls:codeLookup x:Name="ContactGender"
                                                                          Grid.Row="1" Grid.Column="1"
                                                                          Margin="0,4"
                                                                          IncludeNullItem="false"
                                                                         CodeType="Gender"
                                                                         FormatOfDropDown="Description"
                                                                         FormatOfSelection="Description"
                                                                                        />-->
                                             <TextBlock Grid.Row="2" Grid.Column="0"
                                                       Style="{StaticResource CoreTextBlockStyle}"
                                                         HorizontalAlignment="Right" Text="Insurance Number"  />
                                             <TextBox MaxLength="40" Grid.Row="2" Grid.Column="1"
                                                  x:Name="ContactInsNum"/>
                                             <!--<TextBlock Grid.Row="3" Grid.Column="0"
                                                                      Style="{StaticResource CoreTextBlockStyle}"
                                                                        HorizontalAlignment="Right" Text="Group Name"  />
                                                            <TextBox MaxLength="40" Grid.Row="3" Grid.Column="1"
                                                                 x:Name="ContactGroupName"/>
                                                            <TextBlock Grid.Row="4" Grid.Column="0"
                                                                      Style="{StaticResource CoreTextBlockStyle}"
                                                                        HorizontalAlignment="Right" Text="Group Number"  />
                                                            <TextBox MaxLength="40" Grid.Row="4" Grid.Column="1"
                                                                 x:Name="ContactGroupNum"/>-->
                                          </Grid>
                                       </Grid>
                                    </StackPanel>
                                 </StackPanel>
                              </ScrollViewer>
                           </StackPanel>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreComboBoxAdmissionGroupSets"
          TargetType="ComboBox"
          BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding"
              Value="6,4,25,4" />
      <Setter Property="Foreground"
              Value="{StaticResource TextBrush}" />
      <Setter Property="FontFamily"
              Value="{StaticResource ContentFontFamily}" />
      <Setter Property="FontSize"
              Value="{StaticResource ContentFontSize}" />
      <Setter Property="TextOptions.TextHintingMode"
              Value="Animated" />
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="BorderThickness"
              Value="1" />
      <Setter Property="TabNavigation"
              Value="Once" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
              Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
              Value="Auto" />
      <Setter Property="BorderBrush"
              Value="{StaticResource TextBoxBorderBrush}" />
      <Setter Property="Height"
              Value="Auto" />
      <Setter Property="MinHeight"
              Value="28" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle"
                            TargetType="ToggleButton">
                        <Setter Property="Foreground"
                                Value="{StaticResource TextBrush}" />
                        <Setter Property="Background"
                                Value="{StaticResource GrayBrush7}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource TextBoxBorderBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                        <Setter Property="Padding"
                                Value="3" />
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal" />
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled" />
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked" />
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused" />
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="3" />
                                    <Rectangle x:Name="DisabledVisualElement"
                                               Fill="{StaticResource WhiteBrush}"
                                               IsHitTestVisible="false"
                                               Opacity="0"
                                               RadiusY="3"
                                               RadiusX="3" />
                                    <Border x:Name="MouseOverBorder"
                                            Background="{StaticResource GrayBrush8}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3.5"
                                            Opacity="0" />
                                    <Border x:Name="PressedBorder"
                                            Background="{StaticResource GrayBrush5}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3.5"
                                            Opacity="0" />
                                    <Rectangle x:Name="FocusRectangle"
                                               Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                               RadiusY="4"
                                               RadiusX="4"
                                               Margin="-1"
                                               Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle"
                                               StrokeThickness="{TemplateBinding BorderThickness}"
                                               Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                               RadiusX="3"
                                               RadiusY="3"
                                               Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle"
                                               StrokeThickness="{TemplateBinding BorderThickness}"
                                               RadiusY="4"
                                               RadiusX="4"
                                               Opacity="0"
                                               Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle"
                                               StrokeThickness="{TemplateBinding BorderThickness}"
                                               RadiusY="4"
                                               RadiusX="4"
                                               Opacity="0"
                                               Margin="1"
                                               Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Rectangle x:Name="FocusVisualElement"
                                               IsHitTestVisible="false"
                                               Margin="1"
                                               RadiusY="3.5"
                                               RadiusX="3.5"
                                               Stroke="{StaticResource HighlightBrush}"
                                               StrokeThickness="1"
                                               Visibility="Collapsed" />
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                       Value="0.5" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0"
                                                       Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0"
                                                       Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused" />
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                             Storyboard.TargetProperty="(UIElement.Visibility)"
                                                             Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                             Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="Right"
                                      Margin="0"
                                      Style="{StaticResource comboToggleStyle}"
                                      VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow"
                                 Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                 HorizontalAlignment="Right"
                                 Height="4"
                                 Margin="0,0,6,0"
                                 Stretch="Uniform"
                                 Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor"
                                                  Color="{StaticResource Gray3}" />
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="DisplayTextBlock"
                                      Text=" " />
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle"
                             Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                             RadiusY="4"
                             RadiusX="4"
                             Margin="-1"
                             Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle"
                             StrokeThickness="{TemplateBinding BorderThickness}"
                             Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                             RadiusX="3"
                             RadiusY="3"
                             Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement"
                             Fill="{StaticResource ControlsDisabledBrush}"
                             IsHitTestVisible="false"
                             RadiusX="3"
                             RadiusY="3"
                             Opacity="0" />
                  <Border x:Name="ValidationErrorElement"
                          BorderBrush="{StaticResource ControlsValidationBrush}"
                          BorderThickness="1"
                          CornerRadius="3"
                          Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip"
                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                 Placement="Right"
                                 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                 Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                      Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent"
                           HorizontalAlignment="Right"
                           Height="12"
                           Margin="1,-4,-4,0"
                           VerticalAlignment="Top"
                           Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                              Fill="{StaticResource ValidationBrush5}"
                              Margin="1,3,0,0" />
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                              Fill="{StaticResource WhiteColorBrush}"
                              Margin="1,3,0,0" />
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border x:Name="PopupBorder"
                             Effect="{StaticResource DropShadowBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             HorizontalAlignment="Stretch"
                             Height="Auto"
                             BorderBrush="{StaticResource ComboBoxPopupBrush}"
                             Background="{StaticResource WhiteBrush}">
                        <StackPanel Margin="0,0"
                                    Orientation="Vertical"
                                    Width="{TemplateBinding Width}">
                           <!--<toolkit:DockPanel Margin="0,-20"
                                                           HorizontalAlignment="Stretch">
                                            <StackPanel Orientation="Horizontal"
                                                        Margin="0,10"
                                                        toolkit:DockPanel.Dock="Left">
                                                <RadioButton x:Name="ContactRadioSelf"
                                                             VerticalAlignment="Center"
                                                             Margin="4"
                                                             Content="Self" />
                                                <RadioButton x:Name="ContactRadioContact"
                                                             VerticalAlignment="Center"
                                                             Margin="16"
                                                             Content="Contact" />
                                                <RadioButton x:Name="ContactRadioOther"
                                                             VerticalAlignment="Center"
                                                             Margin="16"
                                                             Content="Other" />
                                            </StackPanel>
                                            <Button x:Name="ContactCloseButton"
                                                    toolkit:DockPanel.Dock="Right"
                                                    IsTabStop="False"
                                                    HorizontalAlignment="Right"
                                                    Style="{StaticResource ComboBoxPopupCloseButtonStyle}"
                                                    VerticalAlignment="Center" />
                                        </toolkit:DockPanel>-->
                           <StackPanel Orientation="Vertical"
                                       Width="{TemplateBinding Width}">
                              <ScrollViewer x:Name="ScrollViewer"
                                            HorizontalScrollBarVisibility="Disabled"
                                            BorderThickness="0"
                                            Padding="1">
                                 <StackPanel Orientation="Vertical"
                                             Width="{TemplateBinding Width}">

                                    <StackPanel x:Name="GroupingPanel"
                                                Margin="0,2,0,0"
                                                Orientation="Vertical">

                                       <Grid x:Name="GroupingGrid">
                                          <Grid.RowDefinitions>
                                             <RowDefinition />
                                             <RowDefinition />
                                             <RowDefinition />
                                             <RowDefinition />
                                             <RowDefinition />
                                             <RowDefinition />
                                          </Grid.RowDefinitions>
                                          <Grid.ColumnDefinitions>
                                             <ColumnDefinition Width="Auto" />
                                             <ColumnDefinition Width="Auto" />
                                             <ColumnDefinition Width="Auto" />
                                             <ColumnDefinition Width="Auto" />
                                          </Grid.ColumnDefinitions>

                                          <TextBlock Grid.Row="0"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Visibility="{Binding CurrentAdmission.ServiceLineGrouping1.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                     Text="{Binding CurrentAdmission.ServiceLineGrouping1.GroupHeaderLabel}" />

                                          <VirtuosoCoreControls:vAsyncComboBox Grid.Column="1"
                                                                               Grid.ColumnSpan="3"
                                                                               Margin="5,0,0,5"
                                                                               x:Name="GroupingComboBox"
                                                                               Visibility="{Binding CurrentAdmission.ServiceLineGrouping1.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                                               IsHitTestVisible="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               IsTabStop="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               VirtuosoCoreBehaviors:ComboBox.Mode="Async"
                                                                               MinWidth="350"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Left"
                                                                               DisplayMemberPath="ServiceLineGroupNameWithInactive"
                                                                               SelectedValuePath="ServiceLineGroupingKey"
                                                                               SelectedValue="{Binding SelectedAdmissionGroupSet.ServiceLineGroupingKey, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, Converter={StaticResource ComboBoxItemNullConverter}}"/>

                                          <TextBlock Grid.Row="1"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Visibility="{Binding CurrentAdmission.ServiceLineGrouping2.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                     Text="{Binding CurrentAdmission.ServiceLineGrouping2.GroupHeaderLabel}" />

                                          <VirtuosoCoreControls:vAsyncComboBox Grid.Column="1"
                                                                               Grid.ColumnSpan="3"
                                                                               Grid.Row="1"
                                                                               Margin="5,0,0,5"
                                                                               x:Name="GroupingComboBox2"
                                                                               Visibility="{Binding CurrentAdmission.ServiceLineGrouping2.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                                               IsHitTestVisible="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               IsTabStop="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               VirtuosoCoreBehaviors:ComboBox.Mode="Async"
                                                                               MinWidth="350"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Left"
                                                                               DisplayMemberPath="ServiceLineGroupNameWithInactive"
                                                                               SelectedValuePath="ServiceLineGroupingKey"
                                                                               SelectedValue="{Binding SelectedAdmissionGroupSet.ServiceLineGrouping2Key, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, Converter={StaticResource ComboBoxItemNullConverter}}" />

                                          <TextBlock Grid.Row="2"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Visibility="{Binding CurrentAdmission.ServiceLineGrouping3.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                     Text="{Binding CurrentAdmission.ServiceLineGrouping3.GroupHeaderLabel}" />
                                          <VirtuosoCoreControls:vAsyncComboBox Grid.Column="1"
                                                                               Grid.ColumnSpan="3"
                                                                               Grid.Row="2"
                                                                               Margin="5,0,0,5"
                                                                               x:Name="GroupingComboBox3"
                                                                               Visibility="{Binding CurrentAdmission.ServiceLineGrouping3.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                                               IsHitTestVisible="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               IsTabStop="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               VirtuosoCoreBehaviors:ComboBox.Mode="Async"
                                                                               MinWidth="350"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Left"
                                                                               DisplayMemberPath="ServiceLineGroupNameWithInactive"
                                                                               SelectedValuePath="ServiceLineGroupingKey"
                                                                               SelectedValue="{Binding SelectedAdmissionGroupSet.ServiceLineGrouping3Key, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, Converter={StaticResource ComboBoxItemNullConverter}}" />

                                          <TextBlock Grid.Row="3"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Visibility="{Binding CurrentAdmission.ServiceLineGrouping4.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                     Text="{Binding CurrentAdmission.ServiceLineGrouping4.GroupHeaderLabel}" />
                                          <VirtuosoCoreControls:vAsyncComboBox Grid.Column="1"
                                                                               Grid.ColumnSpan="3"
                                                                               Grid.Row="3"
                                                                               Margin="5,0,0,5"
                                                                               x:Name="GroupingComboBox4"
                                                                               Visibility="{Binding CurrentAdmission.ServiceLineGrouping4.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                                               IsHitTestVisible="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               IsTabStop="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               VirtuosoCoreBehaviors:ComboBox.Mode="Async"
                                                                               MinWidth="350"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Left"
                                                                               DisplayMemberPath="ServiceLineGroupNameWithInactive"
                                                                               SelectedValuePath="ServiceLineGroupingKey"
                                                                               SelectedValue="{Binding SelectedAdmissionGroupSet.ServiceLineGrouping4Key, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, Converter={StaticResource ComboBoxItemNullConverter}}" />

                                          <TextBlock Grid.Row="4"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Visibility="{Binding CurrentAdmission.ServiceLineGrouping5.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                     Text="{Binding CurrentAdmission.ServiceLineGrouping5.GroupHeaderLabel}" />
                                          <VirtuosoCoreControls:vAsyncComboBox Grid.Column="1"
                                                                               Grid.ColumnSpan="3"
                                                                               Grid.Row="4"
                                                                               Margin="5,0,0,5"
                                                                               x:Name="GroupingComboBox5"
                                                                               Visibility="{Binding CurrentAdmission.ServiceLineGrouping5.ServiceLineGroupHeaderKey, Converter={StaticResource VisibilityConverterNullOrZero}, FallbackValue=Collapsed}"
                                                                               IsHitTestVisible="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               IsTabStop="{Binding SelectedAdmissionGroupSet.CanEditSiblingGroups}"
                                                                               VirtuosoCoreBehaviors:ComboBox.Mode="Async"
                                                                               MinWidth="350"
                                                                               VerticalAlignment="Center"
                                                                               HorizontalAlignment="Left"
                                                                               DisplayMemberPath="ServiceLineGroupNameWithInactive"
                                                                               SelectedValuePath="ServiceLineGroupingKey"
                                                                               SelectedValue="{Binding SelectedAdmissionGroupSet.ServiceLineGrouping5Key, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, Converter={StaticResource ComboBoxItemNullConverter}}" />

                                          <TextBlock Grid.Row="5"
                                                     Grid.Column="0"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Text="Start Date" />
                                          <VirtuosoCoreControls:vDatePicker Grid.Row="5"
                                                                            Grid.Column="1"
                                                                            Width="130"
                                                                            Margin="5,0,5,0"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Left"
                                                                            IsEnabled="{Binding SelectedAdmissionGroupSet.CanEditStartDate}"
                                                                            DateObject="{Binding SelectedAdmissionGroupSet.StartDate, Mode=TwoWay, NotifyOnValidationError=True}" />
                                          <TextBlock Grid.Row="5"
                                                     Grid.Column="2"
                                                     Margin="5,0,0,0"
                                                     VerticalAlignment="Center"
                                                     Text="End Date" />
                                          <VirtuosoCoreControls:vDatePicker Grid.Row="5"
                                                                            Grid.Column="3"
                                                                            Width="130"
                                                                            VerticalAlignment="Center"
                                                                            HorizontalAlignment="Left"
                                                                            IsEnabled="{Binding SelectedAdmissionGroupSet.CanEditEndDate}"
                                                                            DateObject="{Binding SelectedAdmissionGroupSet.EndDate, Mode=TwoWay, NotifyOnValidationError=True}" />
                                       </Grid>
                                    </StackPanel>
                                 </StackPanel>
                              </ScrollViewer>
                           </StackPanel>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <!-- Popup Close Button Style -->
   <Style x:Key="PopupCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource XXCloseButtonStyle}">
      <Setter Property="Margin" Value="0" />
      <Setter Property="VerticalAlignment" Value="Top" />
      <Setter Property="HorizontalAlignment" Value="Right" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Height" Value="25" />
      <Setter Property="Width" Value="25" />
      <Setter Property="IsTabStop"
              Value="False" />
   </Style>
   <Style x:Key="ComboBoxPopupCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource PopupCloseButtonStyle}">
      <Setter Property="Height" Value="18" />
      <Setter Property="Width" Value="18" />
   </Style>
   <ControlTemplate x:Key="ToolTipTemplate" TargetType="ToolTip">
      <Border Margin="0,10,0,0"
              BorderBrush="Black"
              BorderThickness="1"
              CornerRadius="2"
              Background="White">
         <Grid>
            <ContentPresenter Content="{TemplateBinding Content}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              Margin="{TemplateBinding Padding}"
                              VerticalAlignment="Center" />
         </Grid>
      </Border>
   </ControlTemplate>
   <ControlTemplate x:Name="CoreToolTipTemplate" TargetType="ToolTip">
      <Border x:Name="Root" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource HighlightLightBrush}" Effect="{StaticResource DropShadowBrush}" Opacity="0">
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="OpenStates">
               <VisualStateGroup.Transitions>
                  <VisualTransition From="Open" GeneratedDuration="0:0:0.3" To="Closed"/>
               </VisualStateGroup.Transitions>
               <VisualState x:Name="Closed">
                  <Storyboard>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Open">
                  <Storyboard>
                     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Root">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1"/>
                     </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
         <Border Padding="{TemplateBinding Padding}">
            <Border.Resources>
               <Storyboard x:Key="Visible State"/>
               <Storyboard x:Key="Normal State"/>
            </Border.Resources>
            <Border.Background>
               <StaticResource ResourceKey="HighlightLightBrush"/>
            </Border.Background>
            <ContentPresenter Cursor="{TemplateBinding Cursor}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"/>
         </Border>
      </Border>
   </ControlTemplate>

   <Style x:Key="CoreTransitioningContentControlStyleRightToLeft" TargetType="layoutToolkit:TransitioningContentControl" >
      <Setter Property="IsTabStop" Value="True"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Transition" Value="DefaultTransition"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="layoutToolkit:TransitioningContentControl">
               <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                  <VisualStateManager.CustomVisualStateManager>
                     <ei:ExtendedVisualStateManager/>
                  </VisualStateManager.CustomVisualStateManager>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="PresentationStates">
                        <VisualStateGroup.Transitions>
                           <VisualTransition GeneratedDuration="0:0:0.8">
                              <ei:ExtendedVisualStateManager.TransitionEffect>
                                 <ee:SlideInTransitionEffect SlideDirection="RightToLeft" />
                                 <!--<ee:FadeTransitionEffect  />-->
                                 <!--<ee:RadialBlurTransitionEffect   />-->
                                 <!--<ee:WipeTransitionEffect  />-->
                              </ei:ExtendedVisualStateManager.TransitionEffect>
                              <VisualTransition.GeneratedEasingFunction>
                                 <CircleEase EasingMode="EaseInOut" />
                              </VisualTransition.GeneratedEasingFunction>
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"  Storyboard.TargetName="PreviousContentPresentationSite">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                                       <DiscreteObjectKeyFrame.Value>
                                          <Visibility>Collapsed</Visibility>
                                       </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="DefaultTransition">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PreviousContentPresentationSite">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Normal">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PreviousContentPresentationSite">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="PresentationStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.8" ei:ExtendedVisualStateManager.UseFluidLayout="True">
                                            <ei:ExtendedVisualStateManager.TransitionEffect>
                                                <ee:WipeTransitionEffect FeatherAmount="5" />
                                                <ee:FadeTransitionEffect />
                                                <ee:SlideInTransitionEffect SlideDirection="RightToLeft"  />
                                            </ei:ExtendedVisualStateManager.TransitionEffect>
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CircleEase EasingMode="EaseInOut" />
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>


                                    <VisualState x:Name="DefaultTransition">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CurrentContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.600" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PreviousContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.600" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PreviousContentPresentationSite">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UpTransition">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CurrentContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="CurrentContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="30"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PreviousContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="PreviousContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="-30"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DownTransition">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CurrentContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="CurrentContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-40"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PreviousContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="PreviousContentPresentationSite">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="00:00:00.300" Value="40"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
                  <Grid>
                     <ContentPresenter x:Name="PreviousContentPresentationSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}">
                        <ContentPresenter.RenderTransform>
                           <TransformGroup >
                              <ScaleTransform/>
                              <SkewTransform/>
                              <RotateTransform/>
                              <TranslateTransform/>
                           </TransformGroup>
                        </ContentPresenter.RenderTransform>
                     </ContentPresenter>
                     <ContentPresenter x:Name="CurrentContentPresentationSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" RenderTransformOrigin="0,0">
                        <ContentPresenter.Projection>
                           <PlaneProjection CenterOfRotationY="0"/>
                        </ContentPresenter.Projection>
                        <ContentPresenter.RenderTransform>
                           <TransformGroup>
                              <ScaleTransform/>
                              <SkewTransform/>
                              <RotateTransform/>
                              <TranslateTransform/>
                           </TransformGroup>
                        </ContentPresenter.RenderTransform>
                     </ContentPresenter>
                  </Grid>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreTransitioningContentControlStyleLeftToRight" TargetType="layoutToolkit:TransitioningContentControl" >
      <Setter Property="IsTabStop" Value="True"/>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="VerticalContentAlignment" Value="Top"/>
      <Setter Property="Transition" Value="DefaultTransition"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="layoutToolkit:TransitioningContentControl">
               <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
                  <VisualStateManager.CustomVisualStateManager>
                     <ei:ExtendedVisualStateManager/>
                  </VisualStateManager.CustomVisualStateManager>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="PresentationStates">
                        <VisualStateGroup.Transitions>
                           <VisualTransition GeneratedDuration="0:0:0.8">
                              <ei:ExtendedVisualStateManager.TransitionEffect>
                                 <ee:SlideInTransitionEffect SlideDirection="LeftToRight"  />
                              </ei:ExtendedVisualStateManager.TransitionEffect>
                              <VisualTransition.GeneratedEasingFunction>
                                 <CircleEase EasingMode="EaseInOut" />
                              </VisualTransition.GeneratedEasingFunction>
                              <Storyboard>
                                 <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"  Storyboard.TargetName="PreviousContentPresentationSite">
                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.4">
                                       <DiscreteObjectKeyFrame.Value>
                                          <Visibility>Collapsed</Visibility>
                                       </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                 </ObjectAnimationUsingKeyFrames>
                              </Storyboard>
                           </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="DefaultTransition">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PreviousContentPresentationSite">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Normal">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PreviousContentPresentationSite">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Grid>
                     <ContentPresenter x:Name="PreviousContentPresentationSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}">
                        <ContentPresenter.RenderTransform>
                           <TransformGroup >
                              <ScaleTransform/>
                              <SkewTransform/>
                              <RotateTransform/>
                              <TranslateTransform/>
                           </TransformGroup>
                        </ContentPresenter.RenderTransform>
                     </ContentPresenter>
                     <ContentPresenter x:Name="CurrentContentPresentationSite" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" RenderTransformOrigin="0,0">
                        <ContentPresenter.Projection>
                           <PlaneProjection CenterOfRotationY="0"/>
                        </ContentPresenter.Projection>
                        <ContentPresenter.RenderTransform>
                           <TransformGroup>
                              <ScaleTransform/>
                              <SkewTransform/>
                              <RotateTransform/>
                              <TranslateTransform/>
                           </TransformGroup>
                        </ContentPresenter.RenderTransform>
                     </ContentPresenter>
                  </Grid>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Name="CoreFrequencyTextBoxStyle" TargetType="TextBox">
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="11"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="TextWrapping" Value="NoWrap"/>
      <Setter Property="TextAlignment" Value="Center"/>
      <Setter Property="Margin" Value="0,0"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Height" Value="18"/>
      <Setter Property="Width" Value="36"/>
      <Setter Property="TabIndex"  Value="1" />
      <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="Padding" Value="0"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="HorizontalAlignment" Value="Left" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="TextBox">
               <Grid x:Name="RootElement">
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value=".5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="ReadOnly">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ReadOnlyVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle" />
                              <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle"/>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused">
                           <Storyboard/>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Rectangle x:Name="Base" RadiusX="3" RadiusY="3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Opacity="1" Fill="{StaticResource ControlBackgroundBrush}" />
                  <Rectangle x:Name="FocusRectangle" RadiusX="3" RadiusY="3"  StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                  <Rectangle x:Name="FocusInnerRectangle" RadiusX="3" RadiusY="3"  StrokeThickness="{TemplateBinding BorderThickness}" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                  <Grid Margin="0,0,0,0">
                     <Border x:Name="ReadOnlyVisualElement" Background="{StaticResource ReadOnlyBrush}" Opacity="0"/>
                     <Grid >
                        <ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Margin="1,-3,1,1" VerticalAlignment="Center" Background="{x:Null}"/>
                     </Grid>
                  </Grid>
                  <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3"  Stroke="{StaticResource ControlsDisabledBrush}" StrokeThickness="{TemplateBinding BorderThickness}" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreCodeLookupFrequencyStyle"  TargetType="ComboBox" BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding" Value="6,4,25,4"/>
      <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
      <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"/>
      <Setter Property="FontSize" Value="{StaticResource ContentFontSize}"/>
      <Setter Property="TextOptions.TextHintingMode" Value="Animated"/>
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment" Value="Left"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="TabNavigation" Value="Once"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
      <Setter Property="Height" Value="Auto"/>
      <Setter Property="MinHeight" Value="28"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
                        <Setter Property="Background" Value="{StaticResource GrayBrush7}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal"/>
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked"/>
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused"/>
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3"/>
                                    <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource WhiteBrush}" IsHitTestVisible="false" Opacity="0" RadiusY="3" RadiusX="3"/>
                                    <Border x:Name="MouseOverBorder" Background="{StaticResource GrayBrush8}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Border x:Name="PressedBorder" Background="{StaticResource GrayBrush5}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3.5" Opacity="0"/>
                                    <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" RadiusY="4" RadiusX="4" Opacity="0" Margin="1" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Margin="1" RadiusY="3.5" RadiusX="3.5" Stroke="{StaticResource HighlightBrush}" StrokeThickness="1" Visibility="Collapsed"/>
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused"/>
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid"/>
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Right" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch">
                           <Path x:Name="BtnArrow" Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z " HorizontalAlignment="Right" Height="4" Margin="0,0,6,0" Stretch="Uniform" Width="8">
                              <Path.Fill>
                                 <SolidColorBrush x:Name="BtnArrowColor" Color="{StaticResource Gray3}"/>
                              </Path.Fill>
                           </Path>
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="ControlTextBlock" Text=" " TextWrapping="Wrap"/>
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle" Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" RadiusY="4" RadiusX="4" Margin="-1" Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{StaticResource TextBoxMouseOverBorderBrush}" RadiusX="3" RadiusY="3" Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource ControlsDisabledBrush}" IsHitTestVisible="false" RadiusX="3" RadiusY="3" Opacity="0"/>
                  <Border x:Name="ValidationErrorElement" BorderBrush="{StaticResource ControlsValidationBrush}" BorderThickness="1" CornerRadius="3" Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z" Fill="{StaticResource ValidationBrush5}" Margin="1,3,0,0"/>
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8" Fill="{StaticResource WhiteColorBrush}" Margin="1,3,0,0"/>
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup">
                     <Border Effect="{StaticResource DropShadowBrush}" x:Name="PopupBorder" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="Stretch" Height="Auto" BorderBrush="{StaticResource ComboBoxPopupBrush}" Background="{StaticResource WhiteBrush}">
                        <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}" >
                           <Button x:Name="ControlCloseButton" IsTabStop="False" HorizontalAlignment="Right" Style="{StaticResource ComboBoxPopupCloseButtonStyle}" VerticalAlignment="Center" />
                           <ScrollViewer x:Name="ScrollViewer"  MaxHeight="248" BorderThickness="0" Padding="1" HorizontalScrollBarVisibility="Hidden" >
                              <StackPanel Orientation="Vertical" Width="{TemplateBinding Width}">

                                 <ListBox x:Name="ControlListBox" SelectionMode="Single"
                                          ScrollViewer.HorizontalScrollBarVisibility="Hidden" ItemsSource="{TemplateBinding ItemsSource}" >
                                    <ListBox.ItemTemplate  >
                                       <DataTemplate >
                                          <StackPanel Orientation="Horizontal" Height="26" Margin="0,-8,0,-8" >
                                             <StackPanel Orientation="Horizontal" Visibility="{Binding IsOther, Converter={StaticResource OppositeVisibilityConverter}}">
                                                <TextBlock Text="{Binding Label1}" Style="{StaticResource CoreTextBlockStyle}" FontSize="12" Height="20"
                                                    Visibility="{Binding Label1, Converter={StaticResource VisibilityConverterNull}}"/>
                                                <TextBox Margin="0,0,0,0" Padding="0,-4,0,0"
                                                    Style="{StaticResource CoreFrequencyTextBoxStyle}"
                                                    VirtuosoCoreBehaviors:TextBoxFilters.NumericFormat="999"
                                                    Visibility="{Binding IsData1, Converter={StaticResource VisibilityConverter}}"
                                                    Text="{Binding Data1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBlock Text="{Binding Label2}" Style="{StaticResource CoreTextBlockStyle}" FontSize="12" Height="20"/>
                                                <TextBox Margin="0,0,0,0" Padding="0,-4,0,0"
                                                    Style="{StaticResource CoreFrequencyTextBoxStyle}"
                                                    VirtuosoCoreBehaviors:TextBoxFilters.NumericFormat="999"
                                                    Visibility="{Binding IsData2, Converter={StaticResource VisibilityConverter}}"
                                                    Text="{Binding Data2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                                <TextBlock Text="{Binding Label3}" Style="{StaticResource CoreTextBlockStyle}" FontSize="12" Height="20"/>
                                             </StackPanel>
                                             <StackPanel Orientation="Horizontal" Visibility="{Binding IsOther, Converter={StaticResource VisibilityConverter}}">
                                                <TextBlock Text="{Binding Label1}" Style="{StaticResource CoreTextBlockStyle}" FontSize="12" Height="20"
                                                    Visibility="{Binding Label1, Converter={StaticResource VisibilityConverterNull}}"/>
                                                <TextBox  Margin="0,0,0,0" Padding="0,-4,0,0" MinWidth="250" MaxWidth="300" MaxLength="60"
                                                    Style="{StaticResource CoreFrequencyTextBoxStyle}"
                                                    TextAlignment="Left"  Text="{Binding Data1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                             </StackPanel>
                                          </StackPanel>
                                       </DataTemplate>
                                    </ListBox.ItemTemplate>
                                 </ListBox>
                              </StackPanel>
                           </ScrollViewer>
                        </StackPanel>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
   <Style x:Key="CoreComboBoxServiceLineGrouping"
          TargetType="ComboBox"
          BasedOn="{StaticResource CoreComboBoxStyle}">
      <Setter Property="Padding"
              Value="6,4,25,4" />
      <Setter Property="Foreground"
              Value="{StaticResource TextBrush}" />
      <Setter Property="FontFamily"
              Value="{StaticResource ContentFontFamily}" />
      <Setter Property="FontSize"
              Value="{StaticResource ContentFontSize}" />
      <Setter Property="TextOptions.TextHintingMode"
              Value="Animated" />
      <Setter Property="Background">
         <Setter.Value>
            <SolidColorBrush Color="{StaticResource Gray7}" />
         </Setter.Value>
      </Setter>
      <Setter Property="HorizontalContentAlignment"
              Value="Left" />
      <Setter Property="BorderThickness"
              Value="1" />
      <Setter Property="TabNavigation"
              Value="Once" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
              Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
              Value="Auto" />
      <Setter Property="BorderBrush"
              Value="{StaticResource TextBoxBorderBrush}" />
      <Setter Property="Height"
              Value="Auto" />
      <Setter Property="MinHeight"
              Value="28" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <Grid.Resources>
                     <Style x:Name="comboToggleStyle"
                            TargetType="ToggleButton">
                        <Setter Property="Foreground"
                                Value="{StaticResource TextBrush}" />
                        <Setter Property="Background"
                                Value="{StaticResource GrayBrush7}" />
                        <Setter Property="BorderBrush"
                                Value="{StaticResource TextBoxBorderBrush}" />
                        <Setter Property="BorderThickness"
                                Value="1" />
                        <Setter Property="Padding"
                                Value="3" />
                        <Setter Property="Template">
                           <Setter.Value>
                              <ControlTemplate TargetType="ToggleButton">
                                 <Grid>
                                    <VisualStateManager.VisualStateGroups>
                                       <VisualStateGroup x:Name="CommonStates">
                                          <VisualState x:Name="Normal" />
                                          <VisualState x:Name="MouseOver">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="MouseOverBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Pressed">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="PressedBorder">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Disabled" />
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="CheckStates">
                                          <VisualState x:Name="Checked">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="CheckedRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="CheckedInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unchecked" />
                                       </VisualStateGroup>
                                       <VisualStateGroup x:Name="FocusStates">
                                          <VisualState x:Name="Focused">
                                             <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="FocusRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="FocusInnerRectangle">
                                                   <EasingDoubleKeyFrame KeyTime="0"
                                                                         Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                             </Storyboard>
                                          </VisualState>
                                          <VisualState x:Name="Unfocused" />
                                       </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Border x:Name="Background"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="3" />
                                    <Rectangle x:Name="DisabledVisualElement"
                                               Fill="{StaticResource WhiteBrush}"
                                               IsHitTestVisible="false"
                                               Opacity="0"
                                               RadiusY="3"
                                               RadiusX="3" />
                                    <Border x:Name="MouseOverBorder"
                                            Background="{StaticResource GrayBrush8}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3.5"
                                            Opacity="0" />
                                    <Border x:Name="PressedBorder"
                                            Background="{StaticResource GrayBrush5}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3.5"
                                            Opacity="0" />
                                    <Rectangle x:Name="FocusRectangle"
                                               Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                               RadiusY="4"
                                               RadiusX="4"
                                               Margin="-1"
                                               Opacity="0" />
                                    <Rectangle x:Name="FocusInnerRectangle"
                                               StrokeThickness="{TemplateBinding BorderThickness}"
                                               Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                               RadiusX="3"
                                               RadiusY="3"
                                               Opacity="0" />
                                    <Rectangle x:Name="CheckedRectangle"
                                               StrokeThickness="{TemplateBinding BorderThickness}"
                                               RadiusY="4"
                                               RadiusX="4"
                                               Opacity="0"
                                               Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                                    <Rectangle x:Name="CheckedInnerRectangle"
                                               StrokeThickness="{TemplateBinding BorderThickness}"
                                               RadiusY="4"
                                               RadiusX="4"
                                               Opacity="0"
                                               Margin="1"
                                               Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                                    <ContentPresenter x:Name="contentPresenter"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Content="{TemplateBinding Content}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Margin="{TemplateBinding Padding}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Rectangle x:Name="FocusVisualElement"
                                               IsHitTestVisible="false"
                                               Margin="1"
                                               RadiusY="3.5"
                                               RadiusX="3.5"
                                               Stroke="{StaticResource HighlightBrush}"
                                               StrokeThickness="1"
                                               Visibility="Collapsed" />
                                 </Grid>
                              </ControlTemplate>
                           </Setter.Value>
                        </Setter>
                     </Style>
                  </Grid.Resources>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="DisabledVisualElement">
                                 <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                       Value="0.5" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="FocusStates">
                        <VisualState x:Name="Focused">
                           <Storyboard>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="FocusRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0"
                                                       Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                              <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                             Storyboard.TargetName="FocusInnerRectangle">
                                 <EasingDoubleKeyFrame KeyTime="0"
                                                       Value="1" />
                              </DoubleAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unfocused" />
                        <VisualState x:Name="FocusedDropDown">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                             Storyboard.TargetProperty="(UIElement.Visibility)"
                                                             Storyboard.TargetName="PopupBorder">
                                 <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="ValidationStates">
                        <VisualState x:Name="Valid" />
                        <VisualState x:Name="InvalidUnfocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidFocused">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                             Storyboard.TargetName="ValidationErrorElement">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                             Storyboard.TargetName="validationTooltip">
                                 <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                       <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                 </DiscreteObjectKeyFrame>
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
                  <Border x:Name="ContentPresenterBorder">
                     <Grid>
                        <ToggleButton x:Name="DropDownToggle"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      HorizontalAlignment="Stretch"
                                      HorizontalContentAlignment="Right"
                                      Margin="0"
                                      Style="{StaticResource comboToggleStyle}"
                                      VerticalAlignment="Stretch">
                           <TextBlock Text="H"
                                      FontSize="16"
                                      FontWeight="Bold"/>
                           <!--<Path x:Name="BtnArrow"
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                          HorizontalAlignment="Right"
                                          Height="4"
                                          Margin="0,0,6,0"
                                          Stretch="Uniform"
                                          Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor"
                                                             Color="{StaticResource Gray3}" />
                                        </Path.Fill>
                                    </Path>-->
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                           <TextBlock x:Name="AdmissionGroupTextBlock"
                                      Text="" />
                        </ContentPresenter>
                     </Grid>
                  </Border>
                  <Rectangle x:Name="FocusRectangle"
                             Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                             RadiusY="4"
                             RadiusX="4"
                             Margin="-1"
                             Opacity="0" />
                  <Rectangle x:Name="FocusInnerRectangle"
                             StrokeThickness="{TemplateBinding BorderThickness}"
                             Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                             RadiusX="3"
                             RadiusY="3"
                             Opacity="0" />
                  <Rectangle x:Name="DisabledVisualElement"
                             Fill="{StaticResource ControlsDisabledBrush}"
                             IsHitTestVisible="false"
                             RadiusX="3"
                             RadiusY="3"
                             Opacity="0" />
                  <Border x:Name="ValidationErrorElement"
                          BorderBrush="{StaticResource ControlsValidationBrush}"
                          BorderThickness="1"
                          CornerRadius="3"
                          Visibility="Collapsed">
                     <ToolTipService.ToolTip>
                        <ToolTip x:Name="validationTooltip"
                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                 Placement="Right"
                                 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                 Template="{StaticResource ValidationToolTipTemplate}">
                           <ToolTip.Triggers>
                              <EventTrigger RoutedEvent="Canvas.Loaded">
                                 <BeginStoryboard>
                                    <Storyboard>
                                       <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible"
                                                                      Storyboard.TargetName="validationTooltip">
                                          <DiscreteObjectKeyFrame KeyTime="0">
                                             <DiscreteObjectKeyFrame.Value>
                                                <sys:Boolean>true</sys:Boolean>
                                             </DiscreteObjectKeyFrame.Value>
                                          </DiscreteObjectKeyFrame>
                                       </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                 </BeginStoryboard>
                              </EventTrigger>
                           </ToolTip.Triggers>
                        </ToolTip>
                     </ToolTipService.ToolTip>
                     <Grid Background="Transparent"
                           HorizontalAlignment="Right"
                           Height="12"
                           Margin="1,-4,-4,0"
                           VerticalAlignment="Top"
                           Width="12">
                        <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                              Fill="{StaticResource ValidationBrush5}"
                              Margin="1,3,0,0" />
                        <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                              Fill="{StaticResource WhiteColorBrush}"
                              Margin="1,3,0,0" />
                     </Grid>
                  </Border>
                  <Popup x:Name="Popup"
                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                     <Border x:Name="PopupBorder"
                             Effect="{StaticResource DropShadowBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             HorizontalAlignment="Stretch"
                             Height="Auto"
                             BorderBrush="{StaticResource ComboBoxPopupBrush}"
                             Background="{StaticResource WhiteBrush}">
                        <Grid Margin="0,0"
                                    Width="{TemplateBinding Width}">
                           <Grid.RowDefinitions>
                              <RowDefinition Height="Auto" />
                              <RowDefinition Height="Auto" />
                              <RowDefinition Height="Auto" />
                           </Grid.RowDefinitions>
                           <!-- -->
                           <!--<HyperlinkButton x:Name="controlHyperlinkButton"
                                                     Style="{StaticResource AddHyperlinkButton}"
                                                     Grid.Row="1"
                                                     Margin="2"
                                                     HorizontalAlignment="Left"
                                                     IsEnabled="{Binding Protected, Converter={StaticResource OppositeBoolConverter}}"
                                                     Command="{Binding DataContext.AddAdmissionGroupingCommand, ElementName=Popup, Mode=TwoWay}"
                                                     CommandParameter="{Binding}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Loaded">
                                                <i:InvokeCommandAction Command="{Binding DataContext.PopupTriggerLoaded, ElementName=Popup, Mode=TwoWay}"
                                                                    CommandParameter="{Binding ElementName=controlHyperlinkButton}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unloaded">
                                                <i:InvokeCommandAction Command="{Binding DataContext.PopupTriggerUnLoaded, ElementName=Popup, Mode=TwoWay}"
                                                                    CommandParameter="{Binding ElementName=controlHyperlinkButton}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </HyperlinkButton>-->
                           <Popup x:Name="controlPopup"
                                  Margin="80,-6,0,0"
                                  Grid.Row="0">
                              <i:Interaction.Triggers>
                                 <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding DataContext.PopupLoaded, ElementName=Popup, Mode=TwoWay}"
                                                        CommandParameter="{Binding ElementName=controlPopup}" />
                                 </i:EventTrigger>
                                 <i:EventTrigger EventName="Unloaded">
                                    <i:InvokeCommandAction Command="{Binding DataContext.PopupUnLoaded, ElementName=Popup, Mode=TwoWay}"
                                                        CommandParameter="{Binding ElementName=controlPopup}" />
                                 </i:EventTrigger>
                              </i:Interaction.Triggers>

                              <Border Effect="{StaticResource DropShadowBrush}"
                                      x:Name="PopupBorder2"
                                      BorderThickness="1"
                                      HorizontalAlignment="Stretch"
                                      Height="Auto"
                                      BorderBrush="{StaticResource ComboBoxPopupBrush}"
                                      Background="{StaticResource WhiteBrush}">
                                 <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Loaded">
                                       <i:InvokeCommandAction Command="{Binding DataContext.PopupChildLoaded, ElementName=Popup, Mode=TwoWay}"
                                                           CommandParameter="{Binding ElementName=PopupBorder2}" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Unloaded">
                                       <i:InvokeCommandAction Command="{Binding DataContext.PopupChildUnLoaded, ElementName=Popup, Mode=TwoWay}"
                                                           CommandParameter="{Binding ElementName=PopupBorder2}" />
                                    </i:EventTrigger>
                                 </i:Interaction.Triggers>
                                 <ListBox x:Name="controlListBox"
                                          SelectionMode="Single"
                                          SelectedValuePath="ServiceLineGroupingKey"
                                                     
                                          SelectedItem="{Binding SelectedServiceLineGroupItem, Mode=TwoWay}">
                                    <ListBox.ItemTemplate>
                                       <DataTemplate>
                                          <TextBlock HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"
                                                     TextWrapping="Wrap"
                                                     Style="{StaticResource CoreTextBlockStyle}"
                                                     Text="{Binding Name}" />
                                       </DataTemplate>
                                    </ListBox.ItemTemplate>
                                 </ListBox>
                              </Border>
                           </Popup>
                           <!-- -->

                           <toolkit:DockPanel Grid.Row="0"
                                              HorizontalAlignment="Stretch">
                              <Button x:Name="AdmissionGroupCloseButton"
                                      toolkit:DockPanel.Dock="Right"
                                      IsTabStop="False"
                                      HorizontalAlignment="Right"
                                      Style="{StaticResource ComboBoxPopupCloseButtonStyle}"
                                      VerticalAlignment="Center" />
                           </toolkit:DockPanel>
                           <StackPanel Orientation="Vertical"
                                       Grid.Row="2"
                                       Width="{TemplateBinding Width}">
                              <ScrollViewer x:Name="ScrollViewer"
                                            HorizontalScrollBarVisibility="Disabled"
                                            BorderThickness="0"
                                            Padding="1">
                                 <StackPanel Orientation="Vertical"
                                             Width="{TemplateBinding Width}">
                                    <ListBox x:Name="AdmissionGroupListBox"
                                             Margin="0,2,0,0"
                                             SelectionMode="Single"
                                             TabNavigation="Local"
                                             ItemsSource="{Binding TemplateBinding}">
                                       <ListBox.ItemTemplate>
                                          <DataTemplate>
                                             <Grid>
                                                <Grid.ColumnDefinitions>
                                                   <ColumnDefinition Width="2*" />
                                                   <ColumnDefinition Width="*" />
                                                   <ColumnDefinition Width="*" />
                                                   <ColumnDefinition Width="21" />
                                                </Grid.ColumnDefinitions>

                                                <VirtuosoCoreControls:vAsyncComboBox Grid.Column="0"
                                                                                     Margin="2,0"
                                                                                     x:Name="GroupingComboBox"
                                                                                     MinWidth="350"
                                                                                     VerticalAlignment="Center"
                                                                                     HorizontalAlignment="Left"
                                                                                     IsHitTestVisible="False"
                                                                                     IsTabStop="False"
                                                                                     DisplayMemberPath="ServiceLineGroupNameWithInactive"
                                                                                     SelectedValuePath="ServiceLineGroupingKey"
                                                                                     ItemsSource="{Binding DataContext.ServiceLineGroupingListDropDown, ElementName=Popup}"
                                                                                     SelectedValue="{Binding ServiceLineGroupingKey, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnNotifyDataErrors=True, Converter={StaticResource ComboBoxItemNullConverter}}">
                                                   <Popup />
                                                </VirtuosoCoreControls:vAsyncComboBox>
                                                <VirtuosoCoreControls:vDatePicker Grid.Column="1"
                                                                                  Margin="2,0"
                                                                                  x:Name="SLStartDate"
                                                                                  Width="130"
                                                                                  HorizontalAlignment="Left"
                                                                                  IsHitTestVisible="{Binding CanEditNonGroupDates, FallbackValue=False}"
                                                                                  IsTabStop="{Binding CanEditNonGroupDates, FallbackValue=false}"
                                                                                  DateObject="{Binding StartDate, Mode=TwoWay, NotifyOnValidationError=True}" />
                                                <VirtuosoCoreControls:vDatePicker Grid.Column="2"
                                                                                  Margin="2,0"
                                                                                  x:Name="SLEndDate"
                                                                                  Width="130"
                                                                                  IsHitTestVisible="{Binding CanEditNonGroupDates, FallbackValue=false}"
                                                                                  IsTabStop="{Binding CanEditNonGroupDates, FallbackValue=false}"                                                                                                  HorizontalAlignment="Left"
                                                                                  DateObject="{Binding EndDate, Mode=TwoWay, NotifyOnValidationError=True}" />
                                                <TextBlock Visibility="Collapsed"
                                                           Text="{Binding DataContext.BindingKeyForErrorNotify, Mode=TwoWay, NotifyOnValidationError=True, ElementName=Popup}"/>
                                                <!--<Button HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Width="21"
                                                                        Height="21"
                                                                        Grid.Column="3"
                                                                        Margin="2,0"
                                                                        Style="{StaticResource DeleteButtonStyle}"
                                                                        Command="{Binding DataContext.DeleteAdmissionGroupingCommand, ElementName=Popup}"
                                                                        CommandParameter="{Binding}"
                                                                        Visibility="{Binding IsNew, Converter={StaticResource VisibilityConverter}}" />-->

                                             </Grid>
                                          </DataTemplate>
                                       </ListBox.ItemTemplate>
                                    </ListBox>
                                 </StackPanel>
                              </ScrollViewer>
                           </StackPanel>
                        </Grid>
                     </Border>
                  </Popup>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>
